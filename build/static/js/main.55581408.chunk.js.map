{"version":3,"sources":["utility/global.jsx","services/clientService.js","components/Footer.jsx","components/bigLoader.js","components/widgets/storeCard.jsx","components/homePageHeading.jsx","components/Landing.jsx","http-common.js","components/login.jsx","actions/productActions.js","actions/types.js","adminComponents/common/nav.jsx","adminComponents/common/sideMenu.jsx","adminComponents/common/afterNav.jsx","adminComponents/bankDetail.jsx","components/register.jsx","components/NavBar.jsx","components/widgets/Review.jsx","components/widgets/reviewList.jsx","components/errorPage.jsx","components/widgets/ItemCard.jsx","components/widgets/order.jsx","adminComponents/social.jsx","components/ShopPage.jsx","components/contactUs.jsx","components/payment.jsx","components/loader.js","components/widgets/SideMenu.jsx","components/emptySearch.js","components/widgets/Listing.jsx","components/storeListing.jsx","adminComponents/dashboard_admin.jsx","adminComponents/dashboard_user.jsx","adminComponents/shopForm.jsx","adminComponents/productList.jsx","adminComponents/common/saveSuccess.jsx","adminComponents/productForm.jsx","adminComponents/productUpdate.jsx","adminComponents/shopSetting.jsx","adminComponents/account.jsx","components/productDetail.jsx","components/paymentSuccess.jsx","components/NavBarCustomerDash.jsx","components/customerOrder.jsx","components/customerAccount.jsx","components/paymentError.jsx","components/applicationSuccess.jsx","components/deliveryDetail.jsx","components/shopCreate.jsx","components/accountVerificationStatus.jsx","adminComponents/userOrder.jsx","adminComponents/orderDetail.jsx","adminComponents/storeReview.jsx","adminComponents/availableTime.jsx","adminComponents/postCodes.jsx","documents/privacy.jsx","documents/disclaimer.jsx","documents/termsAndCondition.jsx","reducers/productReducer.js","reducers/index.js","store.js","ProtectedRoute.js","App.js","serviceWorker.js","index.js"],"names":["daysOfWeek","ENDPOINT","SERVER_URL","DEFAULT_STORE_BANNER","DEFAULT_STORE_LOGO","MEAL_CREATE","MEAL_LIST","DASHBOARD_URL","days","formatCurrentDay","day","Date","getDay","formatClose","formatCurrentTime","oTime","cTime","getcurTime","moment","format","getClosingTime","getOpeningTime","style","color","SERVER_ERROR","DEFAULT_LOGO","DEFAULT_USER","ERROR_MSG","MISSING_USER_MSG","logout","localStorage","removeItem","asyncLocalStorage","key","value","Promise","resolve","then","setItem","getItem","getTempId","tempId","randNum","Math","floor","random","totalRating","ratingLength","length","displayRating","productRatings","ratingCount","rating","parseInt","formatPrice","price","parseFloat","toFixed","toastOptions","hasError","autoClose","position","toast","POSITION","TOP_CENTER","type","TYPE","ERROR","INFO","hideProgressBar","titleCase","str","toLowerCase","split","i","charAt","toUpperCase","slice","join","nextOpening","shopTime","shopTimes","arrayLength","currentIndex","indexOf","header","token","headers","Authorization","products","data","a","http","post","productUpdate","id","patch","shopByOrigin","productByCategory","productById","get","storeListing","storeListingClose","storeFrontPage","listingSearch","productsByShopId","socialAccess","createShop","updateShop","hasAuth","transaction","transactionByUser","transactionByShop","stripePay","transactionById","orderMessage","getCartByShopId","shopId","createProduct","createHomeAddress","createReviewResponse","createShopReviewResponse","createReview","findOpeningDaysByShop","createOpeningDay","createProductReview","shopTypes","unitTypes","userUpdate","settings","bankDetail","fetchShopPreOrder","updatePreOrder","findShopByUser","findReviewByShop","findReviewByProduct","createProductRatingResponse","findPostCodesByShop","createPostCode","deletePostCode","delete","resendVerifyEmail","findProductReviewByShop","findShopByName","findShopByUrl","findEmail","findShopById","productsByUser","updateUserAddress","findUserById","code","userId","Footer","state","category","origin","componentDidMount","clientService","origins","setState","this","Segment","inverted","vertical","margin","padding","Container","textAlign","Grid","divided","stackable","Column","width","Header","as","content","List","link","Item","to","map","item","name","display","Divider","section","Image","centered","size","src","horizontal","href","Component","bigLoader","props","Dimmer","active","Loader","ItemCard","logo","banner","shopName","shopUrl","minTime","maxTime","percentageDiscount","minOrder","discountAmount","deliveryPrice","storeTime","ratings","Origin","isPreOrder","isOpen","timeObject","result","store","firstStore","hasPassed","counter","checked","dayNum","storeNextOpening","paddingBottom","Card","raised","fluid","Content","floated","circular","height","objectFit","objectPosition","Meta","extra","Table","very","basic","unstackable","singleLine","compact","Row","Cell","Icon","Description","Rating","maxRating","disabled","icon","Label","paddingTop","opening","Button","HomepageHeading","handleSubmit","e","preventDefault","history","push","backgroundColor","text","fontSize","mobile","fontWeight","marginBottom","marginTop","Input","placeholder","action","onClick","withRouter","getWidth","window","Responsive","onlyTablet","minWidth","innerWidth","DesktopContainer","hideFixedMenu","fixed","showFixedMenu","children","Visibility","once","onBottomPassed","onBottomPassedReverse","backgroundImage","minHeight","repeat","Menu","pointing","secondary","MobileContainer","sidebarOpened","maxWidth","onlyMobile","Sidebar","Pusher","dimmed","ResponsiveContainer","Landing","topMeals","padded","columns","VirtualShop","photo","axios","defaults","withCredentials","create","baseURL","Login","email","password","loading","onChange","target","login","dataObj","loginResponse","dashType","role","location","from","pathname","replace","message","responseGoogle","response","responseFacebook","res","graphDomain","nameArray","firstName","lastName","pop","source","catch","err","showAlert","alert","className","Col","lg","onSubmit","verticalAlign","Form","stacked","iconPosition","Message","addUser","dispatch","ClientService","user","payload","fetchUser","Nav","handleItemClick","activeItem","dashboard","nextProps","connect","SideMenu","error","componentWillReceiveProps","preOrderResponse","preOrder","Checkbox","toggle","label","AfterNav","navigate","form","BankDetail","sortCode","accountNumber","accountName","bankName","console","log","success","attached","Field","required","maxLength","Register","orders","register","Group","widths","NavBar","avatar","handlerLogout","handlerOrder","handlerAccount","marginRight","Dropdown","Review","title","isShowForm","handleRate","isForShop","productId","poster","info","floating","onRate","defaultRating","TextArea","ReviewList","collapsed","replyContent","reply","ratingResponses","handleCollapse","initialColapseState","replyResultForUpdate","replyResult","unshift","User","createdAt","Comment","Avatar","Metadata","Author","Text","fromNow","Actions","Action","comment","Shop","handleReply","ratingId","ErrorPage","handleOnClick","url","defaultImage","Fragment","activeIndex","handleClick","titleProps","index","newIndex","product","image","Category","ingredients","isForMenu","ui","float","Accordion","styled","Title","HeaderCell","Body","handleAdd","danger","Order","quantity","handleRemove","Social","facebook","twitter","instagram","findSocialById","social","labelPosition","require","ShopPage","isAllowUpdate","about","notice","bannerPreviewUrl","logoPreviewUrl","shopTypeText","lat","lng","firstAddress","postCode","city","comments","socials","offerDiscount","subTotal","total","redirect","posterName","sunMinDate","sunMaxDate","monMinDate","monMaxDate","tueMinDate","tueMaxDate","wedMinDate","wedMaxDate","thurMinDate","thurMaxDate","friMinDate","friMaxDate","satMinDate","satMaxDate","hasSun","hasMon","hasTue","hasWed","hasThur","hasFri","hasSat","contextRef","createRef","match","params","getShop","shopBanners","ShopType","City","Geocode","setApiKey","process","fromAddress","results","geometry","openingTime","sunday","Sunday","monday","Monday","tuesday","Tuesday","wednesday","Wednesday","thursday","Thursday","friday","Friday","saturday","Saturday","closing","getCartByTempId","getCart","handleAddOrder","newOrder","findOrder","find","order","newOfferDiscount","newTotal","findDiscount","getTotal","saveToServer","handleRemoveOrder","currentOrder","filter","filteredOrder","handleTabChange","nextState","cart","socialRender","mapStyles","panes","menuItem","render","Tab","Pane","Dimmable","meta","description","google","zoom","initialCenter","styles","orderLength","hasOrder","isShowDeliveryLimBox","Ref","innerRef","primary","onTabChange","GoogleApiWrapper","apiKey","ContactUs","reason","alertMessage","onChangeDropdown","hasExpiredLinkForSellerReg","hasExpired","contactUs","frameborder","border","allowfullscreen","aria-hidden","tabindex","positive","options","selection","Payment","year","month","selectedYear","selectedMonth","sel","by","shopObject","stripeToken","desc","amount","onSuccess","payment","paymentID","paymentId","paymentEmail","stripeKey","env","client","sandbox","production","currency","locale","tagline","shape","onError","onCancel","loader","inline","hasOrigin","hasCategory","originResponse","categoryResponse","updateProduct","onChangeCategory","updateCategory","menu","shops","originEvent","Flag","categoryEvent","productsByOrigin","open","close","getMealByCategoryId","emptySearch","Listing","hasListing","productsClose","stores","search","fetchProducts","storeResponse","onSearch","propProduct","productClose","newProducts","newProduct","paddingLeft","wrapped","seller","nextOpeningTime","openingTimes","time","sort","b","currentDayNum","nextday","prepareTime","hour","min","items","closeItems","imageUrl","StoreListing","closeStores","categories","autoCompleteResult","meals","searchVal","loadingCategory","loadingStore","closeTitle","storeCloseResponse","searchSelect","searchResponse","handleSearchChange","autoCompleteResponse","originId","openDesc","closeDesc","categoryId","categoryStyles","infinite","speed","arrows","slidesToShow","slidesToScroll","responsive","breakpoint","Search","showNoResults","input","onResultSelect","onSearchChange","imagePath","Dashboard","hasEmailVerified","showTemp","isSeller","shop","setTimeout","sm","xs","warning","DashboardUser","ShopForm","initialShopName","initialShopUrl","hasSave","selectedCity","hasShop","selectedLogo","selectedBanner","secondAddress","cityText","isDuplicateUrl","isDuplicateName","selectedOrigin","originText","loadingOrigin","loadingCity","hasLoaded","cityId","fileChangedHandler","event","files","reader","FileReader","onloadend","readAsDataURL","fileChangedHandler2","concat","cities","cityResponse","formData","FormData","append","updateResponse","onBlur","nameAlert","urlAlert","imagePreviewUrl","alt","class","defaultValue","Popup","trigger","maxlength","hasData","celled","fullWidth","discountPrice","colSpan","SaveSuccess","btnText1","btnText2","url1","url2","changePage","marginLeft","count","ProductForm","unitResponse","unitType","fileChangedHandlerForPhoto","selectedPhoto","photoPreviewUrl","onUpload","selectedUnitType","selectedCategory","weight","isLockButton","isSubmitLoading","JSON","stringify","removeIngredient","addIngredient","ingredient","buttonRef","React","loadedFiles","hasImageLimit","bind","Select","step","getMealById","Unit","unitText","categoryText","oldPhoto","ShopSetting","minText","hourText","selectedMin","selectedHour","cboHours","cboMins","max","hidden","Account","myPhoto","userAlert","ProductDetail","discountprice","productImages","overallRating","rounded","PaymentSuccess","NavBarCustomerDash","Breadcrumb","Section","caption","CustomerOrder","refNo","soldProducts","CustomerAccount","readOnly","heigth","ApplicationSuccess","verify","DeliveryDetail","phone","auth","ShopCreate","emailMessage","isDuplicateEmail","isValidationError","validationMsg","scrollTo","top","behavior","onHandleTelephoneChange","Number","onBlurEmail","hasEmail","validationAlert","emailAlert","readonly","AccountVerificationStatus","isSuccess","storeVerification","UserOrder","OrderDetail","orderId","print","StoreReview","shopResult","reviewList","review","setHours","AvailableTime","getShopOpeningDays","arr","sunId","selectedSunMin","selectedSunMax","sunChecked","monId","selectedMonMin","selectedMonMax","monChecked","tueId","selectedTueMin","selectedTueMax","tueChecked","wedId","selectedWedMin","selectedWedMax","wedChecked","thurId","selectedThurMin","selectedThurMax","thurChecked","friId","selectedFriMin","selectedFriMax","friChecked","satId","selectedSatMin","selectedSatMax","satChecked","handleSunMax","date","_d","handleSunMin","handleMonMin","handleMonMax","handleTueMin","handleTueMax","handleWedMin","handleWedMax","handleThurMin","handleThurMax","handleFriMin","handleFriMax","handleSatMin","handleSatMax","onChangeCheck","utils","MomentUtils","KeyboardButtonProps","PostCode","postCodes","removePostCode","addPostCode","Privacy","Disclaimer","TermsAndCondition","initialState","combineReducers","middleware","thunk","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","ProtectedRoute","ComponentToProtect","App","exact","path","component","PaymentError","ProductList","ProductUpdate","ShopSocial","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.55581408.chunk.js","sourcesContent":["import clientService from \"../services/clientService\";\r\nimport { toast } from \"react-toastify\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nconst daysOfWeek = [\r\n  \"Sunday\",\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\",\r\n];\r\n\r\nexport const LATER_TODAY = \"later_today\";\r\nexport const OPEN = \"open\";\r\nexport const NOT_OPEN = \"not_open\";\r\n\r\nexport const DAYS = daysOfWeek;\r\nexport const ENDPOINT = \"https://api.foodengo.co.uk/\";\r\n//export const ENDPOINT = \"http://localhost:8000/\";\r\nexport const SERVER_URL = `${ENDPOINT}api`;\r\nexport const IMAGE_URL = ``;\r\nexport const DEFAULT_STORE_BANNER = `${ENDPOINT}uploads/default_banner.png`;\r\nexport const DEFAULT_STORE_LOGO = `${ENDPOINT}uploads/default_logo.png`;\r\n// export const SERVER_URL = \"https://foodengo.herokuapp.com/api\";\r\n// export const IMAGE_URL = \"https://foodengo.herokuapp.com/uploads/category/\";\r\n//export const DEFAULT_BANNER = \"https://foodengo.herokuapp.com/uploads/default_banner.png\";\r\n//export const DEFAULT_STORE_LOGO = \"https://foodengo.herokuapp.com/uploads/default_logo.png\";\r\nexport const MEAL_CREATE = \"/meal/food_reg\";\r\nexport const MEAL_LIST = \"/meal/food_list\";\r\nexport const MEAL_UPDATE = \"/meal/update/:id\";\r\nexport const SHOP_CREATE = \"/seller_reg\";\r\nexport const LOGIN_URL = \"/login\";\r\nexport const ACCOUNT_VERIFICATION = \"/account_verification/:code\";\r\nexport const REGISTER_URL = \"/register\";\r\nexport const LISTING_URL = \"/listing\";\r\nexport const MY_ACCOUNT = \"/myAccount\";\r\nexport const DASHBOARD_URL = \"/dashboard_admin\";\r\nexport const DASHBOARD_USER_URL = \"/dashboard_user\";\r\nexport const TERMS_AND_CONDITION = \"/terms_and_conditions\";\r\nexport const SHOP_SETTING_URL = \"/shop/settings\";\r\nexport const CUSTOMER_ORDER = \"/my-orders\";\r\nexport const CUSTOMER_ACCOUNT = \"/my-account\";\r\nexport const PRIVACY_URL = \"/user-seller/privacy\";\r\nexport const DISCLAIMER = \"/user/disclaimer\";\r\nexport const CONTACT_US = \"/contact_us\";\r\nexport const SHOP_SOCIAL_URL = \"/shop/social\";\r\nexport const AVAILABILITY_URL = \"/shop/opening-hours\";\r\nexport const USER_ORDER_URL = \"/user/order\";\r\nexport const SHOP_SIGNUP = \"/business-signup\";\r\nexport const SHOP_REVIEW = \"/mystore-review\";\r\nexport const DELIVERY_DETAIL_URL = \"/delivery/detail/:by/:sel\";\r\nexport const PAYMENT_URL = \"/payment/:by/:sel\";\r\nexport const PRODUCT_DETAIL_URL = \"/item_meal/:id\";\r\nexport const PAYMENT_SUCCESS_URL = \"/payment/success/:by/:sel\";\r\nexport const PAYMENT_ERROR_URL = \"/payment/error/:by/:sel\";\r\nexport const SHOP_PAGE_URL = \"/:shopUrl\";\r\nexport const ORDER_DETAIL_URL = \"/user/order/:id\";\r\nexport const BANK_DETAIL_URL = \"/seller/bank_details\";\r\nexport const POST_CODES_URL = \"/delivery/post_codes\";\r\nexport const VENDOR_APPLY_SUCCESS = \"/food_vendor/application-success/:id\";\r\nexport const days = {\r\n  Monday: \"Monday\",\r\n  Tuesday: \"Tuesday\",\r\n  Wednesday: \"Wednesday\",\r\n  Thursday: \"Thursday\",\r\n  Friday: \"Friday\",\r\n  Saturday: \"Saturday\",\r\n  Sunday: \"Sunday\",\r\n};\r\n\r\nexport const formatCurrentDay = (day) => {\r\n  const currentDay = daysOfWeek[new Date().getDay()];\r\n  if (currentDay == day) {\r\n    return <strong>{day}</strong>;\r\n  } else {\r\n    return day;\r\n  }\r\n};\r\n\r\nexport const storeNextOpening = (timeObject) => {\r\n  //alert(JSON.stringify(timeObject))\r\n  const days = new Date().getDay();\r\n  const day = daysOfWeek[days];\r\n\r\n  let result;\r\n  let store;\r\n  let firstStore;\r\n  let hasPassed = false;\r\n\r\n  let counter = 0;\r\n  for (var i in timeObject) {\r\n    if (timeObject[i].checked === true) {\r\n      //console.log(i)\r\n      if (counter == 0) {\r\n        result = firstStore = timeObject[i];\r\n      }\r\n      if (timeObject[i].dayNum === days) {\r\n        result = timeObject[i];\r\n        hasPassed = true;\r\n        break;\r\n      }\r\n      if (timeObject[i].dayNum > days) {\r\n        result = timeObject[i];\r\n        hasPassed = true;\r\n        break;\r\n      }\r\n      store = timeObject[i];\r\n      counter++;\r\n    }\r\n  }\r\n  if (!hasPassed && store) {\r\n    if (store.dayNum != firstStore.dayNum) {\r\n      result = firstStore;\r\n    } else {\r\n      result = store;\r\n    }\r\n    //console.log(store.day)\r\n  }\r\n  return result;\r\n};\r\nexport const formatClose = (day) => {\r\n  const closed = \"Closed\";\r\n  const currentDay = daysOfWeek[new Date().getDay()];\r\n  if (currentDay == day) {\r\n    return <strong>{closed}</strong>;\r\n  } else {\r\n    return closed;\r\n  }\r\n};\r\nexport const formatCurrentTime = (day, oTime, cTime) => {\r\n  const currentDay = daysOfWeek[new Date().getDay()];\r\n\r\n  if (currentDay == day) {\r\n    const getcurTime = moment(new Date()).format(\"HH:mm\");\r\n    const getClosingTime = moment(cTime).format(\"HH:mm\");\r\n    const getOpeningTime = moment(oTime).format(\"HH:mm\");\r\n\r\n    if (getcurTime > getClosingTime) {\r\n      return <strong style={{ color: \"red\" }}>Closed</strong>;\r\n    } else if (getOpeningTime > getcurTime && getClosingTime > getcurTime) {\r\n      return <strong>{`Opens ${moment(oTime).format(\"LT\")}`}</strong>;\r\n    } else return <strong>{`Closes ${moment(cTime).format(\"LT\")}`}</strong>;\r\n  } else {\r\n    return `${moment(oTime).format(\"LT\")} - ${moment(cTime).format(\"LT\")}`;\r\n  }\r\n};\r\nexport const SERVER_ERROR =\r\n  \"Your request can't be completed at the moment. Please try again later.\";\r\n\r\nexport const DEFAULT_LOGO =\r\n  \"https://react.semantic-ui.com/images/wireframe/image.png\";\r\nexport const DEFAULT_BANNER = \"/images/default-banner.jpg\";\r\nexport const DEFAULT_USER = \"/images/user.jpg\";\r\nexport const CRED = \"_fb_yiumi\";\r\nexport const TEMP_ID = \"temp_id\";\r\n\r\nexport const IMG_MAX_SIZE = 5;\r\nexport const ERROR_MSG =\r\n  \"Your request could not be saved at the moment, please kindly Foodengo.\";\r\nexport const MISSING_USER_MSG =\r\n  \"Current user details can't be resolved, kindly relogin and retry.\";\r\nexport const getUserProfile = function () {\r\n  return clientService.hasAuth().then((result) => {\r\n    return result.data.data;\r\n  });\r\n  //return JSON.parse(localStorage.getItem(CRED));\r\n};\r\nexport const setUserProfile = function (value) {\r\n  localStorage.setItem(CRED, JSON.stringify(value));\r\n};\r\n\r\nexport const getUserToken = () => {\r\n  return localStorage.getItem(\"tk\");\r\n};\r\nexport const scrollToTop = () => {\r\n  return window.scrollTo({\r\n    top: 0,\r\n    behavior: \"smooth\",\r\n  });\r\n};\r\nexport const logout = () => {\r\n  return localStorage.removeItem(\"tk\");\r\n};\r\n\r\nexport const asyncLocalStorage = {\r\n  setItem: function (key, value) {\r\n    return Promise.resolve().then(function () {\r\n      localStorage.setItem(key, value);\r\n    });\r\n  },\r\n  getItem: function (key) {\r\n    return Promise.resolve().then(function () {\r\n      return localStorage.getItem(key);\r\n    });\r\n  },\r\n};\r\n\r\nexport const getTempId = function () {\r\n  const tempId = localStorage.getItem(TEMP_ID);\r\n  if (tempId) return tempId;\r\n  else {\r\n    const randNum = Math.floor(Math.random() * 102233455555555 + 1);\r\n    localStorage.setItem(TEMP_ID, randNum);\r\n    return randNum;\r\n  }\r\n};\r\nexport const purgeTemp = function () {\r\n  return localStorage.removeItem(TEMP_ID);\r\n};\r\nexport const totalRating = (totalRating) => {\r\n  let ratingLength = totalRating.length;\r\n  return ratingLength > 1\r\n    ? `${ratingLength} reviews`\r\n    : `${ratingLength} review`;\r\n};\r\nexport const displayRating = (productRatings) => {\r\n  let ratingCount = 0;\r\n  for (let rating of productRatings) {\r\n    ratingCount += parseInt(rating.rating);\r\n  }\r\n  return ratingCount / productRatings.length;\r\n};\r\n\r\nexport const formatPrice = (price) => {\r\n  return `£${parseFloat(price).toFixed(2)}`;\r\n};\r\nexport const toastOptions = (hasError = false) => {\r\n  return {\r\n    autoClose: 3000,\r\n    position: toast.POSITION.TOP_CENTER,\r\n    type: hasError ? toast.TYPE.ERROR : toast.TYPE.INFO,\r\n    hideProgressBar: true,\r\n  };\r\n};\r\n\r\nexport const isShopOpen = (shopTime) => {\r\n  const convertedTime = moment(new Date()).format(\"HH:mm\");\r\n  if (shopTime.oTime > convertedTime && shopTime.cTime > convertedTime) {\r\n    return LATER_TODAY;\r\n  } else return NOT_OPEN;\r\n};\r\nexport const titleCase = (str) => {\r\n  str = str.toLowerCase();\r\n  str = str.split(\" \");\r\n\r\n  for (var i = 0; i < str.length; i++) {\r\n    str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);\r\n  }\r\n\r\n  return str.join(\" \");\r\n};\r\nexport const nextOpening = (shopTime, shopTimes) => {\r\n  const arrayLength = shopTimes.length;\r\n  let currentIndex = shopTimes.indexOf(shopTime);\r\n  let nextIndex;\r\n  if (currentIndex + 1 === arrayLength) {\r\n    nextIndex = 0;\r\n  } else {\r\n    nextIndex = ++currentIndex;\r\n  }\r\n\r\n  return shopTimes[nextIndex];\r\n};\r\n","import http from \"axios\";\r\n\r\nimport { SERVER_URL, asyncLocalStorage } from \"../utility/global\";\r\nconst TOKEN = \"tk\";\r\nfunction header(token) {\r\n  if (token) {\r\n    return {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ` + token,\r\n      },\r\n    };\r\n    // return {\r\n    //   \"Content-type\": \"application/json\",\r\n    //   Authorization: `Bearer ` + token,\r\n    // };\r\n  } else {\r\n    return {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n  }\r\n}\r\nclass ClientService {\r\n  products = async (data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.post(`${SERVER_URL}/products`, data, header(token));\r\n  };\r\n\r\n  contactUs(data) {\r\n    return http.post(`${SERVER_URL}/contactUs`, data);\r\n  }\r\n  productUpdate = async (id, data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.patch(`${SERVER_URL}/product/${id}`, data, header(token));\r\n  };\r\n\r\n  shopByOrigin = async (data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.post(`${SERVER_URL}/shopByOrigin`, data, header(token));\r\n  };\r\n  productByCategory = async (data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.post(`${SERVER_URL}/shop/productByCategory`, data, header(token));\r\n  };\r\n  \r\n  storeVerification(code) {\r\n    return http.get(`${SERVER_URL}/shop/activateByLink/` + code);\r\n  }\r\n\r\n  productById = async (id) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.get(`${SERVER_URL}/product/` + id, header(token));\r\n  };\r\n\r\n  storeListing = async () => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.post(`${SERVER_URL}/storeListing`, header());\r\n  };\r\n\r\n  storeListingClose = async () => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.post(`${SERVER_URL}/storeListingClose`, header());\r\n  };\r\n\r\n  storeFrontPage = async () => {\r\n    return http.post(`${SERVER_URL}/storeFrontPage`, header());\r\n  };\r\n\r\n  listingSearch = async (data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.post(`${SERVER_URL}/listingSearch`, data, header());\r\n  };\r\n\r\n  productsByShopId = async (id) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.get(`${SERVER_URL}/products/byShopId/` + id, header(token));\r\n  };\r\n\r\n  origins() {\r\n    return http.get(`${SERVER_URL}/origins`);\r\n  }\r\n\r\n  cities() {\r\n    return http.get(`${SERVER_URL}/cities`);\r\n  }\r\n\r\n  durations() {\r\n    return http.get(`${SERVER_URL}/shop/duration`);\r\n  }\r\n\r\n  socialTypes() {\r\n    return http.get(`${SERVER_URL}/socialTypes`);\r\n  }\r\n\r\n  social(data) {\r\n    return http.post(`${SERVER_URL}/social`, data);\r\n  }\r\n\r\n  findSocialById(userId) {\r\n    return http.get(`${SERVER_URL}/social/${userId}`);\r\n  }\r\n\r\n  login(data) {\r\n    return http.post(`${SERVER_URL}/user/login`, data, header());\r\n  }\r\n\r\n  register(data) {\r\n    return http.post(`${SERVER_URL}/user/register`, data);\r\n  }\r\n\r\n  socialAccess = async (data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.post(`${SERVER_URL}/user/socialRegister`, data, header(token));\r\n  };\r\n\r\n  createShop = async (data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.post(`${SERVER_URL}/create-shop`, data, header(token));\r\n  };\r\n\r\n  updateShop = async (data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.post(`${SERVER_URL}/shop`, data, header(token));\r\n  };\r\n\r\n  hasExpiredLinkForSellerReg(id) {\r\n    return http.get(`${SERVER_URL}/hasUserExpired/${id}`);\r\n  }\r\n\r\n  category() {\r\n    return http.get(`${SERVER_URL}/categories`);\r\n  }\r\n\r\n  logout() {\r\n    return http.post(`${SERVER_URL}/logout`);\r\n  }\r\n\r\n  getMealByCategoryId(id) {\r\n    return http.get(`${SERVER_URL}/product/category/${id}`);\r\n  }\r\n\r\n  hasAuth = async (data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.get(`${SERVER_URL}/user/isLogin`, header(token));\r\n  };\r\n\r\n  cart(data) {\r\n    return http.post(`${SERVER_URL}/cart`, data);\r\n  }\r\n  transaction = async (data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.post(`${SERVER_URL}/transaction`, data, header(token));\r\n  };\r\n\r\n  transactionByUser = async (data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.post(`${SERVER_URL}/user/transaction`, data, header(token));\r\n  };\r\n\r\n  transactionByShop = async (data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.post(`${SERVER_URL}/shop/transaction`, data, header(token));\r\n  };\r\n\r\n  stripePay = async (data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.post(`${SERVER_URL}/stripePay`, data, header(token));\r\n  };\r\n\r\n  transactionById = async (id) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.get(`${SERVER_URL}/shop/transaction/${id}`, header(token));\r\n  };\r\n\r\n  /* This route updates order message if there is one, and takes a user to payment. \r\n   If there is no order associated with tempId and ShopId, it returns 404  */\r\n  orderMessage = async (data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.post(`${SERVER_URL}/order/messageUpdate`, data, header(token));\r\n  };\r\n\r\n  getCartByTempId(data) {\r\n    return http.post(`${SERVER_URL}/retriveCartByTempId`, data);\r\n  }\r\n\r\n  getCartByShopId = async (shopId) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.get(\r\n      `${SERVER_URL}/retriveCartByShopId/${shopId}`,\r\n      header(token)\r\n    );\r\n  };\r\n\r\n  createProduct = async (data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.post(`${SERVER_URL}/product`, data, header(token));\r\n  };\r\n\r\n  createHomeAddress = async (data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.post(`${SERVER_URL}/homeAddress`, data, header(token));\r\n  };\r\n\r\n  createReviewResponse = async (data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.post(\r\n      `${SERVER_URL}/productRatingResponse`,\r\n      data,\r\n      header(token)\r\n    );\r\n  };\r\n\r\n  createShopReviewResponse = async (data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.post(`${SERVER_URL}/ratingResponse`, data, header(token));\r\n  };\r\n  createReview = async (data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.post(`${SERVER_URL}/rating`, data, header(token));\r\n  };\r\n\r\n  findOpeningDaysByShop = async (data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.post(`${SERVER_URL}/openingDaysByShop`, data, header(token));\r\n  };\r\n  createOpeningDay = async (data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.post(`${SERVER_URL}/openingDay`, data, header(token));\r\n  };\r\n\r\n  createProductReview = async (data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.post(`${SERVER_URL}/productRating`, data, header(token));\r\n  };\r\n\r\n  shopTypes = async () => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.get(`${SERVER_URL}/shopTypes`, header(token));\r\n  };\r\n  unitTypes = async () => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.get(`${SERVER_URL}/units`, header(token));\r\n  };\r\n  userUpdate = async (id, data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.patch(`${SERVER_URL}/user/${id}`, data, header(token));\r\n  };\r\n\r\n  settings = async (id, data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.patch(`${SERVER_URL}/settings/${id}`, data, header(token));\r\n  };\r\n\r\n  bankDetail = async (id, data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.patch(`${SERVER_URL}/bankDetail/${id}`, data, header(token));\r\n  };\r\n\r\n  fetchShopPreOrder = async (data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.post(`${SERVER_URL}/fetchShopPreOrder`, data, header(token));\r\n  };\r\n  updatePreOrder = async (id, data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.patch(`${SERVER_URL}/preOrder/${id}`, data, header(token));\r\n  };\r\n\r\n  findShopByUser = async (id) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.get(`${SERVER_URL}/shops/byUser/${id}`, header(token));\r\n  };\r\n\r\n  findReviewByShop = async (data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.post(`${SERVER_URL}/rating/shop`, data, header(token));\r\n  };\r\n\r\n  findReviewByProduct = async (data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.post(\r\n      `${SERVER_URL}/productRating/product`,\r\n      data,\r\n      header(token)\r\n    );\r\n  };\r\n  createProductRatingResponse = async (data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.post(\r\n      `${SERVER_URL}/productRatingResponse`,\r\n      data,\r\n      header(token)\r\n    );\r\n  };\r\n  findPostCodesByShop = async (data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.post(`${SERVER_URL}/postCodesByShop`, data, header(token));\r\n  };\r\n\r\n  createPostCode = async (data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.post(`${SERVER_URL}/postCode`, data, header(token));\r\n  };\r\n\r\n  deletePostCode = async (id) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.delete(`${SERVER_URL}/postCode/${id}`, header(token));\r\n  };\r\n\r\n  resendVerifyEmail = async (data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.post(\r\n      `${SERVER_URL}/resendEmailVerification`,\r\n      data,\r\n      header(token)\r\n    );\r\n  };\r\n\r\n  findProductReviewByShop = async (data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.post(`${SERVER_URL}/productRating/shop`, data, header(token));\r\n  };\r\n  findShopByName = async (data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.post(`${SERVER_URL}/shopByName`, data, header(token));\r\n  };\r\n\r\n  findShopByUrl = async (data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.post(`${SERVER_URL}/shopByUrl`, data, header(token));\r\n  };\r\n\r\n  findEmail = async (data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.post(`${SERVER_URL}/findEmail`, data, header(token));\r\n  };\r\n\r\n  findShopById = async (id) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.get(`${SERVER_URL}/shop/${id}`, header(token));\r\n  };\r\n  productsByUser = async (data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.post(`${SERVER_URL}/product/byUser`, data, header(token));\r\n  };\r\n\r\n  updateUserAddress = async (data) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.post(`${SERVER_URL}/userAddress/update`, data, header(token));\r\n  };\r\n  findUserById = async (id) => {\r\n    const token = await asyncLocalStorage.getItem(TOKEN);\r\n    return http.get(`${SERVER_URL}/user/${id}`, header(token));\r\n  };\r\n}\r\n\r\nexport default new ClientService();\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Divider,\r\n  Dropdown,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  List,\r\n  Menu,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  REGISTER_URL,\r\n  LOGIN_URL,\r\n  SHOP_SIGNUP,\r\n  TERMS_AND_CONDITION,\r\n  PRIVACY_URL,\r\n  DISCLAIMER,\r\n  LISTING_URL,\r\n  CONTACT_US,\r\n} from \"../utility/global\";\r\nimport clientService from \"../services/clientService\";\r\n\r\nclass Footer extends Component {\r\n  state = {\r\n    category: [],\r\n    origin: [],\r\n  };\r\n  componentDidMount = async () => {\r\n    const category = await clientService.category();\r\n    const origin = await clientService.origins();\r\n\r\n    this.setState({\r\n      category: category.data.data,\r\n      origin: origin.data.data,\r\n    });\r\n  };\r\n  render() {\r\n    const { category, origin } = this.state;\r\n    return (\r\n      <Segment\r\n        inverted\r\n        vertical\r\n        style={{ margin: \"5em 0em 0em\", padding: \"5em 0em\" }}\r\n      >\r\n        <Container textAlign=\"center\">\r\n          <Grid divided inverted stackable>\r\n            <Grid.Column width={3}>\r\n              <Header inverted as=\"h4\" content=\"Customer service\" />\r\n              <List link inverted>\r\n                <List.Item as=\"a\">Contact us</List.Item>\r\n                <List.Item>\r\n                  <Link to={LOGIN_URL}>Log in</Link>\r\n                </List.Item>\r\n                <List.Item>\r\n                  <Link to={REGISTER_URL}>Sign up</Link>\r\n                </List.Item>\r\n                <List.Item>\r\n                  <Link to={REGISTER_URL}>My account</Link>\r\n                </List.Item>\r\n                <List.Item>\r\n                  <Link to={SHOP_SIGNUP}>Vendor sign up</Link>\r\n                </List.Item>\r\n              </List>\r\n            </Grid.Column>\r\n            <Grid.Column width={3}>\r\n              <Header inverted as=\"h4\" content=\"Origin\" />\r\n              <List link inverted>\r\n                {origin.map((item) => {\r\n                  return <List.Item>{item.name}</List.Item>;\r\n                })}\r\n              </List>\r\n            </Grid.Column>\r\n            <Grid.Column width={3}>\r\n              <Header inverted as=\"h4\" content=\"Meal Categories\" />\r\n              <List link inverted>\r\n                {category.map((item) => {\r\n                  return <List.Item>{item.display}</List.Item>;\r\n                })}\r\n              </List>\r\n            </Grid.Column>\r\n            <Grid.Column width={7}>\r\n              <Header inverted as=\"h4\" content=\"Get Hold of Us\" />\r\n              <p>\r\n                Contact us at info@foodengo.co.uk should you need more enquiries\r\n                regarding our services, we are available 24/7 to answer all your\r\n                possible queries.\r\n              </p>\r\n            </Grid.Column>\r\n          </Grid>\r\n\r\n          <Divider inverted section />\r\n          <Image centered size=\"small\" src=\"/images/foodengo_logo.png\" />\r\n          <List horizontal inverted divided link size=\"small\">\r\n            <List.Item as=\"a\" href={DISCLAIMER}>\r\n              Disclaimer\r\n            </List.Item>\r\n            <List.Item as=\"a\" href={CONTACT_US}>\r\n              Contact Us\r\n            </List.Item>\r\n            <List.Item as=\"a\" href={TERMS_AND_CONDITION}>\r\n              Terms and Conditions\r\n            </List.Item>\r\n            <List.Item as=\"a\" href={PRIVACY_URL}>\r\n              Privacy Policy\r\n            </List.Item>\r\n          </List>\r\n        </Container>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Image, Segment, Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\nfunction bigLoader(props) {\r\n  return (\r\n    <Segment>\r\n      <Dimmer active inverted>\r\n        <Loader size=\"large\">Loading</Loader>\r\n      </Dimmer>\r\n\r\n      <Image src=\"https://react.semantic-ui.com/images/wireframe/paragraph.png\" />\r\n    </Segment>\r\n  );\r\n}\r\n\r\nbigLoader.propTypes = {};\r\n\r\nexport default bigLoader;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  DEFAULT_STORE_BANNER,\r\n  DEFAULT_STORE_LOGO,\r\n  totalRating,\r\n  displayRating,\r\n  SERVER_URL,\r\n  ENDPOINT,\r\n  storeNextOpening,\r\n} from \"../../utility/global\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  Grid,\r\n  Image,\r\n  Item,\r\n  Label,\r\n  Header,\r\n  Rating,\r\n  Select,\r\n  Input,\r\n  Card,\r\n  List,\r\n  Search,\r\n  Table,\r\n  Segment,\r\n  Loader,\r\n  Dimmer,\r\n  Container,\r\n  Message,\r\n} from \"semantic-ui-react\";\r\nimport moment from \"moment\";\r\nexport default class ItemCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  state = {};\r\n\r\n  render() {\r\n    const {\r\n      logo,\r\n      banner,\r\n      shopName,\r\n      shopUrl,\r\n      minTime,\r\n      maxTime,\r\n      percentageDiscount,\r\n      discountAmount,\r\n      minOrder,\r\n      deliveryPrice,\r\n      storeTime,\r\n      ratings,\r\n      Origin,\r\n      isPreOrder,\r\n    } = this.props.item;\r\n    const isOpen = this.props.isOpen;\r\n    const logoStyles = {\r\n      height: 40,\r\n      objectFit: \"cover\",\r\n      objectPosition: \"center center\",\r\n    };\r\n    const styles = {\r\n      height: 150,\r\n      width: \"100%\",\r\n      objectFit: \"cover\",\r\n      objectPosition: \"center center\",\r\n    };\r\n    const nextOpening = storeNextOpening(storeTime[0]);\r\n    return (\r\n      <Grid.Column style={{ paddingBottom: 15 }}>\r\n        <Link to={`/${shopUrl}`}>\r\n          <Card raised color=\"red\" fluid>\r\n            <Card.Content>\r\n              <Image\r\n                floated=\"left\"\r\n                circular\r\n                fluid\r\n                size=\"mini\"\r\n                style={logoStyles}\r\n                src={logo ? `${logo}` : DEFAULT_STORE_LOGO}\r\n              />\r\n\r\n              <Card.Header>{shopName}</Card.Header>\r\n              <Card.Meta>{Origin.name}</Card.Meta>\r\n              <img\r\n                style={styles}\r\n                src={banner ? `${banner}` : DEFAULT_STORE_BANNER}\r\n              />\r\n\r\n              <Card.Content extra>\r\n                <Table very basic unstackable size=\"small\" singleLine compact>\r\n                  <Table.Row>\r\n                    {minTime ? (\r\n                      <Table.Cell textAlign=\"left\">\r\n                        <Card.Meta>\r\n                          <Icon color=\"red\" size=\"large\" name=\"time\" />\r\n                          {`${minTime} - ${maxTime} mins`}\r\n                        </Card.Meta>\r\n                      </Table.Cell>\r\n                    ) : (\r\n                      <Table.Cell textAlign=\"left\">\r\n                        <Card.Meta>\r\n                          <Icon color=\"red\" size=\"large\" name=\"time\" />\r\n                          {`0 mins`}\r\n                        </Card.Meta>\r\n                      </Table.Cell>\r\n                    )}{\" \"}\r\n                    {percentageDiscount ? (\r\n                      <Table.Cell textAlign=\"right\">\r\n                        <Card.Meta>\r\n                          <Icon color=\"red\" size=\"large\" name=\"fire\" />\r\n                          {`${percentageDiscount}% discount`}\r\n                        </Card.Meta>\r\n                      </Table.Cell>\r\n                    ) : (\r\n                      <Table.Cell textAlign=\"right\"></Table.Cell>\r\n                    )}\r\n                  </Table.Row>\r\n                </Table>\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <Card.Meta>\r\n                  <Icon\r\n                    size=\"large\"\r\n                    color=\"green\"\r\n                    name=\"money bill alternate\"\r\n                  />\r\n                  {` Minimum spend £${minOrder ? minOrder : \"0\"}`}\r\n                </Card.Meta>\r\n              </Card.Content>\r\n              <Card.Content>\r\n                <Card.Meta>\r\n                  <Icon size=\"large\" name=\"truck\" />\r\n                  {` Delivery £${deliveryPrice ? deliveryPrice : \"0\"}`}\r\n                </Card.Meta>\r\n              </Card.Content>\r\n              <Card.Description>\r\n                <Rating\r\n                  padding\r\n                  maxRating={5}\r\n                  rating={displayRating(ratings)}\r\n                  disabled\r\n                  icon=\"star\"\r\n                  size=\"small\"\r\n                />\r\n                {isOpen ? (\r\n                  \"\"\r\n                ) : nextOpening ? (\r\n                  isPreOrder ? (\r\n                    <Label floated=\"right\" color=\"red\" size=\"medium\">\r\n                      <Icon name=\"clock outline\" />\r\n                      Pre-order\r\n                    </Label>\r\n                  ) : (\r\n                    \"\"\r\n                  )\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </Card.Description>\r\n              {isOpen ? (\r\n                \"\"\r\n              ) : (\r\n                <Card.Meta style={{ paddingTop: 10 }}>\r\n                  {nextOpening ? (\r\n                    `Opening ${\r\n                      new Date().getDay() === nextOpening.dayNum\r\n                        ? \"today at\"\r\n                        : `on ${nextOpening.day}`\r\n                    } ${moment(nextOpening.opening).format(\"LT\")}`\r\n                  ) : (\r\n                    <Button color=\"orange\" fluid size=\"mini\">\r\n                      Temporarily closed\r\n                    </Button>\r\n                  )}\r\n                </Card.Meta>\r\n              )}\r\n            </Card.Content>\r\n          </Card>\r\n        </Link>\r\n      </Grid.Column>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  Rating,\r\n  List,\r\n  Menu,\r\n  Responsive,\r\n  Segment,\r\n  Sidebar,\r\n  Visibility,\r\n  Card,\r\n  Input,\r\n} from \"semantic-ui-react\";\r\nimport {\r\n  totalRating,\r\n  displayRating,\r\n  formatPrice,\r\n  LISTING_URL,\r\n  REGISTER_URL,\r\n  LOGIN_URL,\r\n} from \"../utility/global\";\r\nimport { withRouter } from \"react-router-dom\";\r\nexport class HomepageHeading extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.history.push(LISTING_URL);\r\n  };\r\n  render() {\r\n    return (\r\n      <Container style={{ backgroundColor: \"white\", paddingBottom: 30 }} text>\r\n        <Header\r\n          as=\"h1\"\r\n          content=\"Foodengo\"\r\n          inverted\r\n          style={{\r\n            fontSize: this.props.mobile ? \"2em\" : \"4em\",\r\n            fontWeight: \"normal\",\r\n            marginBottom: 0,\r\n            color: \"#660000\",\r\n            marginTop: this.props.mobile ? \"1.5em\" : \"3em\",\r\n          }}\r\n        />\r\n        <Header\r\n          as=\"h2\"\r\n          content=\"Get your African/Caribbean food delivered to your doorstep\"\r\n          inverted\r\n          style={{\r\n            fontSize: this.props.mobile ? \"1.5em\" : \"1.7em\",\r\n            fontWeight: \"normal\",\r\n            color: \"#660000\",\r\n            marginTop: this.props.mobile ? \"0.5em\" : \"1.5em\",\r\n          }}\r\n        />\r\n        <Input fluid type=\"text\" placeholder=\"Enter your postcode\" action>\r\n          <input />\r\n          <Button onClick={this.handleSubmit} color=\"red\" type=\"button\">\r\n            Find Food\r\n          </Button>\r\n        </Input>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(HomepageHeading);\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component, useState, useEffect } from \"react\";\r\nimport clientService from \"../services/clientService\";\r\nimport Footer from \"./Footer\";\r\nimport BigLoader from \"./bigLoader\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  Rating,\r\n  List,\r\n  Menu,\r\n  Responsive,\r\n  Segment,\r\n  Sidebar,\r\n  Visibility,\r\n  Card,\r\n  Input,\r\n} from \"semantic-ui-react\";\r\nimport {\r\n  totalRating,\r\n  displayRating,\r\n  formatPrice,\r\n  LISTING_URL,\r\n  REGISTER_URL,\r\n  LOGIN_URL,\r\n  SHOP_SIGNUP,\r\n} from \"../utility/global\";\r\nimport StoreCard from \"./widgets/storeCard\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport HomepageHeading from \"../components/homePageHeading\";\r\n// Heads up!\r\n// We using React Static to prerender our docs with server side rendering, this is a quite simple solution.\r\n// For more advanced usage please check Responsive docs under the \"Usage\" section.\r\nconst getWidth = () => {\r\n  const isSSR = typeof window === \"undefined\";\r\n\r\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth;\r\n};\r\n\r\n/* eslint-disable react/no-multi-comp */\r\n/* Heads up! HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled components for\r\n * such things.\r\n */\r\n\r\n/* Heads up!\r\n * Neither Semantic UI nor Semantic UI React offer a responsive navbar, however, it can be implemented easily.\r\n * It can be more complicated, but you can create really flexible markup.\r\n */\r\nclass DesktopContainer extends Component {\r\n  state = {};\r\n\r\n  hideFixedMenu = () => this.setState({ fixed: false });\r\n  showFixedMenu = () => this.setState({ fixed: true });\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    const { fixed } = this.state;\r\n\r\n    return (\r\n      <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\r\n        <Visibility\r\n          once={false}\r\n          onBottomPassed={this.showFixedMenu}\r\n          onBottomPassedReverse={this.hideFixedMenu}\r\n        >\r\n          <Segment\r\n            inverted\r\n            textAlign=\"center\"\r\n            style={{\r\n              backgroundImage: `url(\"/images/bg.jpg\")`,\r\n              minHeight: 700,\r\n              repeat: \"none\",\r\n              padding: \"1em 0em\",\r\n            }}\r\n            vertical\r\n          >\r\n            <Menu\r\n              color=\"grey\"\r\n              fixed={fixed ? \"top\" : null}\r\n              inverted={!fixed}\r\n              pointing={!fixed}\r\n              secondary={!fixed}\r\n              size=\"large\"\r\n            >\r\n              <Container>\r\n                <Menu.Item position=\"right\">\r\n                  {/* <Link to={SHOP_SIGNUP}>Vendor Sign up</Link> */}\r\n                  {/* <Link\r\n                    style={{ paddingLeft: 20, paddingRight: 20 }}\r\n                    to={LISTING_URL}\r\n                  >\r\n                    View Listing\r\n                  </Link> */}\r\n                  <Button as=\"a\" href={LOGIN_URL} inverted={!fixed}>\r\n                    Log In\r\n                  </Button>\r\n\r\n                  {/* <Button as='a' inverted={!fixed} primary={fixed} style={{ marginLeft: '0.5em' }}>\r\n                    Sign Up\r\n                  </Button> */}\r\n                </Menu.Item>\r\n              </Container>\r\n            </Menu>\r\n            <HomepageHeading />\r\n          </Segment>\r\n        </Visibility>\r\n\r\n        {children}\r\n      </Responsive>\r\n    );\r\n  }\r\n}\r\n\r\nDesktopContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nclass MobileContainer extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    const { sidebarOpened } = this.state;\r\n\r\n    return (\r\n      <Responsive getWidth={getWidth} maxWidth={Responsive.onlyMobile.maxWidth}>\r\n        {/* <Sidebar\r\n          as={Menu}\r\n          animation=\"push\"\r\n          inverted\r\n          onHide={this.handleSidebarHide}\r\n          vertical\r\n          visible={sidebarOpened}\r\n        >\r\n          <Link to={LISTING_URL}>\r\n            <Menu.Item as=\"a\" active>\r\n              View Listing\r\n            </Menu.Item>\r\n          </Link>\r\n          <Link to={LOGIN_URL}>\r\n            <Menu.Item as=\"a\">Log In</Menu.Item>\r\n          </Link>\r\n\r\n         \r\n        </Sidebar> */}\r\n\r\n        <Sidebar.Pusher dimmed={sidebarOpened}>\r\n          <Segment\r\n            inverted\r\n            textAlign=\"center\"\r\n            style={{\r\n              backgroundImage: `url(\"/images/bg.jpg\")`,\r\n              minHeight: 350,\r\n              padding: \"1em 0em\",\r\n            }}\r\n            vertical\r\n          >\r\n            <Container>\r\n              <Menu color=\"grey\" inverted pointing secondary size=\"large\">\r\n                \r\n\r\n                <Menu.Item position=\"right\">\r\n                  <Button href={LOGIN_URL} as=\"a\" inverted>\r\n                    Log In\r\n                  </Button>\r\n                </Menu.Item>\r\n              </Menu>\r\n            </Container>\r\n            <HomepageHeading mobile={true} />\r\n          </Segment>\r\n\r\n          {children}\r\n        </Sidebar.Pusher>\r\n      </Responsive>\r\n    );\r\n  }\r\n}\r\n\r\nMobileContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nconst ResponsiveContainer = ({ children }) => (\r\n  <div>\r\n    <DesktopContainer>{children}</DesktopContainer>\r\n    <MobileContainer>{children}</MobileContainer>\r\n  </div>\r\n);\r\n\r\nResponsiveContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nclass Landing extends Component {\r\n  componentDidMount = async () => {\r\n    const result = await clientService.storeFrontPage();\r\n    this.setState({\r\n      topMeals: result.data.data,\r\n    });\r\n  };\r\n  state = {\r\n    topMeals: [],\r\n  };\r\n  render() {\r\n    const styles = {\r\n      height: 130,\r\n      width: \"100%\",\r\n      objectFit: \"cover\",\r\n      objectPosition: \"center center\",\r\n    };\r\n    const { topMeals } = this.state;\r\n\r\n    return (\r\n      <ResponsiveContainer>\r\n        <Container>\r\n          <hr></hr>\r\n          <Segment style={{ paddingTop: \"5em\" }}>\r\n            <h1>Top-rated sellers</h1>\r\n            {topMeals.length > 0 ? (\r\n              <Grid padded stackable>\r\n                <Grid.Row style={{ margin: \"auto\" }} columns={4}>\r\n                  {topMeals.map((item) => {\r\n                    const { id, VirtualShop, price, photo, name } = item;\r\n                    return (\r\n                      <StoreCard isOpen={true} key={item.id} item={item} />\r\n                    );\r\n                  })}\r\n                </Grid.Row>\r\n              </Grid>\r\n            ) : (\r\n              <BigLoader />\r\n            )}\r\n          </Segment>\r\n        </Container>\r\n\r\n        <Footer />\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Landing);\r\n","import axios from \"axios\";\r\nimport { SERVER_URL, getUserToken,asyncLocalStorage } from \"./utility/global\";\r\naxios.defaults.withCredentials = true;\r\n\r\nexport default axios.create({\r\n  baseURL: SERVER_URL,\r\n  headers: {\r\n    \"Content-type\": \"application/json\",\r\n    //Authorization: `Bearer ${sessionStorage.getItem(\"tk\")}`,\r\n  },\r\n});\r\n","import React, { Component } from \"react\";\r\nimport clientService from \"../services/clientService\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport { setToken } from \"../http-common\";\r\nimport {\r\n  setUserProfile,\r\n  DASHBOARD_URL,\r\n  DASHBOARD_USER_URL,\r\n  REGISTER_URL,\r\n  SERVER_ERROR,\r\n  asyncLocalStorage,\r\n} from \"../utility/global\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport FacebookLogin from \"react-facebook-login\";\r\n\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  Message,\r\n  Segment,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    hasError: false,\r\n    loading: false,\r\n    disabled: false,\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  login = async (e) => {\r\n    try {\r\n      var dashType;\r\n      e.preventDefault();\r\n      this.setState({ loading: true, disabled: true });\r\n\r\n      const dataObj = {\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n      };\r\n      const loginResponse = await clientService.login(dataObj);\r\n      this.setState({ loading: false });\r\n      const { data, token } = loginResponse.data;\r\n      const setStorage = await asyncLocalStorage.setItem(\"tk\", token);\r\n      dashType = data.role === \"Seller\" ? DASHBOARD_URL : `/`;\r\n\r\n      let { from } = this.props.location.state || {\r\n        from: { pathname: dashType },\r\n      };\r\n\r\n      this.props.history.replace(from);\r\n    } catch (err) {\r\n      this.setState({\r\n        hasError: true,\r\n        message: SERVER_ERROR,\r\n      });\r\n    } finally {\r\n      this.setState({ loading: false, disabled: false });\r\n    }\r\n  };\r\n\r\n  responseGoogle = (response) => {};\r\n  responseFacebook = (res) => {\r\n    var dashType;\r\n\r\n    if (res) {\r\n      const { email, name, graphDomain, id } = res;\r\n      const nameArray = name.split(\" \");\r\n      const firstName = nameArray[0];\r\n      const lastName = nameArray.pop();\r\n      const password = id;\r\n      const source = graphDomain;\r\n\r\n      clientService\r\n        .socialAccess({ email, firstName, lastName, source, password })\r\n        .then((response) => {\r\n          const { token, data } = response.data;\r\n          localStorage.setItem(\"tk\", token);\r\n          dashType =\r\n            data.role === \"Seller\" ? DASHBOARD_URL : DASHBOARD_USER_URL;\r\n          dashType =\r\n            data.role === \"Seller\" ? DASHBOARD_URL : DASHBOARD_USER_URL;\r\n\r\n          let { from } = this.props.location.state || {\r\n            from: { pathname: dashType },\r\n          };\r\n          this.props.history.replace(from);\r\n        })\r\n        .catch((err) => {\r\n          this.setState({\r\n            showAlert: true,\r\n            message: SERVER_ERROR,\r\n          });\r\n        });\r\n    }\r\n  };\r\n  render() {\r\n    const { loading, disabled } = this.state;\r\n    const alert = (\r\n      <div className=\"ui info message\">\r\n        <div className=\"header\">Login refusal</div>\r\n        <p>\r\n          If you're having trouble logging in,{\" \"}\r\n          <a href=\"#\">reset your password.</a>\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <Container fluid={true}>\r\n        <Row style={{ paddingTop: \"40px\", position: \"relative\" }}>\r\n          <Col lg=\"4\"></Col>\r\n          <Col lg=\"4\">\r\n            {\" \"}\r\n            <form onSubmit={this.login}>\r\n              <Grid\r\n                textAlign=\"center\"\r\n                style={{ height: \"100vh\" }}\r\n                verticalAlign=\"middle\"\r\n              >\r\n                <Grid.Column>\r\n                  <Header as=\"h2\" color=\"black\" textAlign=\"center\">\r\n                    <Image circular size=\"mini\" src=\"/images/onelogo.png\" />{\" \"}\r\n                    Log-in to your account\r\n                  </Header>\r\n\r\n                  <Form size=\"large\">\r\n                    {this.state.hasError ? alert : \"\"}\r\n                    {/* <FacebookLogin\r\n              appId=\"900223110479631\"\r\n              autoLoad={false}\r\n              cssClass=\"facebookBtn\"\r\n              fields=\"name,email,picture\"\r\n              callback={this.responseFacebook}\r\n              icon={<Icon name=\"facebook\" />}\r\n              textButton=\"&nbsp;&nbsp;Sign In with Facebook\"\r\n            /> */}\r\n                    {/* <GoogleLogin\r\n              clientId=\"489905510114-d9395vk5dso3h7bb07rlfv492u444ebs.apps.googleusercontent.com\"\r\n              render={(renderProps) => (\r\n                <button\r\n                  onClick={renderProps.onClick}\r\n                  type=\"button\"\r\n                  className=\"google\"\r\n                >\r\n                  &nbsp;&nbsp;\r\n                  <Icon name=\"google\" />\r\n                  Sign In with Google\r\n                </button>\r\n              )}\r\n              onSuccess={this.responseGoogle}\r\n              onFailure={this.responseGoogle}\r\n              className=\"google\"\r\n              style={{ textAlign: \"center\" }}\r\n              buttonText=\"Sign In with Google\"\r\n            /> */}\r\n                    {/* <div class=\"ui horizontal divider\">Or</div> */}\r\n                    <Segment stacked>\r\n                      <Form.Input\r\n                        fluid\r\n                        type=\"email\"\r\n                        icon=\"user\"\r\n                        onChange={this.onChange}\r\n                        name=\"email\"\r\n                        iconPosition=\"left\"\r\n                        placeholder=\"E-mail address\"\r\n                      />\r\n                      <Form.Input\r\n                        fluid\r\n                        icon=\"lock\"\r\n                        onChange={this.onChange}\r\n                        name=\"password\"\r\n                        iconPosition=\"left\"\r\n                        placeholder=\"Password\"\r\n                        type=\"password\"\r\n                      />\r\n\r\n                      <Button\r\n                        loading={loading}\r\n                        disabled={disabled}\r\n                        type=\"submit\"\r\n                        color=\"red\"\r\n                        fluid\r\n                        size=\"large\"\r\n                      >\r\n                        Login\r\n                      </Button>\r\n                    </Segment>\r\n                  </Form>\r\n                  <Message>\r\n                    New to us? <Link to={REGISTER_URL}>Sign up</Link>\r\n                  </Message>\r\n                </Grid.Column>\r\n              </Grid>\r\n            </form>\r\n          </Col>\r\n          <Col lg=\"4\"></Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Login;\r\n","import {\r\n  FETCH_PRODUCTS,\r\n  FETCH_PRODUCT_BY_ORIGIN,\r\n  ADD_USER,\r\n  FETCH_USER,\r\n  FETCH_CATEGORY,\r\n  FETCH_PRODUCT_BY_CATEGORY,\r\n  FETCH_PRODUCTS_CLOSE,\r\n  FETCH_PRODUCT_CLOSE_BY_CATEGORY,\r\n  FETCH_PRODUCT_CLOSE_BY_ORIGIN,\r\n} from \"./types\";\r\nimport ClientService from \"../services/clientService\";\r\n\r\nexport const fetchProducts = (search) => (dispatch) => {\r\n  ClientService.products({ search })\r\n    .then((products) => {\r\n      dispatch({\r\n        type: FETCH_PRODUCTS,\r\n        payload: products.data.open,\r\n      });\r\n\r\n      dispatch({\r\n        type: FETCH_PRODUCTS_CLOSE,\r\n        payload: products.data.close,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n// export const fetchCloseProducts = (search) => (dispatch) => {\r\n//   ClientService.productsClose({search})\r\n//     .then((products) => {\r\n\r\n//       dispatch({\r\n//         type: FETCH_PRODUCTS_CLOSE,\r\n//         payload: products.data.data,\r\n//       });\r\n//     })\r\n//     .catch((err) => {\r\n//       console.log(err);\r\n//     });\r\n// };\r\n\r\nexport const fetchCatgeories = () => (dispatch) => {\r\n  ClientService.category()\r\n    .then((category) => {\r\n      dispatch({\r\n        type: FETCH_CATEGORY,\r\n        payload: category.data.open,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const addUser = () => (dispatch) => {\r\n  ClientService.hasAuth()\r\n    .then((data) => {\r\n      let user = data.data.data;\r\n\r\n      dispatch({\r\n        type: ADD_USER,\r\n        payload: user,\r\n      });\r\n    })\r\n    .catch((err) => {});\r\n};\r\n\r\nexport const fetchUser = () => (dispatch) => {\r\n  dispatch({\r\n    type: FETCH_USER,\r\n  });\r\n};\r\n\r\nexport const updateProduct = (id) => (dispatch) => {\r\n  ClientService.productsByOrigin(id)\r\n    .then((products) => {\r\n      dispatch({\r\n        type: FETCH_PRODUCT_BY_ORIGIN,\r\n        payload: products.data.open,\r\n      });\r\n      dispatch({\r\n        type: FETCH_PRODUCT_CLOSE_BY_ORIGIN,\r\n        payload: products.data.close,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n//This updates meals by category\r\nexport const updateCategory = (id) => (dispatch) => {\r\n  ClientService.getMealByCategoryId(id)\r\n    .then((products) => {\r\n      dispatch({\r\n        type: FETCH_PRODUCT_BY_CATEGORY,\r\n        payload: products.data.open,\r\n      });\r\n      dispatch({\r\n        type: FETCH_PRODUCT_CLOSE_BY_CATEGORY,\r\n        payload: products.data.close,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n","export const FETCH_PRODUCTS = 'FETCH_PRODUCTS';\r\nexport const FETCH_PRODUCTS_CLOSE = 'FETCH_PRODUCTS_CLOSE';\r\nexport const FETCH_PRODUCT_BY_ORIGIN = 'FETCH_PRODUCT_BY_ORIGIN';\r\nexport const FETCH_PRODUCT_CLOSE_BY_ORIGIN = 'FETCH_PRODUCT_CLOSE_BY_ORIGIN';\r\nexport const ADD_USER = 'ADD_USER';\r\nexport const FETCH_USER = 'FETCH_USER';\r\nexport const FETCH_CATEGORY = 'FETCH_CATEGORY';\r\nexport const FETCH_PRODUCT_BY_CATEGORY = 'FETCH_PRODUCT_BY_CATEGORY';\r\nexport const FETCH_PRODUCT_CLOSE_BY_CATEGORY = 'FETCH_PRODUCT_CLOSE_BY_CATEGORY';","import React, { Component } from \"react\";\r\nimport { Menu } from \"semantic-ui-react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { addUser } from \"../../actions/productActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  DASHBOARD_URL,\r\n  LOGIN_URL,\r\n  logout,\r\n  DASHBOARD_USER_URL,\r\n} from \"../../utility/global\";\r\nimport clientService from \"../../services/clientService\";\r\nimport { Icon, Image } from \"semantic-ui-react\";\r\n\r\nclass Nav extends Component {\r\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\r\n  state = {\r\n    activeItem: \"\",\r\n    role: \"\",\r\n  };\r\n  componentDidMount() {\r\n    this.props.addUser();\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps) {\r\n      this.setState({\r\n        role: nextProps.user.role,\r\n      });\r\n      // console.log(\"Next prop\",nextProps)\r\n    }\r\n  }\r\n  logout = async (e) => {\r\n    e.preventDefault();\r\n    logout();\r\n\r\n    this.props.history.push(LOGIN_URL);\r\n  };\r\n  dashboard = async (e) => {\r\n    e.preventDefault();\r\n    const role = this.state.role;\r\n    this.props.history.push(\r\n      role === \"Customer\" ? DASHBOARD_USER_URL : DASHBOARD_URL\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <Menu fixed>\r\n        <Menu.Item>\r\n          <Image size=\"mini\" circular src=\"/images/onelogo.png\" />\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          name=\"dashboard\"\r\n          active={this.state.activeItem === \"dashboard\"}\r\n          onClick={this.dashboard}\r\n        >\r\n          Dashboard <Icon color=\"red\" name=\"dashboard\" />\r\n        </Menu.Item>\r\n\r\n        <Menu.Menu position=\"right\">\r\n          <Menu.Item\r\n            name=\"logout\"\r\n            active={this.state.activeItem === \"logout\"}\r\n            onClick={this.logout}\r\n          >\r\n            {\" \"}\r\n            Logout <Icon color=\"red\" name=\"sign out\" />\r\n          </Menu.Item>\r\n        </Menu.Menu>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\nNav.propTypes = {\r\n  addUser: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  user: state.products.user,\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, { addUser })(Nav));\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Checkbox } from \"semantic-ui-react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchUser } from \"../../actions/productActions\";\r\nimport {\r\n  MEAL_CREATE,\r\n  MEAL_LIST,\r\n  SHOP_CREATE,\r\n  MY_ACCOUNT,\r\n  USER_ORDER_URL,\r\n  SHOP_SETTING_URL,\r\n  SHOP_SOCIAL_URL,\r\n  AVAILABILITY_URL,\r\n  BANK_DETAIL_URL,\r\n  CUSTOMER_ACCOUNT,\r\n  CUSTOMER_ORDER\r\n} from \"../../utility/global\";\r\nimport Icon from \"react-icons-kit\";\r\nimport clientService from \"../../services/clientService\";\r\n\r\nclass SideMenu extends Component {\r\n  state = {\r\n    activeItem: \"\",\r\n    role: \"\",\r\n    isPreOrder: false,\r\n    shopId: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchUser();\r\n\r\n    //console.log(\"next propdddddd\", this.props.role)\r\n  }\r\n  onChange = async (e, data) => {\r\n    const isPreOrder = data.checked;\r\n    const updatePreOrder = await clientService.updatePreOrder(\r\n      this.state.shopId,\r\n      { isPreOrder }\r\n    );\r\n    if (!updatePreOrder.data.error) {\r\n      this.setState({\r\n        isPreOrder: isPreOrder,\r\n      });\r\n    }\r\n  };\r\n  componentWillReceiveProps = async (nextProps) => {\r\n    if (nextProps) {\r\n      const user = nextProps.user;\r\n      const shopId = user.shopId;\r\n      this.setState({\r\n        shopId: shopId,\r\n        role: user.role,\r\n      });\r\n\r\n      const preOrderResponse = await clientService.fetchShopPreOrder({\r\n        shopId,\r\n      });\r\n      const data = preOrderResponse.data.data;\r\n      this.setState({\r\n        isPreOrder: data ? data.isPreOrder : false,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { role, isPreOrder } = this.state;\r\n    const preOrder = isPreOrder ? \"Pre-order(ON)\" : \"Pre-order(OFF)\";\r\n    if (role == \"Customer\") {\r\n      return (\r\n        <Menu fluid vertical>\r\n          <Menu.Item>\r\n            <Menu.Header><Link to={CUSTOMER_ORDER}>My Orders</Link></Menu.Header>\r\n            \r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <Menu.Header><Link to={CUSTOMER_ACCOUNT}>My Account</Link></Menu.Header>\r\n            \r\n          </Menu.Item>\r\n        </Menu>\r\n      );\r\n    } else {\r\n      return (\r\n        <Menu fluid vertical>\r\n          <Menu.Item>\r\n            <Checkbox\r\n              onChange={this.onChange}\r\n              checked={isPreOrder}\r\n              toggle\r\n              label={preOrder}\r\n            />\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <Menu.Header>Food</Menu.Header>\r\n\r\n            <Menu.Menu>\r\n              <Link to={MEAL_CREATE}>\r\n                <Menu.Item\r\n                  name=\"Create-food\"\r\n                  active={this.state.activeItem === \"enterprise\"}\r\n                  onClick={this.handleItemClick}\r\n                />\r\n              </Link>\r\n              <Link to={MEAL_LIST}>\r\n                <Menu.Item\r\n                  name=\"food-listing\"\r\n                  active={this.state.activeItem === \"meal-listing\"}\r\n                  onClick={this.handleItemClick}\r\n                />\r\n              </Link>\r\n            </Menu.Menu>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item>\r\n            <Menu.Header>Orders</Menu.Header>\r\n\r\n            <Menu.Menu>\r\n              <Link to={USER_ORDER_URL}>\r\n                <Menu.Item\r\n                  name=\"customer orders\"\r\n                  active={this.state.activeItem === \"customer orders\"}\r\n                  onClick={this.handleItemClick}\r\n                />\r\n              </Link>\r\n            </Menu.Menu>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item>\r\n            <Menu.Header>Settings</Menu.Header>\r\n\r\n            <Menu.Menu>\r\n              <Link to={MY_ACCOUNT}>\r\n                <Menu.Item\r\n                  name=\"Account-info\"\r\n                  active={this.state.activeItem === \"Account-info\"}\r\n                  onClick={this.handleItemClick}\r\n                />\r\n              </Link>\r\n              <Link to={SHOP_SETTING_URL}>\r\n                <Menu.Item\r\n                  name=\"Store-settings\"\r\n                  active={this.state.activeItem === \"Store-settings\"}\r\n                  onClick={this.handleItemClick}\r\n                />\r\n              </Link>\r\n            </Menu.Menu>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item>\r\n            <Menu.Header>Online Store</Menu.Header>\r\n\r\n            <Menu.Menu>\r\n              <Link to={SHOP_CREATE}>\r\n                <Menu.Item\r\n                  name=\"my-store\"\r\n                  active={this.state.activeItem === \"my-store\"}\r\n                  onClick={this.handleItemClick}\r\n                >\r\n                  My Store\r\n                </Menu.Item>\r\n              </Link>\r\n              <Link to={SHOP_SETTING_URL}>\r\n                <Menu.Item\r\n                  name=\"store-settings\"\r\n                  active={this.state.activeItem === \"store-settings\"}\r\n                  onClick={this.handleItemClick}\r\n                >\r\n                  Settings\r\n                </Menu.Item>\r\n              </Link>\r\n              <Link to={SHOP_SOCIAL_URL}>\r\n                <Menu.Item\r\n                  name=\"shop-social\"\r\n                  active={this.state.activeItem === \"shop-social\"}\r\n                  onClick={this.handleItemClick}\r\n                >\r\n                  Social\r\n                </Menu.Item>\r\n              </Link>\r\n\r\n              <Link to={AVAILABILITY_URL}>\r\n                <Menu.Item\r\n                  name=\"availability\"\r\n                  active={this.state.activeItem === \"availability\"}\r\n                  onClick={this.handleItemClick}\r\n                >\r\n                  Availability\r\n                </Menu.Item>\r\n              </Link>\r\n            </Menu.Menu>\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <Menu.Header>Bank Account Details</Menu.Header>\r\n\r\n            <Menu.Menu>\r\n              <Link to={BANK_DETAIL_URL}>\r\n                <Menu.Item\r\n                  name=\"availability\"\r\n                  active={this.state.activeItem === \"availability\"}\r\n                  onClick={this.handleItemClick}\r\n                >\r\n                  Bank Details\r\n                </Menu.Item>\r\n              </Link>\r\n            </Menu.Menu>\r\n          </Menu.Item>\r\n        </Menu>\r\n      );\r\n    }\r\n  }\r\n}\r\nSideMenu.propTypes = {\r\n  fetchUser: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  user: state.products.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchUser })(SideMenu);\r\n","import React, { Component } from \"react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport clientService from \"../../services/clientService\";\r\nimport { fetchUser } from \"../../actions/productActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass AfterNav extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  state = {\r\n    navigate: false,\r\n    firstName: \"\",\r\n  };\r\n  componentDidMount = async () => {\r\n    this.props.fetchUser();\r\n    \r\n  };\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps) {\r\n      const user = nextProps.user;\r\n      \r\n      this.setState({\r\n        firstName: user.firstName\r\n      })\r\n    }\r\n  }\r\n  onClick = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      navigate: true,\r\n    });\r\n  };\r\n  render() {\r\n    const {firstName} = this.state;\r\n    return (\r\n      <div>\r\n        <Grid>\r\n          <Grid.Column floated=\"left\" width={5}>\r\n            <span>Control Panel - {this.props.form}</span>\r\n          </Grid.Column>\r\n          <Grid.Column floated=\"right\" width={5}>\r\n            <span className=\"float-right\">\r\n              Logged In as {firstName}\r\n              <Link onClick={this.onClick}></Link>\r\n            </span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nAfterNav.propTypes = {\r\n  fetchUser: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  user: state.products.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchUser })(AfterNav);\r\n","import React, { Component } from \"react\";\r\nimport Nav from \"./common/nav\";\r\nimport SideMenu from \"./common/sideMenu\";\r\nimport ClientService from \"../services/clientService\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport clientService from \"../services/clientService\";\r\nimport {\r\n  toastOptions,\r\n} from \"../utility/global\";\r\nimport { Button, Form, Message, Icon } from \"semantic-ui-react\";\r\nimport AfterNav from \"./common/afterNav\";\r\nimport { toast } from \"react-toastify\";\r\nimport { fetchUser } from \"../actions/productActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass BankDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  state = {\r\n    sortCode: \"\",\r\n    accountNumber: \"\",\r\n    accountName: \"\",\r\n    bankName: \"\",\r\n    shopId: \"\",\r\n  };\r\n\r\n  componentWillReceiveProps = async (nextProps) => {\r\n    if (nextProps) {\r\n      const user = nextProps.user;\r\n      if (user) {\r\n        ClientService.findShopByUser(user.id)\r\n          .then((response) => {\r\n            const data = response.data.data;\r\n            \r\n            this.setState({\r\n              shopId: data.id\r\n            })\r\n            const { id,bankDetail } = data;\r\n          \r\n            this.setState({\r\n              shopId: id,\r\n              sortCode: bankDetail.sortCode,\r\n              accountNumber: bankDetail.accountNumber,\r\n              bankName: bankDetail.bankName,\r\n              accountName: bankDetail.accountName,\r\n            });\r\n          })\r\n          .catch((err) => {\r\n            //console.log(err);\r\n          });\r\n      }\r\n    }\r\n  };\r\n  componentDidMount = async () => {\r\n    this.props.fetchUser();\r\n  };\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const {\r\n      sortCode,\r\n      bankName,\r\n      accountName,\r\n      accountNumber,\r\n      shopId,\r\n    } = this.state;\r\n    const bankDetail = {\r\n      sortCode,\r\n      bankName,\r\n      accountName,\r\n      accountNumber,\r\n    };\r\n    console.log(shopId)\r\n    clientService\r\n      .bankDetail(shopId, {bankDetail})\r\n      .then((response) => {\r\n        toast.success(response.data.message, toastOptions(false));\r\n      })\r\n      .catch((err) => {\r\n        toast.success(err.response.data.message, toastOptions(true));\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { accountName, accountNumber, sortCode, bankName } = this.state;\r\n\r\n    return (\r\n      <Container fluid={true}>\r\n        <Nav />\r\n        <AfterNav form={\"Bank Details\"} />\r\n        <hr></hr>\r\n        <Row style={{ paddingTop: \"10px\" }}>\r\n          <Col lg=\"2\">\r\n            <SideMenu />\r\n          </Col>\r\n          <Col lg=\"1\"></Col>\r\n          <Col className=\"dashboard-panel\" lg=\"6\">\r\n            <Message attached header=\"Bank Details\" />\r\n            <Form\r\n              className=\"attached fluid segment\"\r\n              style={{\r\n                width: \"100%\",\r\n                margin: \"auto\",\r\n                height: \"auto\",\r\n                padding: 13,\r\n              }}\r\n              onSubmit={this.onSubmit}\r\n            >\r\n              <Form.Field required>\r\n                <label>Account name</label>\r\n\r\n                <Form.Input\r\n                  type=\"text\"\r\n                  required\r\n                  value={accountName}\r\n                  name=\"accountName\"\r\n                  onChange={this.onChange}\r\n                  placeholder=\"Account name\"\r\n                  width={10}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field required>\r\n                <label>Sort code</label>\r\n                <Form.Input\r\n                  type=\"text\"\r\n                  required\r\n                  value={sortCode}\r\n                  name=\"sortCode\"\r\n                  maxLength=\"8\"\r\n                  onChange={this.onChange}\r\n                  placeholder=\"00-00-00\"\r\n                  width={6}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field required>\r\n                <label>Account number</label>\r\n                <Form.Input\r\n                  type=\"text\"\r\n                  value={accountNumber}\r\n                  name=\"accountNumber\"\r\n                  onChange={this.onChange}\r\n                  placeholder=\"Account number\"\r\n                  width={10}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field required>\r\n                <label>Bank name</label>\r\n                <Form.Input\r\n                  type=\"text\"\r\n                  required\r\n                  value={bankName}\r\n                  name=\"bankName\"\r\n                  onChange={this.onChange}\r\n                  placeholder=\"Bank name\"\r\n                  width={10}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Button color=\"red\" type=\"submit\">\r\n                Save <Icon name=\"save\" />\r\n              </Button>\r\n            </Form>\r\n            <br />\r\n            <br />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nBankDetail.propTypes = {\r\n  fetchUser: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  user: state.products.user,\r\n});\r\nexport default connect(mapStateToProps, { fetchUser })(BankDetail);\r\n","import React, { Component } from \"react\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport ClientService from \"../services/clientService\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport FacebookLogin from \"react-facebook-login\";\r\nimport {\r\n  CRED,\r\n  LISTING_URL,\r\n  LOGIN_URL,\r\n  SERVER_ERROR,\r\n  asyncLocalStorage,\r\n} from \"../utility/global\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  Checkbox,\r\n  Message,\r\n  Segment,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\nimport clientService from \"../services/clientService\";\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    hasError: false,\r\n    showAlert: false,\r\n    message: \"\",\r\n    orders: [],\r\n    loading: false,\r\n  };\r\n  responseGoogle = (response) => {\r\n    console.log(response);\r\n  };\r\n  responseFacebook = (res) => {\r\n    //const firstName\r\n    console.log(res);\r\n    if (res) {\r\n      const { email, name, graphDomain, id } = res;\r\n      const nameArray = name.split(\" \");\r\n      const firstName = nameArray[0];\r\n      const lastName = nameArray.pop();\r\n      const password = id;\r\n      const source = graphDomain;\r\n\r\n      clientService\r\n        .socialAccess({ email, firstName, lastName, source, password })\r\n        .then((response) => {\r\n          this.props.history.push(LISTING_URL);\r\n        })\r\n        .catch((err) => {\r\n          const { error, message } = err.response.data;\r\n          this.setState({\r\n            showAlert: true,\r\n            message: message,\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  addOrder() {}\r\n  register = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      this.setState({\r\n        loading: true,\r\n      });\r\n      const data = {\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        lastName: this.state.lastName,\r\n        firstName: this.state.firstName,\r\n      };\r\n\r\n      const response = await ClientService.register(data);\r\n\r\n      const error = response.data.error;\r\n      if (!error) {\r\n        const { data, token } = response.data;\r\n        const setStorage = await asyncLocalStorage.setItem(\"tk\", token);\r\n        this.props.history.push(`/`);\r\n      }\r\n    } catch (err) {\r\n      this.setState({\r\n        showAlert: true,\r\n        message: SERVER_ERROR,\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const alert = this.state.showAlert ? (\r\n      <div className=\"ui info message\">\r\n        <p>{this.state.message}</p>\r\n      </div>\r\n    ) : (\r\n      \"\"\r\n    );\r\n\r\n    return (\r\n      <Container fluid={true}>\r\n        <Row style={{ paddingTop: \"40px\", position: \"relative\" }}>\r\n          <Col lg=\"4\"></Col>\r\n          <Col lg=\"4\">\r\n            <form onSubmit={this.register}>\r\n              <Grid\r\n                textAlign=\"center\"\r\n                style={{ height: \"100vh\" }}\r\n                verticalAlign=\"middle\"\r\n              >\r\n                <Grid.Column style={{ maxWidth: 450 }}>\r\n                  <Header as=\"h2\" color=\"black\" textAlign=\"center\">\r\n                    <Image circular size=\"mini\" src=\"/images/onelogo.png\" />{\" \"}\r\n                    Sign-up to order\r\n                  </Header>\r\n\r\n                  <Form size=\"large\">\r\n                    {alert}\r\n                    {/* <FacebookLogin\r\n                      appId=\"900223110479631\"\r\n                      autoLoad={false}\r\n                      cssClass=\"facebookBtn\"\r\n                      fields=\"name,email,picture\"\r\n                      callback={this.responseFacebook}\r\n                      icon={<Icon name=\"facebook\" />}\r\n                      textButton=\"&nbsp;&nbsp;Sign In with Facebook\"\r\n                    /> */}\r\n                    {/* <GoogleLogin\r\n                      clientId=\"489905510114-d9395vk5dso3h7bb07rlfv492u444ebs.apps.googleusercontent.com\"\r\n                      render={(renderProps) => (\r\n                        <button\r\n                          onClick={renderProps.onClick}\r\n                          type=\"button\"\r\n                          className=\"google\"\r\n                        >\r\n                          &nbsp;&nbsp;\r\n                          <Icon name=\"google\" />\r\n                          Sign In with Google\r\n                        </button>\r\n                      )}\r\n                      onSuccess={this.responseGoogle}\r\n                      onFailure={this.responseGoogle}\r\n                      className=\"google\"\r\n                      style={{ textAlign: \"center\" }}\r\n                      buttonText=\"Sign In with Google\"\r\n                    /> */}\r\n                    {/* <div class=\"ui horizontal divider\">Or</div> */}\r\n                    <Segment stacked>\r\n                      <Form.Group widths=\"equal\">\r\n                        <Form.Field>\r\n                          <input\r\n                            required\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            id=\"defaultRegisterFormFirstName\"\r\n                            placeholder=\"First name\"\r\n                            onChange={this.onChange}\r\n                          />\r\n                        </Form.Field>\r\n\r\n                        <Form.Field>\r\n                          <input\r\n                            type=\"text\"\r\n                            required\r\n                            name=\"lastName\"\r\n                            id=\"defaultRegisterFormLastName\"\r\n                            placeholder=\"Last name\"\r\n                            onChange={this.onChange}\r\n                          />\r\n                        </Form.Field>\r\n                      </Form.Group>\r\n                      <Form.Input\r\n                        fluid\r\n                        type=\"email\"\r\n                        icon=\"user\"\r\n                        onChange={this.onChange}\r\n                        name=\"email\"\r\n                        iconPosition=\"left\"\r\n                        placeholder=\"E-mail address\"\r\n                      />\r\n                      <Form.Input\r\n                        fluid\r\n                        icon=\"lock\"\r\n                        onChange={this.onChange}\r\n                        name=\"password\"\r\n                        iconPosition=\"left\"\r\n                        placeholder=\"Password\"\r\n                        type=\"password\"\r\n                      />\r\n                      <Form.Input>\r\n                        <Checkbox\r\n                          required\r\n                          label=\"I agree to the Terms and Conditions\"\r\n                        />\r\n                      </Form.Input>\r\n\r\n                      <Button\r\n                        loading={this.state.loading}\r\n                        type=\"submit\"\r\n                        color=\"red\"\r\n                        fluid\r\n                        size=\"large\"\r\n                      >\r\n                        Sign up\r\n                      </Button>\r\n                    </Segment>\r\n                  </Form>\r\n                  <Message>\r\n                    Already have an account? <Link to={LOGIN_URL}>Log In</Link>\r\n                  </Message>\r\n                </Grid.Column>\r\n              </Grid>\r\n            </form>\r\n          </Col>\r\n          <Col lg=\"4\"></Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Register;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  DEFAULT_USER,\r\n  DEFAULT_BANNER,\r\n  DEFAULT_LOGO,\r\n  USER_ORDER_URL,\r\n  MY_ACCOUNT,\r\n  LISTING_URL,\r\n  LOGIN_URL,\r\n  logout,\r\n  CUSTOMER_ACCOUNT,\r\n  CUSTOMER_ORDER,\r\n} from \"../utility/global\";\r\n\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addUser } from \"../actions/productActions\";\r\nimport {\r\n  Container,\r\n  Dropdown,\r\n  Icon,\r\n  DropDown,\r\n  Image,\r\n  List,\r\n  Menu,\r\n  Segment,\r\n  Visibility,\r\n} from \"semantic-ui-react\";\r\nimport clientService from \"../services/clientService\";\r\nclass NavBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    firstName: \"\",\r\n    avatar: DEFAULT_USER,\r\n    role: \"\",\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.props.addUser();\r\n  };\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.user) {\r\n      const { firstName, photo, role } = nextProps.user;\r\n      this.setState({\r\n        firstName: firstName,\r\n        role: role,\r\n        avatar: photo ? `${photo}` : DEFAULT_USER,\r\n      });\r\n    }\r\n  }\r\n  handlerLogout = async (e) => {\r\n    e.preventDefault();\r\n\r\n    logout();\r\n    this.props.history.push(LOGIN_URL);\r\n  };\r\n  handlerOrder = async (e) => {\r\n    e.preventDefault();\r\n    const role = this.state.role;\r\n    this.props.history.push(\r\n      role === \"Customer\" ? CUSTOMER_ORDER : USER_ORDER_URL\r\n    );\r\n  };\r\n\r\n  handlerAccount = async (e) => {\r\n    e.preventDefault();\r\n    const role = this.state.role;\r\n    this.props.history.push(\r\n      role === \"Customer\" ? CUSTOMER_ACCOUNT : MY_ACCOUNT\r\n    );\r\n  };\r\n  render() {\r\n    const { firstName, avatar, role } = this.state;\r\n\r\n    const styles = { color: \"black\" };\r\n\r\n    const trigger = (\r\n      <span>\r\n        <Image avatar src={avatar} />\r\n        {firstName}\r\n      </span>\r\n    );\r\n    return (\r\n      <div>\r\n        {\" \"}\r\n        <Menu color=\"red\" fixed=\"top\" inverted>\r\n          <Menu.Item>\r\n            <img\r\n              style={{\r\n                marginRight: \"1.5em\",\r\n                height: \"35px\",\r\n                width: \"100px\",\r\n              }}\r\n              src=\"/images/foodengo_logo.png\"\r\n            />\r\n          </Menu.Item>\r\n          {/* <Menu.Item>\r\n            <Link to={LISTING_URL}>Home</Link>\r\n          </Menu.Item> */}\r\n          {firstName ? (\r\n            <Menu.Menu position=\"right\">\r\n              <Dropdown item text={firstName}>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item\r\n                    onClick={this.handlerAccount}\r\n                    icon=\"user\"\r\n                    text=\"Your Account\"\r\n                  />\r\n\r\n                  <Dropdown.Item\r\n                    onClick={this.handlerOrder}\r\n                    icon=\"shopping bag\"\r\n                    text=\"Your orders\"\r\n                  />\r\n\r\n                  <Dropdown.Item\r\n                    onClick={this.handlerLogout}\r\n                    icon=\"sign out alternate\"\r\n                    text=\"Logout\"\r\n                  />\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Menu.Menu>\r\n          ) : (\r\n            <Menu.Item position=\"right\">\r\n              <Link to={LOGIN_URL}>Log In</Link>\r\n            </Menu.Item>\r\n          )}\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nNavBar.propTypes = {\r\n  addUser: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  user: state.products.user,\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, { addUser })(NavBar));\r\n","import React, { Component } from \"react\";\r\nimport { Button, Rating, Form, Message, Header } from \"semantic-ui-react\";\r\nimport ClientService from \"../../services/clientService\";\r\nimport {\r\n  MISSING_USER_MSG,\r\n  DEFAULT_BANNER,\r\n  DEFAULT_LOGO,\r\n  LOGIN_URL,\r\n} from \"../../utility/global\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Review extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  state = {\r\n    rating: \"5\",\r\n    title: \"\",\r\n    content: \"\",\r\n    message: \"\",\r\n    isShowForm: true,\r\n    showAlert: false,\r\n  };\r\n\r\n  handleRate = (e, { rating, maxRating }) => {\r\n    this.setState({ rating });\r\n  };\r\n\r\n  onSubmit = async () => {\r\n    const result = await ClientService.hasAuth();\r\n    const user = result.data.data;\r\n    if (user) {\r\n      const { rating, title, content } = this.state;\r\n      const shopId = this.props.shopId;\r\n      const userId = user.id;\r\n\r\n      const isForShop = this.props.isForShop;\r\n      const productId = this.props.productId;\r\n\r\n      const payload = { rating, title, content, shopId, userId, productId };\r\n      const response = isForShop\r\n        ? await ClientService.createReview(payload)\r\n        : await ClientService.createProductReview(payload);\r\n\r\n      if (response) {\r\n        this.setState({\r\n          showAlert: true,\r\n          message: response.data.message,\r\n          isShowForm: false,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const poster = this.props.poster;\r\n    const alert = this.state.showAlert ? (\r\n      <Message\r\n        info\r\n        header=\"Review submitted - Thank you!\"\r\n        content={this.state.message}\r\n      />\r\n    ) : (\r\n      \"\"\r\n    );\r\n    if (this.state.isShowForm) {\r\n      return (\r\n        <div>\r\n          <Form onSubmit={this.onSubmit}>\r\n            {alert}\r\n            <Message floating>\r\n              <Header as=\"h3\">Create Review</Header>\r\n            </Message>\r\n\r\n            <Rating\r\n              maxRating={5}\r\n              onRate={this.handleRate}\r\n              defaultRating={5}\r\n              icon=\"star\"\r\n              size=\"massive\"\r\n            />\r\n            <hr></hr>\r\n            <Form.Field>\r\n              {poster ? <h5>Posting publicly as: {poster}</h5> : \"\"}\r\n              <input\r\n                disabled={!poster}\r\n                name=\"title\"\r\n                onChange={this.onChange}\r\n                placeholder=\"What's most important to know?\"\r\n              />\r\n            </Form.Field>\r\n            <Form.TextArea\r\n              disabled={!poster}\r\n              onChange={this.onChange}\r\n              name=\"content\"\r\n              label=\"Write your review\"\r\n              placeholder=\"What did you like or dislike?\"\r\n            />\r\n\r\n            {poster ? (\r\n              <Button type=\"submit\">Submit</Button>\r\n            ) : (\r\n              <Link to={LOGIN_URL}>\r\n                <Button>Sign in to review</Button>\r\n              </Link>\r\n            )}\r\n          </Form>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <Message\r\n          info\r\n          header=\"Review submitted - Thank you!\"\r\n          content={this.state.message}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button, Comment, Form, Header, Rating } from \"semantic-ui-react\";\r\nimport Moment from \"react-moment\";\r\n\r\nimport {\r\n  DEFAULT_USER,\r\n  DEFAULT_BANNER,\r\n  DEFAULT_LOGO,\r\n  LOGIN_URL,\r\n} from \"../../utility/global\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class ReviewList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  state = {\r\n    collapsed: true,\r\n    replyContent: \"\",\r\n    reply: this.props.data.ratingResponses,\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  handleCollapse = (e) => {\r\n    const initialColapseState = !this.state.collapsed;\r\n    this.setState({ collapsed: initialColapseState });\r\n  };\r\n  componentWillReceiveProps(nextProps) {\r\n    //this updates the view when a reply is made\r\n    const replyResultForUpdate = nextProps.replyResult;\r\n    if (replyResultForUpdate) {\r\n      this.state.reply.unshift(replyResultForUpdate);\r\n      this.setState({\r\n        replyContent: \"\",\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    const { collapsed, replyContent, reply } = this.state;\r\n    const {\r\n      title,\r\n      User,\r\n      content,\r\n      createdAt,\r\n      rating,\r\n      shopId,\r\n      userId,\r\n      id,\r\n    } = this.props.data;\r\n    \r\n    const poster = this.props.poster\r\n    return (\r\n      <div>\r\n        <Comment.Group>\r\n          {/* <Header as=\"h3\" dividing>\r\n            Comments\r\n          </Header> */}\r\n\r\n          <Comment>\r\n            <Comment.Avatar\r\n              src={User.photo ? `${User.photo}` : DEFAULT_USER}\r\n            />\r\n\r\n            <Comment.Content>\r\n              <Comment.Metadata>\r\n                {/* <div>Today at 5:42PM</div> */}\r\n                <Rating\r\n                  icon=\"star\"\r\n                  defaultRating={rating}\r\n                  maxRating={5}\r\n                  disabled\r\n                />\r\n              </Comment.Metadata>\r\n              <Comment.Author as=\"a\">{title}</Comment.Author>\r\n              <Comment.Text>{User.firstName}</Comment.Text>\r\n              <Comment.Metadata>\r\n                <div>\r\n                  <Moment fromNow>{createdAt}</Moment>\r\n                </div>\r\n              </Comment.Metadata>\r\n              <Comment.Text>{content}</Comment.Text>\r\n              <Comment.Actions>\r\n                <Comment.Action onClick={this.handleCollapse}>\r\n                  Reply review\r\n                </Comment.Action>\r\n              </Comment.Actions>\r\n            </Comment.Content>\r\n            <Comment.Group>\r\n              {reply.map((comment) => {\r\n                const Shop = comment.VirtualShop;\r\n                const User = comment.User;\r\n                let name, photo;\r\n                if (Shop) {\r\n                  name = Shop.shopName;\r\n                  photo = Shop.logo;\r\n                } else if (User) {\r\n                  name = User.firstName;\r\n                  photo = User.photo;\r\n                }\r\n\r\n                return (\r\n                  <Comment>\r\n                    <Comment.Avatar\r\n                      src={photo ? `${photo}` : DEFAULT_USER}\r\n                    />\r\n                    <Comment.Content>\r\n                      <Comment.Author as=\"a\">{name}</Comment.Author>\r\n                      <Comment.Metadata>\r\n                        <div>\r\n                          <Moment fromNow>{comment.createdAt}</Moment>\r\n                        </div>\r\n                      </Comment.Metadata>\r\n                      <Comment.Text>{comment.content}</Comment.Text>\r\n                    </Comment.Content>\r\n                  </Comment>\r\n                );\r\n              })}\r\n            </Comment.Group>\r\n            <Comment.Group collapsed={collapsed}>\r\n              <Form reply>\r\n                {poster? <h5>Posting publicly as: {poster}</h5>:\"\"}\r\n                <Form.TextArea disabled={!poster}\r\n                  name=\"replyContent\"\r\n                  onChange={this.onChange}\r\n                  value={replyContent}\r\n                  style={{ height: 80 }}\r\n                  placeholder=\"Respond to this review. Reply must adhere to our Terms and Conditions Guidelines.\"\r\n                />\r\n                {poster?<Button\r\n                  disabled={!replyContent}\r\n                  onClick={() =>\r\n                    this.props.handleReply({\r\n                      shopId,\r\n                      userId,\r\n                      ratingId: id,\r\n                      content: replyContent,\r\n                    })\r\n                  }\r\n                  size=\"mini\"\r\n                  color=\"red\"\r\n                >\r\n                  Post a reply\r\n                </Button>:<Link to={LOGIN_URL}><Button>Sign in to comment</Button></Link>}\r\n              </Form>\r\n            </Comment.Group>\r\n          </Comment>\r\n        </Comment.Group>\r\n        <hr></hr>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ClientService from \"../services/clientService\";\r\nimport Footer from \"./Footer\";\r\nimport NavBar from \"./NavBar\";\r\nimport {\r\n  Grid,\r\n  Image,\r\n  Icon,\r\n  Header,\r\n  Button,\r\n  Form,\r\n  Segment,\r\n  Message,\r\n} from \"semantic-ui-react\";\r\nimport Review from \"./widgets/Review\";\r\nimport ReviewList from \"./widgets/reviewList\";\r\n\r\nimport {\r\n  DEFAULT_USER,\r\n  DEFAULT_BANNER,\r\n  DEFAULT_LOGO,\r\n  totalRating,\r\n  displayRating,\r\n} from \"../utility/global\";\r\nimport clientService from \"../services/clientService\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class ErrorPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    tempId: \"\",\r\n    shopId: \"\",\r\n  };\r\n  componentDidMount = async () => {};\r\n  handleOnClick = (url) => {\r\n    this.setState({\r\n      defaultImage: url,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <NavBar />\r\n        <Grid style={{ margin: 70 }} stackable>\r\n          <Grid.Column width={2}></Grid.Column>\r\n          <Grid.Column width={12}>\r\n            \r\n            <Segment textAlign=\"center\" placeholder>\r\n              <Header icon>\r\n                <Icon color=\"red\" name=\"meh outline\" />\r\n                That page does not exist, sorry\r\n              </Header>\r\n              \r\n            </Segment>\r\n          </Grid.Column>\r\n          <Grid.Column width={2}></Grid.Column>\r\n        </Grid>\r\n        <Footer />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport {\r\n  Grid,\r\n  Button,\r\n  Header,\r\n  Rating,\r\n  Accordion,\r\n  Table,\r\n  Card,\r\n  Icon,\r\n  Image,\r\n  List,\r\n} from \"semantic-ui-react\";\r\nimport { DEFAULT_LOGO, displayRating, totalRating } from \"../../utility/global\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class ItemCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  state = {\r\n    activeIndex: 0,\r\n  };\r\n\r\n  handleClick = (e, titleProps) => {\r\n    const { index } = titleProps;\r\n    const { activeIndex } = this.state;\r\n    const newIndex = activeIndex === index ? -1 : index;\r\n\r\n    this.setState({ activeIndex: newIndex });\r\n  };\r\n  render() {\r\n    const styles = {\r\n      height: 130,\r\n      width: \"100%\",\r\n      objectFit: \"cover\",\r\n      objectPosition: \"center center\",\r\n    };\r\n    const { activeIndex } = this.state;\r\n    const {\r\n      id,\r\n      name,\r\n      image,\r\n      price,\r\n      photo,\r\n      Category,\r\n      productRatings,\r\n      ingredients,\r\n    } = this.props.product;\r\n    // alert(JSON.stringify(this.props.product))\r\n    const isForMenu = this.props.isForMenu;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Grid.Column style={{ paddingBottom: 20 }}>\r\n          <Card fluid color=\"red\">\r\n            <Image\r\n              style={styles}\r\n              src={photo ? `${photo}` : DEFAULT_LOGO}\r\n              ui={false}\r\n            />\r\n            <Card.Content>\r\n              <Header as=\"h4\">{name}</Header>\r\n              {isForMenu ? (\r\n                \"\"\r\n              ) : (\r\n                <Link to={`/${this.props.product.VirtualShop.shopUrl}`}><Card.Meta>\r\n                  {this.props.product.VirtualShop.shopName}\r\n                  <hr></hr>\r\n                </Card.Meta></Link>\r\n              )}\r\n              <Card.Meta>\r\n                {\" \"}\r\n                <Header color=\"red\" as=\"h4\">\r\n                  {\" \"}\r\n                  £{parseInt(price).toFixed(2)}\r\n                </Header>\r\n                <Rating\r\n                  maxRating={5}\r\n                  defaultRating={0}\r\n                  rating={displayRating(productRatings)}\r\n                  disabled\r\n                  icon=\"star\"\r\n                  size=\"small\"\r\n                />{\" \"}\r\n                | {totalRating(productRatings)}\r\n              </Card.Meta>\r\n              <Card.Description>\r\n                {Category ? Category.name : \"\"}\r\n                {isForMenu ? (\r\n                  <Link to={`/item_meal/${id}`}>\r\n                    {\" \"}\r\n                    <span style={{ float: \"right\" }}>Details</span>\r\n                  </Link>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </Card.Description>\r\n              {isForMenu ? (\r\n                ingredients.length > 0 ? (\r\n                  <React.Fragment>\r\n                    <hr />\r\n                    <Accordion styled>\r\n                      <Accordion.Title\r\n                        active={activeIndex === 1}\r\n                        index={1}\r\n                        onClick={this.handleClick}\r\n                      >\r\n                        <Icon name=\"dropdown\" />\r\n                        Ingredients\r\n                      </Accordion.Title>\r\n                      <Accordion.Content active={activeIndex === 1}>\r\n                        <Table fluid color=\"green\">\r\n                          <Table.Header>\r\n                            <Table.Row>\r\n                              <Table.HeaderCell>Ingredient</Table.HeaderCell>\r\n                            </Table.Row>\r\n                          </Table.Header>\r\n\r\n                          <Table.Body>\r\n                            {ingredients.map((item) => {\r\n                              return (\r\n                                <Table.Row key={item.id}>\r\n                                  <Table.Cell textAlign=\"left\">\r\n                                    <List>\r\n                                      <List.Item>\r\n                                        <List.Icon\r\n                                          color=\"green\"\r\n                                          name=\"check circle\"\r\n                                        />\r\n                                        <List.Content>\r\n                                          <h6>{item.name}</h6>\r\n                                        </List.Content>\r\n                                      </List.Item>\r\n                                    </List>\r\n                                  </Table.Cell>\r\n                                </Table.Row>\r\n                              );\r\n                            })}\r\n                          </Table.Body>\r\n                        </Table>\r\n                      </Accordion.Content>\r\n                    </Accordion>\r\n                  </React.Fragment>\r\n                ) : (\r\n                  \"\"\r\n                )\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </Card.Content>\r\n            {isForMenu ? (\r\n              <Card.Content extra>\r\n                <Button\r\n                  basic\r\n                  color=\"red\"\r\n                  type=\"button\"\r\n                  onClick={() => this.props.handleAdd(this.props.product)}\r\n                  fluid\r\n                  danger\r\n                >\r\n                  {`Add to basket  `} <Icon name=\"shopping basket\" />\r\n                </Button>\r\n              </Card.Content>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {isForMenu ? (\r\n              \"\"\r\n            ) : (\r\n              <Card.Content extra>\r\n                <Link to={`/${this.props.product.VirtualShop.shopUrl}`}>\r\n                  <Button basic color=\"red\" type=\"button\" fluid danger>\r\n                    {`Order from seller's store  `}\r\n                  </Button>\r\n                </Link>\r\n              </Card.Content>\r\n            )}\r\n          </Card>\r\n        </Grid.Column>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Grid, Button, Header, List, Table } from \"semantic-ui-react\";\r\nimport {\r\n  DEFAULT_LOGO,\r\n  displayRating,\r\n  totalRating,\r\n  formatPrice,\r\n} from \"../../utility/global\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Order extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    const { name, quantity, id, price } = this.props.item;\r\n    return (\r\n      <React.Fragment>\r\n        <Table.Row>\r\n          <Table.Cell><List.Icon\r\n              name=\"minus square\"\r\n              onClick={() => this.props.handleRemove(id)}\r\n            />  {`${quantity}x ${name} `}</Table.Cell>\r\n          <Table.Cell textAlign='right'> {`${formatPrice(quantity * price)}`}</Table.Cell>\r\n        </Table.Row>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Nav from \"./common/nav\";\r\nimport SideMenu from \"./common/sideMenu\";\r\nimport ClientService from \"../services/clientService\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport clientService from \"../services/clientService\";\r\nimport {\r\n  MISSING_USER_MSG,\r\n  DEFAULT_BANNER,\r\n  DEFAULT_LOGO,\r\n} from \"../utility/global\";\r\nimport {\r\n  Button,\r\n  Dropdown,\r\n  Form,\r\n  Image,\r\n  Message,\r\n  Input,\r\n  Divider,\r\n  Header,\r\n  Segment,\r\n  Label,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\nimport AfterNav from \"./common/afterNav\";\r\n//import \"date-fns\";\r\n//import MomentUtils from \"@date-io/moment\";\r\n\r\nconst durations = [];\r\n\r\nexport default class Social extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    facebook: \"\",\r\n    twitter: \"\",\r\n    instagram: \"\",\r\n    showAlert: false,\r\n    message: \"\",\r\n    id: \"\",\r\n    userId: \"\",\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    const result = await ClientService.hasAuth();\r\n    const user = result.data.data;\r\n    if (user) {\r\n      ClientService.findSocialById(user.id)\r\n        .then((response) => {\r\n          console.log(response);\r\n          const data = response.data.data;\r\n\r\n          const { id, facebook, twitter, instagram } = data;\r\n\r\n          this.setState({\r\n            id,\r\n            facebook,\r\n            twitter,\r\n            instagram,\r\n            userId: user.id,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          //console.log(err);\r\n        });\r\n    }\r\n  };\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const { id, facebook, twitter, instagram, userId } = this.state;\r\n    const result = await ClientService.hasAuth();\r\n    const user = result.data.data;\r\n    if (user) {\r\n      if (facebook != \"\" || instagram != \"\" || twitter != \"\") {\r\n        clientService\r\n          .social({\r\n            id,\r\n            userId,\r\n            facebook,\r\n            twitter,\r\n            instagram,\r\n          })\r\n          .then((response) => {\r\n            this.setState({\r\n              showAlert: true,\r\n              message: response.data.message,\r\n            });\r\n          })\r\n          .catch((err) => {\r\n            const message = err.response.data.message;\r\n            this.setState({ showAlert: true, message: message });\r\n          });\r\n      }\r\n    } else {\r\n      this.setState({ showAlert: true, message: MISSING_USER_MSG });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { id, facebook, twitter, instagram, showAlert, message } = this.state;\r\n\r\n    const alert = showAlert ? (\r\n      <div className=\"ui info message\">\r\n        <p>{message}</p>\r\n      </div>\r\n    ) : (\r\n      \"\"\r\n    );\r\n\r\n    return (\r\n      <Container fluid={true}>\r\n        <Nav />\r\n        <AfterNav form={\"Social Setup\"} />\r\n        <hr></hr>\r\n        <Row style={{ paddingTop: \"10px\" }}>\r\n          <Col lg=\"2\">\r\n            <SideMenu />\r\n          </Col>\r\n          <Col lg=\"1\"></Col>\r\n          <Col className=\"dashboard-panel\" lg=\"6\">\r\n            <Message attached header=\"Social Setup\" />\r\n            <Form\r\n              className=\"attached fluid segment\"\r\n              onSubmit={this.onSubmit}\r\n              size=\"tiny\"\r\n            >\r\n              {alert}\r\n              <Form.Field width={16}>\r\n                <label>Facebook</label>\r\n                <Input\r\n                  value={facebook}\r\n                  labelPosition=\"left\"\r\n                  onChange={this.onChange}\r\n                  name=\"facebook\"\r\n                  type=\"text\"\r\n                  placeholder=\"Facebook Url\"\r\n                ></Input>\r\n              </Form.Field>\r\n              <Form.Field width={16}>\r\n                <label>Twitter</label>\r\n                <Input\r\n                  value={twitter}\r\n                  labelPosition=\"left\"\r\n                  onChange={this.onChange}\r\n                  name=\"twitter\"\r\n                  type=\"text\"\r\n                  placeholder=\"Twitter Url\"\r\n                ></Input>\r\n              </Form.Field>\r\n              <Form.Field width={16}>\r\n                <label>Instagram</label>\r\n                <Input\r\n                  value={instagram}\r\n                  labelPosition=\"left\"\r\n                  onChange={this.onChange}\r\n                  name=\"instagram\"\r\n                  type=\"text\"\r\n                  placeholder=\"Instagram Url\"\r\n                ></Input>\r\n              </Form.Field>\r\n              <br />\r\n              <Button color=\"red\" size=\"mini\" type=\"submit\">\r\n                Save  <Icon name=\"save\" />\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, createRef } from \"react\";\r\nimport ClientService from \"../services/clientService\";\r\nimport Geocode from \"react-geocode\";\r\nimport Footer from \"./Footer\";\r\nimport ErrorPage from \"./errorPage\";\r\nimport {\r\n  Map,\r\n  GoogleApiWrapper,\r\n  Marker,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n} from \"google-maps-react\";\r\nimport NavBar from \"./NavBar\";\r\nimport {\r\n  Grid,\r\n  Image,\r\n  Tab,\r\n  Message,\r\n  Card,\r\n  Icon,\r\n  List,\r\n  Button,\r\n  Table,\r\n  Header,\r\n  Ref,\r\n  Dimmer,\r\n  Container,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport ItemCard from \"./widgets/ItemCard\";\r\nimport Order from \"./widgets/order\";\r\nimport Review from \"./widgets/Review\";\r\nimport ReviewList from \"./widgets/reviewList\";\r\nimport {\r\n  DEFAULT_USER,\r\n  DEFAULT_BANNER,\r\n  DEFAULT_LOGO,\r\n  Rating,\r\n  formatPrice,\r\n  getTempId,\r\n  toastOptions,\r\n  formatCurrentDay,\r\n  formatCurrentTime,\r\n  formatClose,\r\n  days,\r\n} from \"../utility/global\";\r\nimport clientService from \"../services/clientService\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Social from \"../adminComponents/social\";\r\nimport { toast } from \"react-toastify\";\r\nimport { fetchUser } from \"../actions/productActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nconst moment = require(\"moment\");\r\n\r\nclass ShopPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    isAllowUpdate: false,\r\n    shopName: \"\",\r\n    about: \"\",\r\n    notice: \"\",\r\n    minTime: \"\",\r\n    maxTime: \"\",\r\n    minOrder: \"\",\r\n    percentageDiscount: \"\",\r\n    discountAmount: \"\",\r\n    bannerPreviewUrl: \"\",\r\n    logoPreviewUrl: \"\",\r\n    shopTypeText: \"\",\r\n    products: [],\r\n    shopId: \"\",\r\n    lat: \"\",\r\n    lng: \"\",\r\n    firstAddress: \"\",\r\n    postCode: \"\",\r\n    city: \"\",\r\n    comments: [],\r\n    socials: \"\",\r\n    orders: [],\r\n    offerDiscount: 0,\r\n    subTotal: 0,\r\n    total: 0,\r\n    deliveryPrice: 0,\r\n    redirect: false,\r\n    posterName: \"\",\r\n    replyResult: \"\",\r\n    sunMinDate: \"\",\r\n    sunMaxDate: \"\",\r\n    monMinDate: \"\",\r\n    monMaxDate: \"\",\r\n    tueMinDate: \"\",\r\n    tueMaxDate: \"\",\r\n    wedMinDate: \"\",\r\n    wedMaxDate: \"\",\r\n    thurMinDate: \"\",\r\n    thurMaxDate: \"\",\r\n    friMinDate: \"\",\r\n    friMaxDate: \"\",\r\n    satMinDate: \"\",\r\n    satMaxDate: \"\",\r\n    hasSun: false,\r\n    hasMon: false,\r\n    hasTue: false,\r\n    hasWed: false,\r\n    hasThur: false,\r\n    hasFri: false,\r\n    hasSat: false,\r\n  };\r\n  contextRef = createRef();\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextState.isAllowUpdate) {\r\n      const {\r\n        shopId,\r\n        orders,\r\n        subTotal,\r\n        offerDiscount,\r\n        total,\r\n        deliveryPrice,\r\n      } = nextState;\r\n      const cart = clientService.cart({\r\n        shopId,\r\n        orders,\r\n        subTotal,\r\n        offerDiscount,\r\n        total,\r\n        deliveryPrice,\r\n        tempId: getTempId(),\r\n      });\r\n    }\r\n  }\r\n  componentWillReceiveProps = async (nextProps) => {\r\n    if (nextProps) {\r\n      const user = nextProps.user;\r\n      if (user) {\r\n        this.setState({\r\n          posterName: user.firstName,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  componentDidMount = async () => {\r\n    try {\r\n      const shopUrl = this.props.match.params.shopUrl;\r\n      const getShop = await ClientService.findShopByUrl({ shopUrl });\r\n\r\n      const data = getShop.data;\r\n\r\n      const {\r\n        id,\r\n        shopName,\r\n        about,\r\n        logo,\r\n        shopBanners,\r\n        products,\r\n        ShopType,\r\n        notice,\r\n        minTime,\r\n        maxTime,\r\n        minOrder,\r\n        banner,\r\n        percentageDiscount,\r\n        discountAmount,\r\n        City,\r\n        postCode,\r\n        firstAddress,\r\n        socials,\r\n        deliveryPrice,\r\n      } = data;\r\n\r\n      this.setState({\r\n        shopId: id,\r\n        shopName: shopName,\r\n        notice,\r\n        socials,\r\n        minTime,\r\n        maxTime,\r\n        about,\r\n        minOrder,\r\n        orders: [],\r\n        deliveryPrice: deliveryPrice ? deliveryPrice : 0,\r\n        city: City ? City.name : \"\",\r\n        postCode,\r\n        firstAddress,\r\n        percentageDiscount,\r\n        discountAmount: discountAmount ? discountAmount : 0,\r\n        logoPreviewUrl: logo ? `${logo}` : DEFAULT_LOGO,\r\n        bannerPreviewUrl: banner ? `${banner}` : DEFAULT_BANNER,\r\n      });\r\n\r\n      clientService.productsByShopId(id).then((response) => {\r\n        this.setState({\r\n          products: response.data.data,\r\n        });\r\n      });\r\n      Geocode.setApiKey(process.env.REACT_APP_GOOGLE_KEY);\r\n      Geocode.fromAddress(`${firstAddress}, ${City.name}`).then(\r\n        (response) => {\r\n          const { lat, lng } = response.results[0].geometry.location;\r\n          this.setState({\r\n            lat: lat,\r\n            lng: lng,\r\n          });\r\n        },\r\n        (error) => {}\r\n      );\r\n\r\n      let storeTime = data.storeTime;\r\n\r\n      if (storeTime.length > 0) {\r\n        const openingTime = storeTime[0];\r\n\r\n        const sunday = openingTime.Sunday;\r\n        const monday = openingTime.Monday;\r\n        const tuesday = openingTime.Tuesday;\r\n        const wednesday = openingTime.Wednesday;\r\n        const thursday = openingTime.Thursday;\r\n        const friday = openingTime.Friday;\r\n        const saturday = openingTime.Saturday;\r\n\r\n        if (sunday) {\r\n          this.setState({\r\n            hasSun: true,\r\n            sunMinDate: moment(sunday.opening),\r\n            sunMaxDate: moment(sunday.closing),\r\n          });\r\n        }\r\n        if (monday) {\r\n          this.setState({\r\n            hasMon: true,\r\n            monMinDate: moment(monday.opening),\r\n            monMaxDate: moment(monday.closing),\r\n          });\r\n        }\r\n        if (tuesday) {\r\n          this.setState({\r\n            hasTue: true,\r\n            tueMinDate: moment(tuesday.opening),\r\n            tueMaxDate: moment(tuesday.closing),\r\n          });\r\n        }\r\n        if (wednesday) {\r\n          this.setState({\r\n            hasWed: true,\r\n            wedMinDate: moment(wednesday.opening),\r\n            wedMaxDate: moment(wednesday.closing),\r\n          });\r\n        }\r\n        if (thursday) {\r\n          this.setState({\r\n            hasThur: true,\r\n            thurMinDate: moment(thursday.opening),\r\n            thurMaxDate: moment(thursday.closing),\r\n          });\r\n        }\r\n        if (friday) {\r\n          this.setState({\r\n            hasFri: true,\r\n            friMinDate: moment(friday.opening),\r\n            friMaxDate: moment(friday.closing),\r\n          });\r\n        }\r\n        if (saturday) {\r\n          this.setState({\r\n            hasSat: true,\r\n            satMinDate: moment(saturday.opening),\r\n            satMaxDate: moment(saturday.closing),\r\n          });\r\n        }\r\n      }\r\n    } catch (err) {\r\n      this.setState({\r\n        redirect: true,\r\n      });\r\n    }\r\n    const getCart = await clientService.getCartByTempId({\r\n      shopId: this.state.shopId,\r\n      tempId: getTempId(),\r\n    });\r\n\r\n    const data = getCart.data.data;\r\n\r\n    if (data) {\r\n      const { total, orders, subTotal, offerDiscount } = data;\r\n      this.setState({\r\n        total: total ? parseFloat(total) : 0,\r\n        subTotal: subTotal ? parseFloat(subTotal) : 0,\r\n        orders: orders ? orders : [],\r\n        offerDiscount: offerDiscount ? parseFloat(offerDiscount) : 0,\r\n      });\r\n    }\r\n    //console.log(\"get Cart\", getCart.data);\r\n  };\r\n  handleAddOrder = async (data) => {\r\n    try {\r\n      this.setState({ isAllowUpdate: true });\r\n\r\n      const newOrder = {\r\n        name: data.name,\r\n        quantity: 1,\r\n        id: data.id,\r\n        price: data.price,\r\n      };\r\n\r\n      const subTotal = parseFloat(newOrder.price) + this.state.subTotal;\r\n\r\n      const findOrder = this.state.orders.find(\r\n        (order) => order.id == newOrder.id\r\n      );\r\n      let newOfferDiscount = 0;\r\n      let newTotal = 0;\r\n\r\n      if (findOrder) {\r\n        findOrder.quantity++;\r\n\r\n        newOfferDiscount = this.findDiscount(subTotal);\r\n        newTotal = this.getTotal(subTotal, newOfferDiscount);\r\n\r\n        this.saveToServer =\r\n          (this.state.shopId,\r\n          this.state.orders,\r\n          subTotal,\r\n          newOfferDiscount,\r\n          newTotal);\r\n        this.setState({\r\n          orders: [...this.state.orders],\r\n          subTotal: subTotal,\r\n          offerDiscount: newOfferDiscount,\r\n          total: newTotal,\r\n        });\r\n        // const { shopName, orders, subTotal, offerDiscount, total } = this.state;\r\n        // const cart = clientService.cart({\r\n        //   shopName,\r\n        //   data: { orders, subTotal, offerDiscount, total },\r\n        // });\r\n      } else {\r\n        newOfferDiscount = this.findDiscount(subTotal);\r\n        newTotal = this.getTotal(subTotal, newOfferDiscount);\r\n\r\n        this.setState({\r\n          orders: [...this.state.orders, newOrder],\r\n          subTotal: subTotal,\r\n          offerDiscount: newOfferDiscount,\r\n          total: newTotal,\r\n        });\r\n        // const { shopName, orders, subTotal, offerDiscount, total } = this.state;\r\n        // const cart = clientService.cart({\r\n        //   shopName,\r\n        //   data: { orders, subTotal, offerDiscount, total },\r\n        // });\r\n      }\r\n      toast.success(\"Item was added successfully.\", toastOptions());\r\n    } catch (err) {}\r\n  };\r\n\r\n  handleRemoveOrder = (id) => {\r\n    try {\r\n      this.setState({ isAllowUpdate: true });\r\n      const currentOrder = this.state.orders.filter((order) => order.id == id);\r\n      const filteredOrder = this.state.orders.filter((order) => order.id != id);\r\n\r\n      let subTotal =\r\n        this.state.subTotal -\r\n        parseFloat(currentOrder[0].price) *\r\n          parseFloat(currentOrder[0].quantity);\r\n\r\n      let newOfferDiscount = this.findDiscount(subTotal);\r\n      let newTotal = this.getTotal(subTotal, newOfferDiscount);\r\n\r\n      if (filteredOrder.length == 0) {\r\n        newTotal = 0;\r\n        newOfferDiscount = 0;\r\n        subTotal = 0;\r\n      }\r\n\r\n      this.setState({\r\n        orders: [...filteredOrder],\r\n        subTotal: subTotal,\r\n        offerDiscount: newOfferDiscount,\r\n        total: newTotal,\r\n      });\r\n      toast.success(\"Item was removed successfully.\", toastOptions());\r\n    } catch (err) {}\r\n  };\r\n  handleTabChange = (e, { activeIndex }) => {\r\n    if (activeIndex === 2) {\r\n      const shopId = this.state.shopId;\r\n      clientService\r\n        .findReviewByShop({ shopId })\r\n        .then((response) => {\r\n          const data = response.data.data;\r\n          this.setState({\r\n            comments: data,\r\n          });\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  findDiscount(subTotal) {\r\n    const { percentageDiscount, discountAmount } = this.state;\r\n\r\n    if (percentageDiscount && subTotal >= discountAmount) {\r\n      return (percentageDiscount / 100) * subTotal;\r\n\r\n      // this.setState({ subTotal: total - discountPercent });\r\n    } else if (discountAmount && !percentageDiscount) return discountAmount;\r\n    else return 0;\r\n  }\r\n  getTotal(subTotal, offerDiscount) {\r\n    const { deliveryPrice } = this.state;\r\n\r\n    return subTotal - offerDiscount + parseFloat(deliveryPrice);\r\n  }\r\n  handleReply = async (data) => {\r\n    const { content, userId, ratingId } = data;\r\n    const result = await clientService.createShopReviewResponse({\r\n      content,\r\n      userId,\r\n      ratingId,\r\n    });\r\n    this.setState({ replyResult: result.data.data });\r\n  };\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <ErrorPage />;\r\n    } else {\r\n      const mapStyles = {\r\n        width: \"100%\",\r\n        margin: \"auto\",\r\n        height: \"100%\",\r\n      };\r\n      const { socials, products } = this.state;\r\n      let socialRender;\r\n      const {\r\n        hasSun,\r\n        hasMon,\r\n        hasTue,\r\n        hasWed,\r\n        hasThur,\r\n        hasFri,\r\n        hasSat,\r\n        sunMinDate,\r\n        sunMaxDate,\r\n        monMinDate,\r\n        monMaxDate,\r\n        tueMinDate,\r\n        tueMaxDate,\r\n        wedMinDate,\r\n        wedMaxDate,\r\n        thurMinDate,\r\n        thurMaxDate,\r\n        friMinDate,\r\n        friMaxDate,\r\n        satMinDate,\r\n        satMaxDate,\r\n        about,\r\n      } = this.state;\r\n\r\n      if (socials.length > 0) {\r\n        let social = socials[0];\r\n\r\n        const facebook = social.facebook ? (\r\n          <a target=\"blank\" href={social.facebook}>\r\n            <Button circular color=\"facebook\" icon=\"facebook\" />\r\n          </a>\r\n        ) : (\r\n          \"\"\r\n        );\r\n        const twitter = social.twitter ? (\r\n          <a target=\"blank\" href={social.twitter}>\r\n            <Button circular color=\"twitter\" icon=\"twitter\" />\r\n          </a>\r\n        ) : (\r\n          \"\"\r\n        );\r\n        const instagram = social.instagram ? (\r\n          <a target=\"blank\" href={social.instagram}>\r\n            <Button circular color=\"instagram\" icon=\"instagram\" />\r\n          </a>\r\n        ) : (\r\n          \"\"\r\n        );\r\n\r\n        socialRender = (\r\n          <div>\r\n            {facebook}\r\n            {instagram}\r\n            {twitter}\r\n          </div>\r\n        );\r\n      }\r\n      const panes = [\r\n        {\r\n          menuItem: \"Menu\",\r\n          render: () => (\r\n            <React.Fragment>\r\n              <Tab.Pane>\r\n                <Grid stackable columns={3}>\r\n                  {products.length > 0 ? (\r\n                    products.map((product) => {\r\n                      return (\r\n                        <ItemCard\r\n                          handleAdd={this.handleAddOrder}\r\n                          key={product.id}\r\n                          isForMenu={true}\r\n                          product={product}\r\n                        />\r\n                      );\r\n                    })\r\n                  ) : (\r\n                    <Dimmer.Dimmable\r\n                      style={{ height: 100, width: \"100%\" }}\r\n                      as={Segment}\r\n                      dimmed={true}\r\n                    >\r\n                      <Container textAlign=\"center\">\r\n                        <h3>Seller has got no menu yet. </h3>\r\n                      </Container>\r\n                    </Dimmer.Dimmable>\r\n                  )}\r\n                </Grid>\r\n              </Tab.Pane>\r\n            </React.Fragment>\r\n          ),\r\n        },\r\n        {\r\n          menuItem: \"Info\",\r\n          render: () => (\r\n            <Tab.Pane>\r\n              <Grid style={{ height: 220, padding: 20 }} columns={2} padded>\r\n                <Grid.Column>\r\n                  <Card\r\n                    header={this.state.firstAddress}\r\n                    meta={this.state.city}\r\n                    description={this.state.postCode}\r\n                  />\r\n                  {socialRender}\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                  <Map\r\n                    google={this.props.google}\r\n                    zoom={15}\r\n                    style={mapStyles}\r\n                    initialCenter={{\r\n                      lat: this.state.lat,\r\n                      lng: this.state.lng,\r\n                    }}\r\n                  >\r\n                    <Marker\r\n                      position={{ lat: this.state.lat, lng: this.state.lng }}\r\n                    />\r\n                  </Map>\r\n                </Grid.Column>\r\n              </Grid>\r\n              <hr></hr>\r\n\r\n              <Grid padded>\r\n                <Grid.Row>\r\n                  <Grid.Column width={8}>\r\n                    <Header as=\"h4\">Opening hours</Header>\r\n                    <hr />\r\n                    <Table basic=\"very\">\r\n                      <Table.Body>\r\n                        <Table.Row>\r\n                          <Table.Cell>{formatCurrentDay(\"Sunday\")}</Table.Cell>\r\n                          <Table.Cell>\r\n                            {hasSun\r\n                              ? formatCurrentTime(\r\n                                  \"Sunday\",\r\n                                  sunMinDate,\r\n                                  sunMaxDate\r\n                                )\r\n                              : formatClose(days.Sunday)}\r\n                          </Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row>\r\n                          <Table.Cell>{formatCurrentDay(\"Monday\")}</Table.Cell>\r\n                          <Table.Cell>\r\n                            {hasMon\r\n                              ? formatCurrentTime(\r\n                                  \"Monday\",\r\n                                  monMinDate,\r\n                                  monMaxDate\r\n                                )\r\n                              : formatClose(days.Monday)}\r\n                          </Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row>\r\n                          <Table.Cell>{formatCurrentDay(\"Tuesday\")}</Table.Cell>\r\n                          <Table.Cell>\r\n                            {hasTue\r\n                              ? formatCurrentTime(\r\n                                  \"Tuesday\",\r\n                                  tueMinDate,\r\n                                  tueMaxDate\r\n                                )\r\n                              : formatClose(days.Tuesday)}\r\n                          </Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row>\r\n                          <Table.Cell>\r\n                            {formatCurrentDay(\"Wednesday\")}\r\n                          </Table.Cell>\r\n                          <Table.Cell>\r\n                            {hasWed\r\n                              ? formatCurrentTime(\r\n                                  \"Wednesday\",\r\n                                  wedMinDate,\r\n                                  wedMaxDate\r\n                                )\r\n                              : formatClose(days.Wednesday)}\r\n                          </Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row>\r\n                          <Table.Cell>\r\n                            {formatCurrentDay(\"Thursday\")}\r\n                          </Table.Cell>\r\n                          <Table.Cell>\r\n                            {hasThur\r\n                              ? formatCurrentTime(\r\n                                  \"Thursday\",\r\n                                  thurMinDate,\r\n                                  thurMaxDate\r\n                                )\r\n                              : formatClose(days.Thursday)}\r\n                          </Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row>\r\n                          <Table.Cell>{formatCurrentDay(\"Friday\")}</Table.Cell>\r\n                          <Table.Cell>\r\n                            {hasFri\r\n                              ? formatCurrentTime(\r\n                                  \"Friday\",\r\n                                  friMinDate,\r\n                                  friMaxDate\r\n                                )\r\n                              : formatClose(days.Friday)}\r\n                          </Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row>\r\n                          <Table.Cell>\r\n                            {formatCurrentDay(\"Saturday\")}\r\n                          </Table.Cell>\r\n                          <Table.Cell>\r\n                            {hasSat\r\n                              ? formatCurrentTime(\r\n                                  \"Saturday\",\r\n                                  satMinDate,\r\n                                  satMaxDate\r\n                                )\r\n                              : formatClose(days.Saturday)}\r\n                          </Table.Cell>\r\n                        </Table.Row>\r\n                      </Table.Body>\r\n                    </Table>\r\n                  </Grid.Column>\r\n                  <Grid.Column width={8}>\r\n                    <Header as=\"h4\">About us</Header>\r\n                    <hr />\r\n                    {about}\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              </Grid>\r\n            </Tab.Pane>\r\n          ),\r\n        },\r\n        {\r\n          menuItem: \"Rating\",\r\n          render: () => (\r\n            <Tab.Pane>\r\n              <Review\r\n                isForShop={true}\r\n                poster={this.state.posterName}\r\n                shopId={this.state.shopId}\r\n              />\r\n              <hr></hr>\r\n              {this.state.comments.map((comment) => {\r\n                return (\r\n                  <ReviewList\r\n                    poster={this.state.posterName}\r\n                    key={comment.id}\r\n                    handleReply={this.handleReply}\r\n                    replyResult={this.state.replyResult}\r\n                    data={comment}\r\n                  />\r\n                );\r\n              })}\r\n            </Tab.Pane>\r\n          ),\r\n        },\r\n      ];\r\n      const styles = {\r\n        height: 150,\r\n        width: \"100%\",\r\n        objectFit: \"cover\",\r\n        objectPosition: \"center center\",\r\n      };\r\n      const {\r\n        logoPreviewUrl,\r\n        bannerPreviewUrl,\r\n        notice,\r\n        minTime,\r\n        maxTime,\r\n        minOrder,\r\n        total,\r\n        orders,\r\n        percentageDiscount,\r\n        discountAmount,\r\n        subTotal,\r\n        shopId,\r\n        deliveryPrice,\r\n        offerDiscount,\r\n      } = this.state;\r\n\r\n      const orderLength = orders.length;\r\n      const hasOrder = orderLength > 0;\r\n\r\n      const isShowDeliveryLimBox = subTotal < minOrder && orderLength > 0;\r\n\r\n      return (\r\n        <React.Fragment>\r\n          <NavBar />\r\n          <Ref innerRef={this.contextRef}>\r\n            <Grid stackable style={{ margin: 70 }}>\r\n              <Grid.Row>\r\n                <Grid.Column width={4}>\r\n                  <Image\r\n                    style={styles}\r\n                    circular\r\n                    className=\"img-resize\"\r\n                    src={logoPreviewUrl || DEFAULT_LOGO}\r\n                  />\r\n                </Grid.Column>\r\n                <Grid.Column width={12}>\r\n                  <Image\r\n                    style={styles}\r\n                    className=\"img-resize\"\r\n                    src={bannerPreviewUrl}\r\n                  />\r\n                  {notice ? (\r\n                    <Message\r\n                      icon=\"announcement\"\r\n                      // header=\"Have you heard about our mailing list?\"\r\n                      content={notice}\r\n                    />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column width={4}>\r\n                  <Message floating>\r\n                    <Message.Header>{this.state.shopName}</Message.Header>\r\n                  </Message>\r\n\r\n                  <Message floating>\r\n                    <List>\r\n                      {percentageDiscount ? (\r\n                        <List.Item>\r\n                          <List.Icon color=\"red\" name=\"fire\" />\r\n                          <List.Content className=\"red\">\r\n                            {\" \"}\r\n                            {percentageDiscount}% off when you spend £\r\n                            {discountAmount}\r\n                          </List.Content>\r\n                          <hr />\r\n                        </List.Item>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                      {minTime ? (\r\n                        <List.Item>\r\n                          <List.Icon name=\"shipping fast\" />\r\n                          <List.Content>\r\n                            {\" \"}\r\n                            Delivery {minTime}-{maxTime} mins\r\n                          </List.Content>\r\n                          <hr />\r\n                        </List.Item>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </List>\r\n                    {!isShowDeliveryLimBox ? (\r\n                      \"\"\r\n                    ) : (\r\n                      <div className=\"alertBox\">{`Spend ${formatPrice(\r\n                        minOrder - subTotal\r\n                      )} more for delivery`}</div>\r\n                    )}\r\n                    {hasOrder ? (\r\n                      <Table color=\"red\">\r\n                        <Table.Body>\r\n                          {orders.map((order) => {\r\n                            return (\r\n                              <Order\r\n                                handleRemove={this.handleRemoveOrder}\r\n                                item={order}\r\n                              />\r\n                            );\r\n                          })}\r\n                        </Table.Body>\r\n                      </Table>\r\n                    ) : (\r\n                      `There are no items in your basket`\r\n                    )}\r\n\r\n                    {hasOrder ? (\r\n                      <Table color=\"orange\">\r\n                        <Table.Body>\r\n                          <Table.Row>\r\n                            <Table.Cell>SubTotal:</Table.Cell>\r\n                            <Table.Cell textAlign=\"right\">\r\n                              {formatPrice(subTotal)}\r\n                            </Table.Cell>\r\n                          </Table.Row>\r\n                          <Table.Row>\r\n                            <Table.Cell>Delivery:</Table.Cell>{\" \"}\r\n                            <Table.Cell textAlign=\"right\">\r\n                              {formatPrice(deliveryPrice)}\r\n                            </Table.Cell>\r\n                          </Table.Row>\r\n                          <Table.Row>\r\n                            <Table.Cell>Discount:</Table.Cell>{\" \"}\r\n                            <Table.Cell textAlign=\"right\">\r\n                              {formatPrice(offerDiscount)}\r\n                            </Table.Cell>\r\n                          </Table.Row>\r\n                          <Table.Row>\r\n                            <Table.Cell>Total:</Table.Cell>{\" \"}\r\n                            <Table.Cell textAlign=\"right\">\r\n                              {formatPrice(total)}\r\n                            </Table.Cell>\r\n                          </Table.Row>\r\n                        </Table.Body>\r\n                      </Table>\r\n                    ) : (\r\n                      ``\r\n                    )}\r\n                    {hasOrder ? (\r\n                      <Link to={`/delivery/detail/${getTempId()}/${shopId}`}>\r\n                        <Button\r\n                          fluid\r\n                          primary\r\n                          disabled={\r\n                            parseFloat(subTotal) <= parseFloat(minOrder)\r\n                          }\r\n                        >\r\n                          Checkout\r\n                        </Button>\r\n                      </Link>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </Message>\r\n                </Grid.Column>\r\n                <Grid.Column width={12}>\r\n                  <Tab panes={panes} onTabChange={this.handleTabChange} />\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Ref>\r\n          <Footer />\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\nShopPage.propTypes = {\r\n  fetchUser: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  user: state.products.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchUser })(\r\n  GoogleApiWrapper({\r\n    apiKey: \"AIzaSyDSYuGeHrv1KmGmB-mU1PdtvBNozgoYctU\",\r\n  })(ShopPage)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport NavBar from \"./NavBar\";\r\nimport ErrorPage from \"./errorPage\";\r\nimport Footer from \"./Footer\";\r\n\r\nimport {\r\n  Grid,\r\n  Image,\r\n  Message,\r\n  Container,\r\n  Dropdown,\r\n  TextArea,\r\n  Icon,\r\n  Button,\r\n  Form,\r\n  Header,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\n\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { LOGIN_URL } from \"../utility/global\";\r\nimport clientService from \"../services/clientService\";\r\nimport { Input } from \"@material-ui/core\";\r\nclass ContactUs extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    redirect: false,\r\n    code: \"\",\r\n    reason: \"\",\r\n    name: \"\",\r\n    message: \"\",\r\n    email: \"\",\r\n    alertMessage: \"\",\r\n    showAlert: false,\r\n  };\r\n  onChangeDropdown = (e, data) => {\r\n    this.setState({\r\n      [data.name]: data.value,\r\n    });\r\n  };\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  componentDidMount = async () => {\r\n    const id = this.props.match.params.id;\r\n    try {\r\n      const response = await clientService.hasExpiredLinkForSellerReg(id);\r\n\r\n      if (response.data.hasExpired) {\r\n        this.setState({\r\n          redirect: true,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      this.setState({\r\n        redirect: true,\r\n      });\r\n    }\r\n  };\r\n  contactUs = async () => {\r\n    const { message, email, name, reason } = this.state;\r\n    if(reason == \"\")\r\n    {\r\n      this.setState({\r\n        showAlert: true,\r\n        alertMessage: \"Please select 'Reason' for enquiry.\",\r\n      });\r\n    }else{\r\n      const contact = await clientService.contactUs({\r\n        message,\r\n        email,\r\n        name,\r\n        reason,\r\n      });\r\n      if (contact.data.error) {\r\n        this.setState({\r\n          showAlert: true,\r\n          alertMessage: \"Your enquiry was unsuccessful, please try again later.\",\r\n        });\r\n      } else {\r\n        this.setState({\r\n          showAlert: true,\r\n          message: \"\",\r\n          email: \"\",\r\n          name: \"\",\r\n          reason: \"\",\r\n          alertMessage:\r\n            \"Your enquiry has been sent, we will get back to you in 2 working days.\",\r\n        });\r\n      }\r\n    }\r\n   \r\n  };\r\n\r\n  render() {\r\n    const { email, reason, alertMessage, showAlert, message, name } = this.state;\r\n    const options = [\r\n      { key: 1, text: \"Order\", value: \"Order\" },\r\n      { key: 2, text: \"Partnership\", value: \"Partnership\" },\r\n      { key: 3, text: \"General enquiry\", value: \"General enquiry\" },\r\n    ];\r\n    return (\r\n      <React.Fragment>\r\n        <NavBar />\r\n        <div style={{ marginTop: 70 }}>\r\n          <Header color=\"red\" textAlign=\"center\" as=\"h2\">\r\n            Contact us\r\n          </Header>\r\n          <hr></hr>\r\n          <Grid>\r\n            <Grid.Row>\r\n              <Grid.Column width={2}></Grid.Column>\r\n              <Grid.Column width={12}>\r\n                <Message icon>\r\n                  <Icon name=\"marker\" />\r\n                  <Message.Content>\r\n                    <Message.Header>Head Office</Message.Header>\r\n                    219 Colinton Rd, Edinburgh EH14 1DJ\r\n                  </Message.Content>\r\n                </Message>\r\n              </Grid.Column>\r\n              <Grid.Column width={2}></Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n          <Grid>\r\n            <Grid.Row>\r\n              <Grid.Column width={2}></Grid.Column>\r\n\r\n              <Grid.Column width={12}>\r\n                <Grid stackable divided=\"vertically\">\r\n                  <Grid.Row columns={2}>\r\n                    <Grid.Column>\r\n                      <iframe\r\n                        src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2235.811522262545!2d-3.2417434844876083!3d55.917968380597834!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x4887c6e73c9031d5%3A0x819b1c05ad811b7a!2s219%20Colinton%20Rd%2C%20Edinburgh%20EH14%201DJ!5e0!3m2!1sen!2suk!4v1595542193579!5m2!1sen!2suk\"\r\n                        width=\"100%\"\r\n                        height=\"450\"\r\n                        frameborder=\"0\"\r\n                        style={{ border: 0 }}\r\n                        allowfullscreen=\"\"\r\n                        aria-hidden=\"false\"\r\n                        tabindex=\"0\"\r\n                      ></iframe>\r\n                    </Grid.Column>\r\n                    <Grid.Column>\r\n                      <Segment>\r\n                        <Form>\r\n                          {showAlert ? (\r\n                            <Message positive>\r\n                              <p>{alertMessage}</p>\r\n                            </Message>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                          <Form.Field required>\r\n                            <label>Full name</label>\r\n                            <input\r\n                              onChange={this.onChange}\r\n                              name=\"name\"\r\n                              value={name}\r\n                              type=\"text\"\r\n                            />\r\n                          </Form.Field>\r\n                          <Form.Field required>\r\n                            <label>Email address</label>\r\n                            <input\r\n                              onChange={this.onChange}\r\n                              name=\"email\"\r\n                              required\r\n                              value={email}\r\n                              type=\"email\"\r\n                            />\r\n                          </Form.Field>\r\n                          <Form.Field required>\r\n                            <label>Reason for contact</label>\r\n                            <Dropdown\r\n                              name=\"reason\"\r\n                              required\r\n                              fluid\r\n                              onChange={this.onChangeDropdown}\r\n                              options={options}\r\n                              selection\r\n                              value={reason}\r\n                            />\r\n                          </Form.Field>\r\n                          <Form.Field required>\r\n                            <label>How can we help?</label>\r\n                            <TextArea value={message} onChange={this.onChange} name=\"message\" />\r\n                          </Form.Field>\r\n                          <hr></hr>\r\n                          <Button\r\n                            onClick={this.contactUs}\r\n                            color=\"red\"\r\n                            type=\"submit\"\r\n                          >\r\n                            Send email\r\n                          </Button>\r\n                        </Form>\r\n                      </Segment>\r\n                    </Grid.Column>\r\n                  </Grid.Row>\r\n                </Grid>\r\n              </Grid.Column>\r\n              <Grid.Column width={2}></Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n        </div>\r\n        <Footer/>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(ContactUs);\r\n","import React, { Component } from \"react\";\r\nimport ErrorPage from \"./errorPage\";\r\nimport NavBar from \"./NavBar\";\r\nimport PaypalBtn from \"react-paypal-checkout\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nimport {\r\n  Grid,\r\n  Image,\r\n  Icon,\r\n  Header,\r\n  Button,\r\n  Form,\r\n  Message,\r\n  Checkbox,\r\n  Table,\r\n  Accordion,\r\n  Dropdown,\r\n  Container,\r\n} from \"semantic-ui-react\";\r\nimport Review from \"./widgets/Review\";\r\nimport ReviewList from \"./widgets/reviewList\";\r\n\r\nimport {\r\n  DEFAULT_USER,\r\n  DEFAULT_BANNER,\r\n  DEFAULT_LOGO,\r\n  totalRating,\r\n  displayRating,\r\n  PAYMENT_SUCCESS_URL,\r\n  formatPrice,\r\n  getTempId,\r\n  TEMP_ID,\r\n} from \"../utility/global\";\r\nimport clientService from \"../services/clientService\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst ENV = process.env.NODE_ENV === \"production\" ? \"production\" : \"sandbox\";\r\nexport default class Payment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    tempId: \"\",\r\n    shopId: \"\",\r\n    activeIndex: 0,\r\n    redirect: false,\r\n    total: 0,\r\n    subTotal: 0,\r\n    orders: [],\r\n    offerDiscount: 0,\r\n    deliveryPrice: 0,\r\n    year: [],\r\n    month: [],\r\n    selectedYear: \"\",\r\n    selectedMonth: \"\",\r\n    shopName: \"\",\r\n  };\r\n  componentDidMount = async () => {\r\n    try {\r\n      const shopId = this.props.match.params.sel;\r\n      const tempId = this.props.match.params.by;\r\n\r\n      this.setState({\r\n        shopId,\r\n        tempId,\r\n      });\r\n\r\n      const getCart = await clientService.getCartByTempId({\r\n        shopId: shopId,\r\n        tempId: getTempId(),\r\n      });\r\n\r\n      // Retrieve shop name for to include in payment description\r\n      const result = await clientService.findShopById(shopId);\r\n      const shopObject = result.data.data;\r\n      this.setState({\r\n        shopName: shopObject ? shopObject.shopName : \"\",\r\n      });\r\n\r\n      const data = getCart.data.data;\r\n\r\n      if (!shopId || !tempId || data.orders.length < 1) {\r\n        this.setState({\r\n          redirect: true,\r\n        });\r\n      } else {\r\n        const { total, subTotal, orders, offerDiscount, deliveryPrice } = data;\r\n        this.setState({\r\n          redirect: false,\r\n          total,\r\n          subTotal,\r\n          shopId,\r\n          offerDiscount,\r\n          orders: orders ? orders : [],\r\n          deliveryPrice,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      this.setState({\r\n        redirect: true,\r\n      });\r\n    }\r\n  };\r\n  stripeToken = async (token) => {\r\n    const { total, tempId, shopName, shopId } = this.state;\r\n    const desc = `refId: ${tempId}  store name: ${shopName}`;\r\n    const product = { amount: total, desc };\r\n    const body = {\r\n      token,\r\n      product,\r\n    };\r\n    const result = await clientService.stripePay({ token, product });\r\n\r\n    if (result.data.error) {\r\n      this.props.history.push(`/payment/error/${tempId}/${shopId}`);\r\n    } else {\r\n      const transac = await clientService.transaction({\r\n        tempId: getTempId(),\r\n        shopId: shopId,\r\n      });\r\n      if (transac.data.error)\r\n        this.props.history.push(`/payment/error/${tempId}/${shopId}`);\r\n      else {\r\n        \r\n        this.props.history.push(`/payment/success/${tempId}/${shopId}`);\r\n        \r\n      }\r\n    }\r\n  };\r\n  onChangeDropdown = (e, data) => {\r\n    this.setState({\r\n      [data.name]: data.value,\r\n    });\r\n  };\r\n\r\n  handleClick = (e, titleProps) => {\r\n    const { index } = titleProps;\r\n    const { activeIndex } = this.state;\r\n    const newIndex = activeIndex === index ? -1 : index;\r\n\r\n    this.setState({ activeIndex: newIndex });\r\n  };\r\n  render() {\r\n    const {\r\n      activeIndex,\r\n      redirect,\r\n      orders,\r\n      total,\r\n      offerDiscount,\r\n      subTotal,\r\n      deliveryPrice,\r\n      year,\r\n      month,\r\n      tempId,\r\n      shopId,\r\n    } = this.state;\r\n    if (redirect) {\r\n      return <ErrorPage />;\r\n    } else {\r\n      const onSuccess = async (payment) => {\r\n        // Congratulation, it came here means everything's fine!\r\n        //console.log(\"The payment was succeeded!\", payment);\r\n        const { shopId } = this.state;\r\n        const { paymentID, email } = payment;\r\n        const transac = await clientService.transaction({\r\n          tempId: getTempId(),\r\n          shopId: shopId,\r\n          paymentId: paymentID,\r\n          paymentEmail: email,\r\n        });\r\n\r\n        this.props.history.push(`/payment/success/${tempId}/${shopId}`);\r\n      };\r\n\r\n      const onCancel = (data) => {\r\n        // User pressed \"cancel\" or close Paypal's popup!\r\n        console.log(\"The payment was cancelled!\", data);\r\n      };\r\n\r\n      const onError = (err) => {\r\n        // The main Paypal's script cannot be loaded or somethings block the loading of that script!\r\n        //console.log(\"Error!\", err);\r\n        this.props.history.push(`/payment/error/${tempId}/${shopId}`);\r\n      };\r\n\r\n      let env = \"production\"; // you can set here to 'production' for production\r\n      let currency = \"GBP\"; // or you can set this value from your props or state\r\n\r\n      let locale = \"en_GB\";\r\n      // For Customize Style: https://developer.paypal.com/docs/checkout/how-to/customize-button/\r\n      let style = {\r\n        label: \"pay\",\r\n        tagline: false,\r\n        size: \"medium\",\r\n        shape: \"pill\",\r\n        color: \"gold\",\r\n      };\r\n\r\n      const client = {\r\n        sandbox:\r\n          \"AbXd8olHlByPObAylLiLc9KoI99qub1YLnHglMT0vHUmNWvPOKHsC0JLs0oDdQA_iJXmjaN11jFY5X3N\",\r\n        production: process.env.REACT_APP_PAYPALKEY,\r\n      };\r\n\r\n      return (\r\n        <React.Fragment>\r\n          <NavBar />\r\n          <Container>\r\n            <Grid style={{ margin: 70 }} stackable>\r\n              <Grid.Column width={2}></Grid.Column>\r\n              <Grid.Column width={12}>\r\n                <Grid stackable divided=\"vertically\">\r\n                  <Grid.Row columns={2}>\r\n                    <Grid.Column width={9}>\r\n                      <Accordion styled>\r\n                        <Accordion.Title\r\n                          active={activeIndex === 0}\r\n                          index={0}\r\n                          onClick={this.handleClick}\r\n                        >\r\n                          <Icon name=\"dropdown\" />\r\n                          Pay with debit or credit card\r\n                        </Accordion.Title>\r\n                        <Accordion.Content active={activeIndex === 0}>\r\n                          <StripeCheckout\r\n                            stripeKey={process.env.REACT_APP_STRIPEKEY}\r\n                            token={this.stripeToken}\r\n                            amount={total * 100}\r\n                          >\r\n                            <Button fluid primary>\r\n                              Pay with card\r\n                            </Button>\r\n                          </StripeCheckout>\r\n                          {/* <Form unstackable> */}\r\n                          {/* <Form.Field>\r\n                              <Image\r\n                                src={`${IMAGE_URL}card_types.png`}\r\n                                size=\"tiny\"\r\n                              />\r\n                              <label>Card number</label>\r\n                              <input />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                              <Checkbox label=\"Save this card\" defaultChecked />\r\n                            </Form.Field>\r\n\r\n                            <label>Expiry date</label>\r\n                            <Form.Group>\r\n                              <Form.Field width={4}>\r\n                                <Dropdown\r\n                                  required\r\n                                  selection\r\n                                  search\r\n                                  fluid\r\n                                  name=\"selectedMonth\"\r\n                                  placeholder=\"MM\"\r\n                                  options={month}\r\n                                  onChange={this.onChangeDropdown}\r\n                                />\r\n                              </Form.Field>\r\n                              <Form.Field width={4}>\r\n                                <Dropdown\r\n                                  required\r\n                                  selection\r\n                                  fluid\r\n                                  search\r\n                                  name=\"selectedYear\"\r\n                                  placeholder=\"Year\"\r\n                                  options={year}\r\n                                  onChange={this.onChangeDropdown}\r\n                                />\r\n                              </Form.Field>\r\n                            </Form.Group>\r\n                            <br />\r\n                            <Form.Group>\r\n                              <Form.Field width={4}>\r\n                                <input />\r\n                              </Form.Field>\r\n                              <Form.Field width={4}>\r\n                                <Image\r\n                                  src={`${IMAGE_URL}card_sample.jpg`}\r\n                                  size=\"tiny\"\r\n                                />\r\n                              </Form.Field>\r\n                            </Form.Group>\r\n\r\n                            <label>Card holder name</label>\r\n                            <input />\r\n                            <br />\r\n                            <br />\r\n                            <Button onClick={this.onSubmit} fluid primary>\r\n                              Place my order\r\n                            </Button>\r\n                          </Form> */}\r\n                        </Accordion.Content>\r\n\r\n                        <Accordion.Title\r\n                          active={activeIndex === 1}\r\n                          index={1}\r\n                          onClick={this.handleClick}\r\n                        >\r\n                          <Icon name=\"dropdown\" />\r\n                          Pay with PayPal\r\n                        </Accordion.Title>\r\n                        <Accordion.Content active={activeIndex === 1}>\r\n                          <PaypalBtn\r\n                            env={env}\r\n                            client={client}\r\n                            currency={currency}\r\n                            total={total}\r\n                            locale={locale}\r\n                            style={style}\r\n                            onError={onError}\r\n                            onSuccess={onSuccess}\r\n                            onCancel={onCancel}\r\n                          />\r\n                        </Accordion.Content>\r\n\r\n                        <Accordion.Title\r\n                          active={activeIndex === 2}\r\n                          index={2}\r\n                          onClick={this.handleClick}\r\n                        >\r\n                          <Icon name=\"dropdown\" />\r\n                          Pay with cash\r\n                        </Accordion.Title>\r\n                        <Accordion.Content active={activeIndex === 2}>\r\n                          <p></p>\r\n                          <p></p>\r\n                        </Accordion.Content>\r\n                      </Accordion>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={7}>\r\n                      <Table color=\"red\">\r\n                        <Table.Header>\r\n                          <Table.Row>\r\n                            <Table.HeaderCell>Your order</Table.HeaderCell>\r\n                            <Table.HeaderCell></Table.HeaderCell>\r\n                          </Table.Row>\r\n                        </Table.Header>\r\n                        <Table.Body>\r\n                          {orders.map((order) => {\r\n                            return (\r\n                              <Table.Row>\r\n                                <Table.Cell>{`${order.quantity}x ${order.name}`}</Table.Cell>\r\n                                <Table.Cell textAlign=\"right\">\r\n                                  {formatPrice(order.price * order.quantity)}\r\n                                </Table.Cell>\r\n                              </Table.Row>\r\n                            );\r\n                          })}\r\n                        </Table.Body>\r\n                      </Table>\r\n                      <Table color=\"orange\">\r\n                        <Table.Header>\r\n                          <Table.Row>\r\n                            <Table.HeaderCell>Your order</Table.HeaderCell>\r\n                            <Table.HeaderCell></Table.HeaderCell>\r\n                          </Table.Row>\r\n                        </Table.Header>\r\n                        <Table.Body>\r\n                          <Table.Row>\r\n                            <Table.Cell>Subtotal</Table.Cell>\r\n                            <Table.Cell textAlign=\"right\">\r\n                              {formatPrice(subTotal)}\r\n                            </Table.Cell>\r\n                          </Table.Row>\r\n                          <Table.Row>\r\n                            <Table.Cell>Delivery</Table.Cell>\r\n                            <Table.Cell textAlign=\"right\">\r\n                              {formatPrice(deliveryPrice)}\r\n                            </Table.Cell>\r\n                          </Table.Row>\r\n                          <Table.Row>\r\n                            <Table.Cell>Discount</Table.Cell>\r\n                            <Table.Cell textAlign=\"right\">\r\n                              {formatPrice(offerDiscount)}\r\n                            </Table.Cell>\r\n                          </Table.Row>\r\n                          <Table.Row>\r\n                            <Table.Cell>Total</Table.Cell>\r\n                            <Table.Cell textAlign=\"right\">\r\n                              {formatPrice(total)}\r\n                            </Table.Cell>\r\n                          </Table.Row>\r\n                        </Table.Body>\r\n                      </Table>\r\n                    </Grid.Column>\r\n                  </Grid.Row>\r\n                </Grid>\r\n              </Grid.Column>\r\n              <Grid.Column width={2}></Grid.Column>\r\n            </Grid>\r\n          </Container>\r\n          <Footer />\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n    Input,\r\n    Label,\r\n    Menu,\r\n    Icon,\r\n    Segment,\r\n    Dimmer,\r\n    Loader,\r\n    Image,\r\n  } from \"semantic-ui-react\";\r\n\r\nfunction loader(props) {\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <Loader active inline=\"centered\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nloader.propTypes = {};\r\n\r\nexport default loader;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport ClientService from \"../../services/clientService\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LoaderTemp from \"../loader\";\r\nimport { updateProduct, updateCategory } from \"../../actions/productActions\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  Input,\r\n  Label,\r\n  Menu,\r\n  Icon,\r\n  Flag,\r\n  Segment,\r\n  Dimmer,\r\n  Loader,\r\n  Image,\r\n} from \"semantic-ui-react\";\r\nclass SideMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      origins: [],\r\n      category: [],\r\n    };\r\n  }\r\n  state = {\r\n    hasOrigin: false,\r\n    hasCategory: false,\r\n  };\r\n  componentDidMount = async () => {\r\n    const originResponse = await ClientService.origins();\r\n    const categoryResponse = await ClientService.category();\r\n\r\n    this.setState({\r\n      category: categoryResponse.data.data,\r\n      hasCategory: true,\r\n      origins: originResponse.data.data,\r\n      hasOrigin: true,\r\n    });\r\n  };\r\n  onChange = (id) => {\r\n    this.props.updateProduct(id);\r\n  };\r\n\r\n  onChangeCategory = (id) => {\r\n    this.props.updateCategory(id);\r\n  };\r\n  render() {\r\n    const { hasCategory, category, hasOrigin, origins } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <Menu fluid vertical>\r\n          {hasOrigin ? (\r\n            origins.map((menu) => {\r\n              const { id, code, shops, name } = menu;\r\n              return shops.length > 0 ? (\r\n                <Menu.Item\r\n                  name={id}\r\n                  // active={activeItem === \"browse\"}\r\n                  onClick={() => this.props.originEvent(id)}\r\n                >\r\n                  <Flag floated=\"right\" name={code} />\r\n                  {name}\r\n                  <Label color=\"\">{shops.length}</Label>\r\n                </Menu.Item>\r\n              ) : (\r\n                <Menu.Item name={id}>\r\n                  <Flag floated=\"right\" name={code} />\r\n                  {name}\r\n                  <Label color=\"\">{shops.length}</Label>\r\n                </Menu.Item>\r\n              );\r\n            })\r\n          ) : (\r\n            <LoaderTemp />\r\n          )}\r\n        </Menu>\r\n        <Icon name=\"filter\" /> Cuisine Categories{\" \"}\r\n        <a className=\"pull-right\">Reset</a>\r\n        <Menu fluid vertical>\r\n          {hasCategory ? (\r\n            category.map((category) => {\r\n              const { id, name, products } = category;\r\n              return products.length > 0 ? (\r\n                <Menu.Item\r\n                  key={id}\r\n                  name={id}\r\n                  onClick={() => this.props.categoryEvent(id)}\r\n                >\r\n                  <Label color=\"\">{category.products.length}</Label>\r\n                  {name}\r\n                </Menu.Item>\r\n              ) : (\r\n                \"\"\r\n              );\r\n            })\r\n          ) : (\r\n            <LoaderTemp />\r\n          )}\r\n        </Menu>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nSideMenu.propTypes = {\r\n  updateProduct: PropTypes.func.isRequired,\r\n  updateCategory: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { updateProduct, updateCategory })(SideMenu);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LISTING_URL } from \"../utility/global\";\r\nimport { Button, Segment } from \"semantic-ui-react\";\r\n\r\nfunction emptySearch(props) {\r\n  return (\r\n    <div>\r\n      <Segment raised textAlign={\"center\"} style={{ padding: 20 }} raised>\r\n        <h2>No result found, try removing some filters</h2>\r\n        <br />\r\n        <a href={LISTING_URL}>\r\n          {\" \"}\r\n          <Button color=\"red\">Return to main listing</Button>\r\n        </a>\r\n      </Segment>\r\n    </div>\r\n  );\r\n}\r\n\r\nemptySearch.propTypes = {};\r\n\r\nexport default emptySearch;\r\n","import React, { Component } from \"react\";\r\nimport SideMenu from \"./SideMenu\";\r\nimport moment from \"moment\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport {\r\n  totalRating,\r\n  displayRating,\r\n  formatPrice,\r\n  LISTING_URL,\r\n  isShopOpen,\r\n  DAYS,\r\n  LATER_TODAY,\r\n  OPEN,\r\n  NOT_OPEN,\r\n  nextOpening,\r\n} from \"../../utility/global\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./listing.css\";\r\nimport BigLoader from \"../bigLoader\";\r\nimport EmptySearch from \"../emptySearch\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchProducts } from \"../../actions/productActions\";\r\n\r\nimport {\r\n  Button,\r\n  Icon,\r\n  Grid,\r\n  Image,\r\n  Item,\r\n  Header,\r\n  Rating,\r\n  Select,\r\n  Input,\r\n  Card,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport clientService from \"../../services/clientService\";\r\n\r\nconst options = [\r\n  { key: \"all\", text: \"All\", value: \"all\" },\r\n  { key: \"meals\", text: \"Meals\", value: \"meals\" },\r\n  { key: \"groceries\", text: \"Groceries\", value: \"groceries\" },\r\n];\r\n\r\nclass Listing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  state = {\r\n    hasListing: false,\r\n    products: [],\r\n    productsClose: [],\r\n    stores: [],\r\n    search: \"\",\r\n  };\r\n  componentDidMount = async () => {\r\n    this.props.fetchProducts(\"\");\r\n    const storeResponse = await clientService.storeListing();\r\n\r\n    this.setState({\r\n      stores: storeResponse.data.data,\r\n    });\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  onSearch = async () => {\r\n    this.props.fetchProducts(this.state.search);\r\n  };\r\n  componentWillReceiveProps(nextProps) {\r\n    //console.log(\"will receive props\", nextProps);\r\n    const propProduct = nextProps.products;\r\n    const productClose = nextProps.productsClose;\r\n\r\n    this.setState({\r\n      products: propProduct,\r\n      productsClose: productClose,\r\n      hasListing: true,\r\n    });\r\n\r\n    const newProducts = nextProps.newProduct;\r\n    if (newProducts.length > 0) {\r\n      this.state.products.unshift(newProducts);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const styles = {\r\n      width: \"100%\",\r\n      height: 150,\r\n      objectFit: \"cover\",\r\n      objectPosition: \"center center\",\r\n    };\r\n    const { products, productsClose, stores, hasListing } = this.state;\r\n\r\n    return (\r\n      <Grid style={{ paddingTop: 80 }} stackable>\r\n        <Grid.Row>\r\n          <Grid.Column style={{ paddingLeft: 40 }} width={3}>\r\n            {this.props.children}\r\n          </Grid.Column>\r\n          <Grid.Column style={{ padding: 20 }} width={10}>\r\n            <React.Fragment>\r\n              <Input fluid type=\"text\" placeholder=\"Search...\" action>\r\n                <input onChange={this.onChange} name=\"search\" />\r\n\r\n                <Button\r\n                  basic\r\n                  onClick={this.onSearch}\r\n                  color=\"blue\"\r\n                  type=\"submit\"\r\n                >\r\n                  Search\r\n                </Button>\r\n              </Input>\r\n              <Card>\r\n                <Card.Content>\r\n                  <Image\r\n                    floated=\"right\"\r\n                    circular\r\n                    size=\"mini\"\r\n                    src=\"https://react.semantic-ui.com/images/avatar/large/steve.jpg\"\r\n                  />\r\n                  <Card.Header>Steve Sanders</Card.Header>\r\n                  <Card.Meta>Friends of Elliot</Card.Meta>\r\n                  <Image src='https://react.semantic-ui.com/images/avatar/large/daniel.jpg' wrapped ui={true} />\r\n                  <Card.Description>\r\n                    Steve wants to add you to the group{\" \"}\r\n                    <strong>best friends</strong>\r\n                  </Card.Description>\r\n                </Card.Content>\r\n               \r\n              </Card>\r\n              {/* <h3>\r\n                <Icon color=\"red\" name=\"food\" /> Available meals\r\n              </h3>\r\n              <hr /> */}\r\n\r\n              {/* {hasListing ? (\r\n                products.length > 0 ? (\r\n                  products.map((seller) => {\r\n                    return (\r\n                      <React.Fragment>\r\n                        <Grid\r\n                          id={seller.id}\r\n                          style={{ backgroundColor: \"white\", padding: 10 }}\r\n                          stackable\r\n                        >\r\n                          <Grid.Row>\r\n                            <Grid.Column width={5}>\r\n                              <Card id={seller.id} fluid color=\"red\" raised>\r\n                                <Image\r\n                                  style={styles}\r\n                                  src={`${IMAGE_URL}${seller.photo}`}\r\n                                  ui={false}\r\n                                />\r\n                              </Card>\r\n                              <Link to={`/${seller.VirtualShop.shopUrl}`}>\r\n                                <Button basic color=\"green\" fluid>\r\n                                  Order from seller\r\n                                </Button>\r\n                              </Link>\r\n                            </Grid.Column>\r\n                            <Grid.Column width={11}>\r\n                              <Grid stackable>\r\n                                <Grid.Row>\r\n                                  <Grid.Column width={8}>\r\n                                    <h4>{seller.name}</h4>\r\n                                    <span>{seller.desc}</span>\r\n                                    <Header color=\"red\" as=\"h4\">\r\n                                      {formatPrice(seller.price)}\r\n                                    </Header>\r\n                                    <Rating\r\n                                      maxRating={5}\r\n                                      rating={displayRating(\r\n                                        seller.productRatings\r\n                                      )}\r\n                                      disabled\r\n                                      icon=\"star\"\r\n                                      size=\"small\"\r\n                                    />{\" \"}\r\n                                    | {totalRating(seller.productRatings)}\r\n                                    <h5>\r\n                                      {\" \"}\r\n                                      <Link\r\n                                        to={`/${seller.VirtualShop.shopUrl}`}\r\n                                      >\r\n                                        {seller.VirtualShop.shopName}\r\n                                      </Link>\r\n                                    </h5>\r\n                                  </Grid.Column>\r\n                                  <Grid.Column className=\"desc\" width={8}>\r\n                                    {seller.VirtualShop.maxTime ? (\r\n                                      <p style={{ color: \"green\" }}>\r\n                                        <Icon\r\n                                          color=\"green\"\r\n                                          size=\"large\"\r\n                                          name=\"hourglass three\"\r\n                                        />\r\n                                        {` ${seller.VirtualShop.minTime} - ${seller.VirtualShop.maxTime} mins`}\r\n                                      </p>\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                    {seller.VirtualShop.percentageDiscount ? (\r\n                                      <p style={{ color: \"red\" }}>\r\n                                        <Icon\r\n                                          color=\"red\"\r\n                                          size=\"large\"\r\n                                          name=\"fire\"\r\n                                        />\r\n                                        {`${seller.VirtualShop.percentageDiscount}% off when you spend £${seller.VirtualShop.discountAmount}`}\r\n                                      </p>\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                    {seller.VirtualShop.minOrder ? (\r\n                                      <p>\r\n                                        <Icon size=\"large\" name=\"money\" />\r\n                                        {` Minimum spend £${seller.VirtualShop.minOrder}`}\r\n                                      </p>\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n\r\n                                    {seller.VirtualShop.deliveryPrice ? (\r\n                                      <p>\r\n                                        <Icon size=\"large\" name=\"truck\" />\r\n                                        {` Delivery £${seller.VirtualShop.deliveryPrice}`}\r\n                                      </p>\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                     {seller.VirtualShop.prepareTime ? (\r\n                                      <p>\r\n                                        <Icon size=\"large\" name=\"spinner\" />\r\n                                        {`Preparation ${seller.VirtualShop.prepareTime.hour} hour(s) ${seller.VirtualShop.prepareTime.min} min(s)`}\r\n                                      </p>\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                  </Grid.Column>\r\n                                </Grid.Row>\r\n                              </Grid>\r\n                            </Grid.Column>\r\n                          </Grid.Row>\r\n                        </Grid>\r\n                        <br />\r\n                        <br />\r\n                      </React.Fragment>\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <EmptySearch />\r\n                )\r\n              ) : (\r\n                <BigLoader />\r\n              )} */}\r\n              <h3>\r\n                <Icon color=\"red\" name=\"food\" /> Order for later\r\n              </h3>\r\n              <hr />\r\n              {this.state.hasListing ? (\r\n                productsClose.length > 0 ? (\r\n                  productsClose.map((seller) => {\r\n                    const shopTimes = seller.VirtualShop.openingTimes\r\n                      .filter((time) => time.checked == true)\r\n                      .sort((a, b) => a.dayNum - b.dayNum);\r\n\r\n                    const currentDayNum = new Date().getDay();\r\n                    //const currentDayWord = DAYS[currentDayNum];\r\n\r\n                    let openStatus;\r\n                    let shopTime;\r\n                    let hasSetTimeForShop = shopTimes.length > 0;\r\n                    let nextOpeningTime;\r\n\r\n                    if (hasSetTimeForShop) {\r\n                      shopTime = shopTimes.find((time) => {\r\n                        return time.dayNum === currentDayNum;\r\n                      });\r\n                      const findIndexOf = shopTimes.indexOf(shopTime);\r\n                      if (findIndexOf != -1) {\r\n                        const nextday = nextOpening(shopTime, shopTimes);\r\n                        nextOpeningTime = `Today at ${moment(\r\n                          nextday.opening\r\n                        ).format(\"LT\")}`;\r\n                      } else {\r\n                        const nextday = nextOpening(shopTime, shopTimes);\r\n                        nextOpeningTime = `Opens ${nextday.day} ${moment(\r\n                          nextday.opening\r\n                        ).format(\"LT\")}`;\r\n                        //console.log(moment(nextday.opening).format(\"LT\"))\r\n                      }\r\n                    }\r\n\r\n                    return (\r\n                      <React.Fragment>\r\n                        <Grid\r\n                          id={seller.id}\r\n                          style={{ backgroundColor: \"white\", padding: 10 }}\r\n                          stackable\r\n                        >\r\n                          <Grid.Row>\r\n                            <Grid.Column width={5}>\r\n                              <Card id={seller.id} fluid color=\"red\" raised>\r\n                                <Image\r\n                                  style={styles}\r\n                                  src={`${seller.photo}`}\r\n                                  ui={false}\r\n                                />\r\n                              </Card>\r\n                              <Link to={`/${seller.VirtualShop.shopUrl}`}>\r\n                                <Button basic color=\"green\" fluid>\r\n                                  Order from seller\r\n                                </Button>\r\n                              </Link>\r\n                            </Grid.Column>\r\n                            <Grid.Column width={11}>\r\n                              <Grid stackable>\r\n                                <Grid.Row>\r\n                                  <Grid.Column width={8}>\r\n                                    <h4>{seller.name}</h4>\r\n                                    <span>{seller.desc}</span>\r\n                                    <Header color=\"red\" as=\"h4\">\r\n                                      {formatPrice(seller.price)}\r\n                                    </Header>\r\n                                    <Rating\r\n                                      maxRating={5}\r\n                                      rating={displayRating(\r\n                                        seller.productRatings\r\n                                      )}\r\n                                      disabled\r\n                                      icon=\"star\"\r\n                                      size=\"small\"\r\n                                    />{\" \"}\r\n                                    | {totalRating(seller.productRatings)}\r\n                                    <h5>\r\n                                      {\" \"}\r\n                                      <Link\r\n                                        to={`/${seller.VirtualShop.shopUrl}`}\r\n                                      >\r\n                                        {seller.VirtualShop.shopName}\r\n                                      </Link>\r\n                                    </h5>\r\n                                  </Grid.Column>\r\n                                  <Grid.Column className=\"desc\" width={8}>\r\n                                    {seller.VirtualShop.maxTime ? (\r\n                                      <p style={{ color: \"green\" }}>\r\n                                        <Icon\r\n                                          color=\"green\"\r\n                                          size=\"large\"\r\n                                          name=\"hourglass three\"\r\n                                        />\r\n                                        {` ${seller.VirtualShop.minTime} - ${seller.VirtualShop.maxTime} mins`}\r\n                                      </p>\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                    {seller.VirtualShop.percentageDiscount ? (\r\n                                      <p style={{ color: \"red\" }}>\r\n                                        <Icon\r\n                                          color=\"red\"\r\n                                          size=\"large\"\r\n                                          name=\"fire\"\r\n                                        />\r\n                                        {`${seller.VirtualShop.percentageDiscount}% off when you spend £${seller.VirtualShop.discountAmount}`}\r\n                                      </p>\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                    {seller.VirtualShop.minOrder ? (\r\n                                      <p>\r\n                                        <Icon size=\"large\" name=\"money\" />\r\n                                        {` Minimum spend £${seller.VirtualShop.minOrder}`}\r\n                                      </p>\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n\r\n                                    {seller.VirtualShop.deliveryPrice ? (\r\n                                      <p>\r\n                                        <Icon size=\"large\" name=\"truck\" />\r\n                                        {` Delivery £${seller.VirtualShop.deliveryPrice}`}\r\n                                      </p>\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n\r\n                                    {nextOpeningTime ? (\r\n                                      <p>\r\n                                        <Icon\r\n                                          size=\"large\"\r\n                                          name=\"clock outline\"\r\n                                        />\r\n                                        {nextOpeningTime}\r\n                                      </p>\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                    {seller.VirtualShop.prepareTime ? (\r\n                                      <p>\r\n                                        <Icon size=\"large\" name=\"spinner\" />\r\n                                        {`Preparation ${seller.VirtualShop.prepareTime.hour} hour(s) ${seller.VirtualShop.prepareTime.min} min(s)`}\r\n                                      </p>\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                  </Grid.Column>\r\n                                </Grid.Row>\r\n                              </Grid>\r\n                            </Grid.Column>\r\n                          </Grid.Row>\r\n                        </Grid>\r\n                        <br />\r\n                        <br />\r\n                      </React.Fragment>\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <EmptySearch />\r\n                )\r\n              ) : (\r\n                <BigLoader />\r\n              )}\r\n            </React.Fragment>\r\n          </Grid.Column>\r\n          <Grid.Column width={3}></Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\nListing.propTypes = {\r\n  fetchProducts: PropTypes.array.isRequired,\r\n  productsClose: PropTypes.array.isRequired,\r\n  products: PropTypes.array.isRequired,\r\n  newPost: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  products: state.products.items,\r\n  productsClose: state.products.closeItems,\r\n  newProduct: state.products.item,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchProducts })(Listing);\r\n","import React, { Component } from \"react\";\r\nimport Listing from \"./widgets/Listing\";\r\nimport SideMenu from \"./widgets/SideMenu\";\r\nimport StoreCard from \"./widgets/storeCard\";\r\nimport ProductCard from \"./widgets/ItemCard\";\r\nimport clientService from \"../services/clientService\";\r\nimport NavBar from \"./NavBar\";\r\nimport Footer from \"./Footer\";\r\nimport Slider from \"react-slick\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport {\r\n  DEFAULT_STORE_BANNER,\r\n  DEFAULT_STORE_LOGO,\r\n  totalRating,\r\n  displayRating,\r\n  SERVER_URL,\r\n  ENDPOINT,\r\n  storeNextOpening,\r\n} from \"../utility/global\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  Grid,\r\n  Image,\r\n  Item,\r\n  Label,\r\n  Header,\r\n  Rating,\r\n  Select,\r\n  Input,\r\n  Card,\r\n  List,\r\n  Search,\r\n  Table,\r\n  Segment,\r\n  Loader,\r\n  Dimmer,\r\n  Container,\r\n  Message,\r\n} from \"semantic-ui-react\";\r\nconst imageUrl = `${ENDPOINT}uploads`;\r\nclass StoreListing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  state = {\r\n    stores: [],\r\n    closeStores: [],\r\n    categories: [],\r\n    autoCompleteResult: [],\r\n    meals: [],\r\n    searchVal: \"\",\r\n    loading: false,\r\n    loadingCategory: true,\r\n    loadingStore: true,\r\n    title: \"\",\r\n    closeTitle: \"\",\r\n  };\r\n  // componentDidMount() {\r\n  //   ClientService.products()\r\n  //     .then((response) => {\r\n  //       //const data = response.data;\r\n  //       console.log(response.data.data[0]);\r\n  //       this.setState({\r\n  //         sellers: response.data.data,\r\n  //       });\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err);\r\n  //     });\r\n  // }\r\n\r\n  componentDidMount = async () => {\r\n    const storeResponse = await clientService.storeListing();\r\n    const categoryResponse = await clientService.category();\r\n\r\n    this.setState({\r\n      stores: storeResponse.data.data,\r\n      title: storeResponse.data.desc,\r\n      categories: categoryResponse.data.data,\r\n      loadingCategory: false,\r\n      loadingStore: false,\r\n    });\r\n    const storeCloseResponse = await clientService.storeListingClose();\r\n    this.setState({\r\n      closeTitle: storeCloseResponse.data.desc,\r\n      closeStores: storeCloseResponse.data.data,\r\n    });\r\n  };\r\n  searchSelect = async (e, data) => {\r\n    const search = data.result.title;\r\n\r\n    const searchResponse = await clientService.listingSearch({ search });\r\n\r\n    this.setState({\r\n      closeTitle: searchResponse.data.desc,\r\n      stores: [],\r\n      closeStores: searchResponse.data.data,\r\n    });\r\n  };\r\n  handleSearchChange = async (e, data) => {\r\n    this.setState({\r\n      loading: false,\r\n    });\r\n    const autoCompleteResponse = await clientService.listingSearch({\r\n      search: data.value,\r\n    });\r\n    this.setState({\r\n      autoCompleteResult: autoCompleteResponse.data.data,\r\n      loading: false,\r\n    });\r\n  };\r\n  originEvent = async (originId) => {\r\n    const originResponse = await clientService.shopByOrigin({ originId });\r\n    const response = originResponse.data;\r\n\r\n    this.setState({\r\n      stores: response.data.open,\r\n      closeStores: response.data.close,\r\n      title: response.openDesc,\r\n      closeTitle: response.closeDesc,\r\n      meals: [],\r\n    });\r\n  };\r\n\r\n  categoryEvent = async (categoryId) => {\r\n    const categoryResponse = await clientService.productByCategory({\r\n      categoryId,\r\n    });\r\n    this.setState({\r\n      meals: categoryResponse.data.data,\r\n      title: categoryResponse.data.desc,\r\n      stores: [],\r\n      closeStores: [],\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      stores,\r\n      categories,\r\n      loading,\r\n      loadingCategory,\r\n      loadingStore,\r\n      closeStores,\r\n      title,\r\n      closeTitle,\r\n      meals,\r\n    } = this.state;\r\n    const styles = {\r\n      height: 150,\r\n      width: \"100%\",\r\n      objectFit: \"cover\",\r\n      objectPosition: \"center center\",\r\n    };\r\n    const logoStyles = {\r\n      height: 40,\r\n      objectFit: \"cover\",\r\n      objectPosition: \"center center\",\r\n    };\r\n    const categoryStyles = {\r\n      height: 80,\r\n      objectFit: \"cover\",\r\n      objectPosition: \"center center\",\r\n    };\r\n    let settings = {\r\n      infinite: false,\r\n      speed: 1000,\r\n      arrows: true,\r\n      slidesToShow: 8,\r\n      slidesToScroll: 8,\r\n\r\n      responsive: [\r\n        {\r\n          breakpoint: 960,\r\n          settings: {\r\n            slidesToShow: 3,\r\n            slidesToScroll: 1,\r\n          },\r\n        },\r\n        {\r\n          breakpoint: 480,\r\n          settings: {\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1,\r\n          },\r\n        },\r\n      ],\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Container>\r\n          <NavBar />\r\n          <Grid stackable padding style={{ paddingTop: 100 }}>\r\n            <Grid.Column width={4}>\r\n              {/* <Message floating icon>\r\n                <Message.Header> </Message.Header>\r\n              </Message> */}\r\n            </Grid.Column>\r\n            <Grid.Column width={12}>\r\n              <Search\r\n                showNoResults\r\n                placeholder=\"Search for a dish or food vendor\"\r\n                name=\"search\"\r\n                input={{ fluid: true }}\r\n                loading={loading}\r\n                onResultSelect={this.searchSelect}\r\n                results={this.state.autoCompleteResult.map((item) => {\r\n                  const { logo, shopName, Origin } = item;\r\n                  return {\r\n                    title: shopName,\r\n                    image: logo ? `${logo}` : DEFAULT_STORE_LOGO,\r\n                    description: Origin.name,\r\n                  };\r\n                })}\r\n                onSearchChange={this.handleSearchChange}\r\n              />\r\n            </Grid.Column>\r\n          </Grid>\r\n          <Grid stackable>\r\n            <Grid.Column width={4}>\r\n              <SideMenu\r\n                categoryEvent={this.categoryEvent}\r\n                originEvent={this.originEvent}\r\n              />\r\n            </Grid.Column>\r\n            <Grid.Column width={12}>\r\n              <Loader active={loadingCategory} inline=\"centered\" />\r\n              <Slider {...settings}>\r\n                {categories.map((item) => {\r\n                  const { id, imagePath, display } = item;\r\n                  return (\r\n                    <div className=\"out\" key={id}>\r\n                      <Card onClick={()=>this.categoryEvent(id)}>\r\n                        <img\r\n                          src={`${imageUrl}/${imagePath}`}\r\n                          style={categoryStyles}\r\n                        />\r\n\r\n                        <Card.Content>\r\n                          <Card.Meta>{display}</Card.Meta>\r\n                        </Card.Content>\r\n                      </Card>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </Slider>\r\n\r\n              <hr />\r\n\r\n              {loadingStore ? (\r\n                <Segment>\r\n                  <Dimmer active={loadingStore} inverted>\r\n                    <Loader size=\"large\">Loading</Loader>\r\n                  </Dimmer>\r\n\r\n                  <Image src=\"https://react.semantic-ui.com/images/wireframe/paragraph.png\" />\r\n                </Segment>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {stores.length > 0 ? <Message floating>{title}</Message> : \"\"}\r\n\r\n              <Grid stackable>\r\n                <Grid.Row style={{ margin: \"auto\" }} columns={3}>\r\n                  {stores.map((item) => {\r\n                    return (\r\n                      <StoreCard isOpen={true} key={item.id} item={item} />\r\n                    );\r\n                  })}\r\n                </Grid.Row>\r\n              </Grid>\r\n              {closeStores.length > 0 ? (\r\n                <Message floating>{closeTitle}</Message>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <Grid stackable>\r\n                <Grid.Row style={{ margin: \"auto\" }} columns={3}>\r\n                  {closeStores.map((item) => {\r\n                    return (\r\n                      <StoreCard isOpen={false} key={item.id} item={item} />\r\n                    );\r\n                  })}\r\n                </Grid.Row>\r\n              </Grid>\r\n              {meals.length > 0 ? <Message floating>{title}</Message> : \"\"}\r\n              <Grid stackable>\r\n                <Grid.Row style={{ margin: \"auto\" }} columns={3}>\r\n                  {meals.map((item) => {\r\n                    return <ProductCard isForMenu={false} key={item.id} product={item} />;\r\n                  })}\r\n                </Grid.Row>\r\n              </Grid>\r\n            </Grid.Column>\r\n            <Grid.Column width={1}></Grid.Column>\r\n          </Grid>\r\n        </Container>\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StoreListing;\r\n","import React, { Component } from \"react\";\r\nimport Nav from \"./common/nav\";\r\nimport SideMenu from \"./common/sideMenu\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  Icon,\r\n  Image,\r\n  Grid,\r\n  Message,\r\n  Loader,\r\n} from \"semantic-ui-react\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport AfterNav from \"./common/afterNav\";\r\nimport clientService from \"../services/clientService\";\r\nimport {\r\n  SHOP_SETTING_URL,\r\n  MEAL_LIST,\r\n  USER_ORDER_URL,\r\n  SHOP_CREATE,\r\n  MY_ACCOUNT,\r\n  AVAILABILITY_URL,\r\n  SHOP_REVIEW,\r\n  POST_CODES_URL,\r\n  toastOptions,\r\n} from \"../utility/global\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchUser } from \"../actions/productActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //window.location.reload(false)\r\n  }\r\n\r\n  state = {\r\n    role: \"\",\r\n    shopId: \"\",\r\n    hasEmailVerified: false,\r\n    showTemp: false,\r\n    isSeller: false,\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.props.fetchUser();\r\n    //window.location.reload(false);\r\n  };\r\n  componentWillReceiveProps = async (nextProps) => {\r\n    if (nextProps) {\r\n      const user = nextProps.user;\r\n\r\n      if (user.role === \"Seller\") {\r\n        const response = await clientService.findShopById(user.shopId);\r\n        const shop = response.data.data;\r\n\r\n        this.setState({\r\n          hasEmailVerified: shop.hasEmailVerified,\r\n          shopId: shop.id,\r\n          isSeller: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        role: user.role,\r\n      });\r\n    }\r\n  };\r\n  \r\n  render() {\r\n    const { isSeller, showTemp, hasEmailVerified } = this.state;\r\n    let mailTempt;\r\n    setTimeout(()=> {\r\n      this.setState({\r\n        showTemp:true\r\n      })\r\n    }, 5000);\r\n\r\n    return (\r\n      <Container fluid={true}>\r\n        <Nav />\r\n        <AfterNav form={\"Dashboard\"} />\r\n        <hr></hr>\r\n\r\n        <Row style={{ paddingTop: \"10px\", height: 600 }}>\r\n          <Col lg=\"2\" sm=\"12\" xs=\"12\">\r\n            <SideMenu />\r\n          </Col>\r\n          <Col lg=\"10\">\r\n            <Grid padded stackable>\r\n              {showTemp? hasEmailVerified ? (\r\n                \"\"\r\n              ) : (\r\n                <Grid.Row>\r\n                  <Grid.Column width={16}>\r\n                    \r\n                    <Message warning icon>\r\n                      <Icon name=\"warning circle\" />\r\n                      <Message.Content>\r\n                        <Message.Header>\r\n                          Verify Your Email Address\r\n                        </Message.Header>\r\n                        Before proceeding, please check your email address for a\r\n                        verification link. If you did not receive the email.\r\n                      </Message.Content>\r\n                    </Message>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              ):\"\"}\r\n\r\n              <Grid.Row columns={4}>\r\n                <Grid.Column>\r\n                  <Link to={USER_ORDER_URL}>\r\n                    <Card color=\"blue\" fluid>\r\n                      <Card.Content>\r\n                        <Image\r\n                          floated=\"right\"\r\n                          size=\"tiny\"\r\n                          src=\"/images/order.png\"\r\n                        />\r\n                        <Card.Header>Orders</Card.Header>\r\n                        <Card.Meta>Manage and print orders</Card.Meta>\r\n                      </Card.Content>\r\n                    </Card>\r\n                  </Link>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                  <Link to={MEAL_LIST}>\r\n                    <Card color=\"green\" fluid>\r\n                      <Card.Content>\r\n                        <Image\r\n                          floated=\"right\"\r\n                          size=\"tiny\"\r\n                          src=\"/images/meal.png\"\r\n                        />\r\n                        <Card.Header>Food</Card.Header>\r\n                        <Card.Meta>Add, update and remove food</Card.Meta>\r\n                      </Card.Content>\r\n                    </Card>\r\n                  </Link>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                  <Link to={SHOP_SETTING_URL}>\r\n                    <Card color=\"red\" fluid>\r\n                      <Card.Content>\r\n                        <Image\r\n                          floated=\"right\"\r\n                          size=\"tiny\"\r\n                          src=\"/images/setup.jpg\"\r\n                        />\r\n                        <Card.Header>Settings</Card.Header>\r\n                        <Card.Meta>\r\n                          Setup delivery time and cost, discount and minimum\r\n                          order{\" \"}\r\n                        </Card.Meta>\r\n                      </Card.Content>\r\n                    </Card>\r\n                  </Link>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                  <Link to={SHOP_CREATE}>\r\n                    <Card color=\"yellow\" fluid>\r\n                      <Card.Content>\r\n                        <Image\r\n                          floated=\"right\"\r\n                          size=\"tiny\"\r\n                          src=\"/images/store.png\"\r\n                        />\r\n                        <Card.Header>Store</Card.Header>\r\n                        <Card.Meta>Manage your store information</Card.Meta>\r\n                      </Card.Content>\r\n                    </Card>\r\n                  </Link>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row columns={4}>\r\n                <Grid.Column>\r\n                  <Link to={AVAILABILITY_URL}>\r\n                    <Card color=\"blue\" fluid>\r\n                      <Card.Content>\r\n                        <Image\r\n                          floated=\"right\"\r\n                          size=\"tiny\"\r\n                          src=\"/images/time.png\"\r\n                        />\r\n                        <Card.Header>Availabilty</Card.Header>\r\n                        <Card.Meta>Manage days and time of opening</Card.Meta>\r\n                      </Card.Content>\r\n                    </Card>\r\n                  </Link>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                  <Link to={MY_ACCOUNT}>\r\n                    <Card color=\"green\" fluid>\r\n                      <Card.Content>\r\n                        <Image\r\n                          floated=\"right\"\r\n                          size=\"tiny\"\r\n                          src=\"/images/user_info.png\"\r\n                        />\r\n                        <Card.Header>Account Info</Card.Header>\r\n                        <Card.Meta>Manage your personal account</Card.Meta>\r\n                      </Card.Content>\r\n                    </Card>\r\n                  </Link>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                  <Link to={SHOP_REVIEW}>\r\n                    <Card color=\"red\" fluid>\r\n                      <Card.Content>\r\n                        <Image\r\n                          floated=\"right\"\r\n                          size=\"tiny\"\r\n                          src=\"/images/ratings.png\"\r\n                        />\r\n                        <Card.Header>Reviews</Card.Header>\r\n                        <Card.Meta>View your shop reviews</Card.Meta>\r\n                      </Card.Content>\r\n                    </Card>\r\n                  </Link>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                  <Link to={POST_CODES_URL}>\r\n                    <Card color=\"yellow\" fluid>\r\n                      <Card.Content>\r\n                        <Image\r\n                          floated=\"right\"\r\n                          size=\"tiny\"\r\n                          src=\"/images/location.png\"\r\n                        />\r\n                        <Card.Header>Post Codes</Card.Header>\r\n                        <Card.Meta>Target post codes for delivery</Card.Meta>\r\n                      </Card.Content>\r\n                    </Card>\r\n                  </Link>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nDashboard.propTypes = {\r\n  fetchUser: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  user: state.products.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchUser })(Dashboard);\r\n","import React, { Component } from \"react\";\r\nimport Nav from \"./common/nav\";\r\nimport SideMenu from \"./common/sideMenu\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  Icon,\r\n  Image,\r\n  Grid,\r\n  Message,\r\n  Loader,\r\n} from \"semantic-ui-react\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport AfterNav from \"./common/afterNav\";\r\nimport clientService from \"../services/clientService\";\r\nimport {\r\n  SHOP_SETTING_URL,\r\n  MEAL_LIST,\r\n  USER_ORDER_URL,\r\n  SHOP_CREATE,\r\n  MY_ACCOUNT,\r\n  AVAILABILITY_URL,\r\n  SHOP_REVIEW,\r\n  POST_CODES_URL,\r\n  toastOptions,\r\n} from \"../utility/global\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchUser } from \"../actions/productActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass DashboardUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    this.props.fetchUser();\r\n  };\r\n  componentWillReceiveProps = async (nextProps) => {\r\n    \r\n  };\r\n\r\n  render() {\r\n   \r\n    return (\r\n      <Container fluid={true}>\r\n        <Nav />\r\n        <AfterNav form={\"Dashboard\"} />\r\n        <hr></hr>\r\n\r\n        <Row style={{ paddingTop: \"10px\", height: 600 }}>\r\n          <Col lg=\"2\" sm=\"12\" xs=\"12\">\r\n            <SideMenu />\r\n          </Col>\r\n          <Col lg=\"10\">\r\n            <Grid padded stackable>\r\n              <Grid.Row columns={2}>\r\n                <Grid.Column>\r\n                  <Link to={USER_ORDER_URL}>\r\n                    <Card color=\"blue\" fluid>\r\n                      <Card.Content>\r\n                        <Image\r\n                          floated=\"right\"\r\n                          size=\"tiny\"\r\n                          src=\"/images/order.png\"\r\n                        />\r\n                        <Card.Header>Orders</Card.Header>\r\n                        <Card.Meta>Manage and print orders</Card.Meta>\r\n                      </Card.Content>\r\n                    </Card>\r\n                  </Link>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                  <Link to={MY_ACCOUNT}>\r\n                    <Card color=\"green\" fluid>\r\n                      <Card.Content>\r\n                        <Image\r\n                          floated=\"right\"\r\n                          size=\"tiny\"\r\n                          src=\"/images/user_info.png\"\r\n                        />\r\n                        <Card.Header>Account Info</Card.Header>\r\n                        <Card.Meta>Manage your personal account</Card.Meta>\r\n                      </Card.Content>\r\n                    </Card>\r\n                  </Link>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nDashboardUser.propTypes = {\r\n  fetchUser: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  user: state.products.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchUser })(DashboardUser);\r\n","import React, { Component } from \"react\";\r\nimport Nav from \"./common/nav\";\r\nimport SideMenu from \"./common/sideMenu\";\r\nimport ClientService from \"../services/clientService\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport clientService from \"../services/clientService\";\r\nimport {\r\n  MISSING_USER_MSG,\r\n  DEFAULT_BANNER,\r\n  DEFAULT_LOGO,\r\n  toastOptions,\r\n} from \"../utility/global\";\r\nimport {\r\n  Button,\r\n  Dropdown,\r\n  Form,\r\n  Image,\r\n  Message,\r\n  Input,\r\n  Icon,\r\n  Popup,\r\n  Label,\r\n  Placeholder,\r\n} from \"semantic-ui-react\";\r\nimport AfterNav from \"./common/afterNav\";\r\nimport { toast } from \"react-toastify\";\r\nimport { fetchUser } from \"../actions/productActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nclass ShopForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  state = {\r\n    showAlert: false,\r\n    shopName: \"\",\r\n    about: \"\",\r\n    initialShopName: \"\",\r\n    initialShopUrl: \"\",\r\n    shopUrl: \"\",\r\n    hasSave: true,\r\n    message: \"\",\r\n    selectedCity: \"\",\r\n    city: [],\r\n    hasShop: false,\r\n    selectedLogo: null,\r\n    selectedBanner: null,\r\n    logoPreviewUrl: null,\r\n    bannerPreviewUrl: null,\r\n    firstAddress: \"\",\r\n    secondAddress: \"\",\r\n    postCode: \"\",\r\n    cityText: \"City\",\r\n    disabled: false,\r\n    isDuplicateUrl: false,\r\n    isDuplicateName: false,\r\n    loading: false,\r\n    shopId: \"\",\r\n    selectedOrigin: \"\",\r\n    origin: [],\r\n    originText: \"\",\r\n    loadingOrigin: true,\r\n    loadingCity: true,\r\n    hasLoaded: false,\r\n  };\r\n  componentWillReceiveProps = async (nextProps) => {\r\n    if (nextProps) {\r\n      const user = nextProps.user;\r\n      if (user) {\r\n        ClientService.findShopById(user.shopId)\r\n          .then((response) => {\r\n            const data = response.data.data;\r\n            const {\r\n              shopName,\r\n              shopUrl,\r\n              logo,\r\n              shopBanners,\r\n              cityId,\r\n              firstAddress,\r\n              secondAddress,\r\n              postCode,\r\n              about,\r\n              City,\r\n              Origin,\r\n              banner,\r\n              id,\r\n            } = data;\r\n\r\n            this.setState({\r\n              hasLoaded: true,\r\n              shopName,\r\n              shopId: id,\r\n              bannerPreviewUrl: banner\r\n                ? `${banner}`\r\n                : DEFAULT_BANNER,\r\n              logoPreviewUrl: logo ? `${logo}` : DEFAULT_LOGO,\r\n              hasShop: data,\r\n              firstAddress,\r\n              shopUrl,\r\n              about,\r\n              selectedOrigin: Origin ? Origin.id : \"\",\r\n              initialShopName: shopName,\r\n              initialShopUrl: shopUrl,\r\n              secondAddress: secondAddress == null ? \"\" : secondAddress,\r\n              postCode,\r\n              cityText: City ? City.name : \"City\",\r\n              originText: Origin ? Origin.name : \"Origin\",\r\n              selectedCity: cityId,\r\n            });\r\n          })\r\n          .catch((err) => {\r\n            //console.log(err);\r\n          });\r\n      }\r\n    }\r\n  };\r\n  fileChangedHandler = (event) => {\r\n    try {\r\n      this.setState({\r\n        selectedLogo: event.target.files[0],\r\n      });\r\n\r\n      let reader = new FileReader();\r\n\r\n      reader.onloadend = () => {\r\n        this.setState({\r\n          logoPreviewUrl: reader.result,\r\n        });\r\n      };\r\n\r\n      reader.readAsDataURL(event.target.files[0]);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  fileChangedHandler2 = (event) => {\r\n    this.setState({\r\n      selectedBanner: event.target.files[0],\r\n    });\r\n\r\n    let reader = new FileReader();\r\n\r\n    reader.onloadend = () => {\r\n      this.setState({\r\n        bannerPreviewUrl: reader.result,\r\n      });\r\n    };\r\n\r\n    reader.readAsDataURL(event.target.files[0]);\r\n  };\r\n  componentDidMount = async () => {\r\n    this.props.fetchUser();\r\n    const originResponse = await ClientService.origins();\r\n    this.setState({\r\n      loadingOrigin: false,\r\n    });\r\n    let origins = originResponse.data.data.map((origin) => {\r\n      return {\r\n        key: origin.id,\r\n        value: origin.id,\r\n        text: origin.name,\r\n      };\r\n    });\r\n    this.setState({\r\n      origin: [{ key: \"\", text: \"--Select food origin--\" }].concat(origins),\r\n    });\r\n\r\n    const cityResponse = await ClientService.cities();\r\n    this.setState({\r\n      loadingCity: false,\r\n    });\r\n    let cities = cityResponse.data.data.map((city) => {\r\n      return {\r\n        key: city.id,\r\n        value: city.id,\r\n        text: city.name,\r\n      };\r\n    });\r\n    this.setState({\r\n      city: [{ value: \"\", text: \"--Select city--\" }].concat(cities),\r\n    });\r\n  };\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  onChangeDropdown = (e, data) => {\r\n    this.setState({\r\n      [data.name]: data.value,\r\n    });\r\n  };\r\n\r\n  onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const {\r\n      selectedLogo,\r\n      selectedBanner,\r\n      shopName,\r\n      shopUrl,\r\n      secondAddress,\r\n      firstAddress,\r\n      postCode,\r\n      selectedCity,\r\n      about,\r\n      loading,\r\n      disabled,\r\n      shopId,\r\n      selectedOrigin,\r\n    } = this.state;\r\n    let formData = new FormData();\r\n    formData.append(\"firstAddress\", firstAddress);\r\n    formData.append(\"secondAddress\", secondAddress);\r\n    formData.append(\"cityId\", selectedCity);\r\n    formData.append(\"postCode\", postCode);\r\n    formData.append(\"logo\", selectedLogo);\r\n    formData.append(\"banner\", selectedBanner);\r\n    formData.append(\"shopName\", shopName);\r\n    formData.append(\"shopUrl\", shopUrl);\r\n    formData.append(\"originId\", selectedOrigin);\r\n    formData.append(\"shopId\", shopId);\r\n    formData.append(\"about\", about);\r\n\r\n    this.setState({\r\n      loading: true,\r\n      disabled: true,\r\n    });\r\n    try {\r\n      const updateResponse = await clientService.updateShop(formData);\r\n\r\n      toast.success(updateResponse.data.message, toastOptions(false));\r\n    } catch (err) {\r\n      toast.success(err.response.data.message, toastOptions(true));\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n        disabled: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  onBlur = (e) => {\r\n    const { shopName, initialShopName, initialShopUrl, shopUrl } = this.state;\r\n    if (e.target.name == \"shopName\" && shopName !== initialShopName) {\r\n      clientService.findShopByName({ shopName }).then((response) => {\r\n        if (response.data) {\r\n          this.setState({\r\n            disabled: true,\r\n            isDuplicateName: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            disabled: false,\r\n            isDuplicateName: false,\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    if (e.target.name == \"shopUrl\" && shopUrl !== initialShopUrl) {\r\n      clientService.findShopByUrl({ shopUrl }).then((response) => {\r\n        if (response.data) {\r\n          this.setState({\r\n            disabled: true,\r\n            isDuplicateUrl: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            disabled: false,\r\n            isDuplicateUrl: false,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const {\r\n      shopName,\r\n      shopUrl,\r\n      logoPreviewUrl,\r\n      hasShop,\r\n      bannerPreviewUrl,\r\n      firstAddress,\r\n      secondAddress,\r\n      postCode,\r\n      selectedCity,\r\n      cityText,\r\n      city,\r\n      disabled,\r\n      loading,\r\n      isDuplicateName,\r\n      isDuplicateUrl,\r\n      about,\r\n      selectedOrigin,\r\n      origin,\r\n      originText,\r\n      loadingOrigin,\r\n      loadingCity,\r\n      hasLoaded,\r\n    } = this.state;\r\n    const nameAlert = isDuplicateName ? (\r\n      <Message color=\"yellow\">\r\n        The shop name already exist! Please choose a different one.\r\n      </Message>\r\n    ) : (\r\n      \"\"\r\n    );\r\n    const urlAlert = isDuplicateUrl ? (\r\n      <Message color=\"yellow\">\r\n        The shop url already exist! Please choose a different one.\r\n      </Message>\r\n    ) : (\r\n      \"\"\r\n    );\r\n    let $logoPreview = (\r\n      <div className=\"previewText image-container\">\r\n        Please select an Image for Preview\r\n      </div>\r\n    );\r\n    if (this.state.logoPreviewUrl) {\r\n      $logoPreview = (\r\n        <div className=\"image-container\">\r\n          <img src={this.state.imagePreviewUrl} alt=\"icon\" width=\"200\" />{\" \"}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Container fluid={true}>\r\n        <Nav />\r\n        <AfterNav form={hasShop ? \"Update Store\" : \"Create Store\"} />\r\n        <hr></hr>\r\n        <Row style={{ paddingTop: \"10px\" }}>\r\n          <Col lg=\"2\">\r\n            <SideMenu />\r\n          </Col>\r\n          <Col lg=\"1\"></Col>\r\n          <Col className=\"dashboard-panel\" lg=\"6\">\r\n            <Message attached header=\"My store\" />\r\n            <Form\r\n              loading={!hasLoaded}\r\n              className=\"attached fluid segment\"\r\n              style={{\r\n                width: \"100%\",\r\n                margin: \"auto\",\r\n                height: \"auto\",\r\n                padding: 13,\r\n              }}\r\n              onSubmit={this.onSubmit}\r\n            >\r\n              <p class=\"h4 mb-4\">Store Details</p>\r\n\r\n              {nameAlert}\r\n              <Form.Field required>\r\n                <label>Store name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  required\r\n                  value={shopName}\r\n                  onBlur={this.onBlur}\r\n                  name=\"shopName\"\r\n                  onChange={this.onChange}\r\n                  placeholder=\"Store name\"\r\n                />\r\n              </Form.Field>\r\n              {urlAlert}\r\n              <Form.Field>\r\n                <Input\r\n                  name=\"shopUrl\"\r\n                  value={shopUrl}\r\n                  onBlur={this.onBlur}\r\n                  onChange={this.onChange}\r\n                  label=\"https://foodengo.co.uk/\"\r\n                  placeholder=\"your-store-url\"\r\n                />\r\n              </Form.Field>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Logo</label>\r\n                  <input type=\"file\" onChange={this.fileChangedHandler} />\r\n                </Form.Field>\r\n\r\n                <Image\r\n                  style={{ paddingTop: 5 }}\r\n                  src={logoPreviewUrl || DEFAULT_LOGO}\r\n                  size=\"small\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Field>\r\n                <label>Banner (728×90)</label>\r\n                <input type=\"file\" onChange={this.fileChangedHandler2} />\r\n              </Form.Field>\r\n              <br />\r\n              <Image src={bannerPreviewUrl || DEFAULT_BANNER} />\r\n              <br />\r\n              <hr></hr>\r\n              <Message floating content=\"Business Address\" />\r\n              <Form.Field required>\r\n                <label>Address 1</label>\r\n                <input\r\n                  type=\"text\"\r\n                  required\r\n                  value={firstAddress}\r\n                  name=\"firstAddress\"\r\n                  onChange={this.onChange}\r\n                  placeholder=\"Address 1\"\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Address 2</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={secondAddress}\r\n                  name=\"secondAddress\"\r\n                  onChange={this.onChange}\r\n                  placeholder=\"Address 2\"\r\n                />\r\n              </Form.Field>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field required>\r\n                  <label>Post code</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    required\r\n                    value={postCode}\r\n                    name=\"postCode\"\r\n                    onChange={this.onChange}\r\n                    placeholder=\"Post code\"\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field required>\r\n                  <label>City</label>\r\n                  <Dropdown\r\n                    required\r\n                    fluid\r\n                    selection\r\n                    search\r\n                    defaultValue={selectedCity}\r\n                    name=\"selectedCity\"\r\n                    label=\"City\"\r\n                    placeholder={cityText}\r\n                    options={city}\r\n                    onChange={this.onChangeDropdown}\r\n                    loading={loadingCity}\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Message floating content=\"Food Origin\" />\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field required>\r\n                  <label>Food Origin</label>\r\n                  <Dropdown\r\n                    required\r\n                    fluid\r\n                    selection\r\n                    search\r\n                    defaultValue={selectedOrigin}\r\n                    name=\"selectedOrigin\"\r\n                    label=\"Food Origin\"\r\n                    placeholder={originText}\r\n                    options={origin}\r\n                    onChange={this.onChangeDropdown}\r\n                    loading={loadingOrigin}\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Field>\r\n                <Popup\r\n                  trigger={<label>About your store (recommended)</label>}\r\n                  content=\"Enter your cooking qualifications, years of cooking experience, etc.\"\r\n                  position=\"top left\"\r\n                />\r\n\r\n                <Form.TextArea\r\n                  required\r\n                  name=\"about\"\r\n                  value={about}\r\n                  maxlength=\"1000\"\r\n                  onChange={this.onChange}\r\n                  placeholder=\"About your store\"\r\n                />\r\n              </Form.Field>\r\n\r\n              <Button\r\n                color=\"red\"\r\n                loading={loading}\r\n                disabled={disabled}\r\n                type=\"submit\"\r\n              >\r\n                Save store <Icon name=\"save\" />\r\n              </Button>\r\n            </Form>\r\n            <br />\r\n            <br />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nShopForm.propTypes = {\r\n  fetchUser: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  user: state.products.user,\r\n});\r\nexport default connect(mapStateToProps, { fetchUser })(ShopForm);\r\n","import React, { Component } from \"react\";\r\nimport SideMenu from \"./common/sideMenu\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport Nav from \"./common/nav\";\r\nimport { Button, Checkbox, Icon, Table } from \"semantic-ui-react\";\r\nimport AfterNav from \"./common/afterNav\";\r\nimport { MISSING_USER_MSG, ERROR_MSG, MEAL_CREATE } from \"../utility/global\";\r\nimport clientService from \"../services/clientService\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchUser } from \"../actions/productActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass ShopForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      products: [],\r\n      hasData: false,\r\n    };\r\n  }\r\n  componentWillReceiveProps = async (nextProps) => {\r\n    if (nextProps) {\r\n      const shopId = nextProps.user.shopId;\r\n      if (shopId) {\r\n        clientService\r\n          .productsByShopId(shopId)\r\n          .then((response) => {\r\n            //const data = response.data;\r\n            const data = response.data.data;\r\n\r\n            this.setState({\r\n              products: data,\r\n              hasData: data.length > 0 ? true : false,\r\n            });\r\n          })\r\n          .catch((err) => {\r\n            //console.log(err);\r\n          });\r\n      }\r\n    }\r\n  };\r\n  componentDidMount = async () => {};\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  render() {\r\n    return (\r\n      <Container fluid={true}>\r\n        <Nav />\r\n        <AfterNav form={\"Food List\"} />\r\n        <hr></hr>\r\n        <Row className=\"dash-layout\">\r\n          <Col lg=\"2\">\r\n            <SideMenu />\r\n          </Col>\r\n\r\n          <Col lg=\"1\"></Col>\r\n\r\n          <Col className=\"dashboard-panel\" lg=\"6\">\r\n            {this.state.hasData ? (\r\n              <Table celled compact>\r\n                <Table.Header fullWidth>\r\n                  <Table.Row>\r\n                    <Table.HeaderCell>Title</Table.HeaderCell>\r\n                    <Table.HeaderCell>Category</Table.HeaderCell>\r\n                    <Table.HeaderCell>Price</Table.HeaderCell>\r\n                    <Table.HeaderCell>Discount Price</Table.HeaderCell>\r\n                    <Table.HeaderCell></Table.HeaderCell>\r\n                  </Table.Row>\r\n                </Table.Header>\r\n\r\n                <Table.Body>\r\n                  {this.state.products.map((product) => {\r\n                    // const rating = { id: 2, value: seller.rating}\r\n                    return (\r\n                      <Table.Row key={product.id}>\r\n                        <Table.Cell>{product.name}</Table.Cell>\r\n                        <Table.Cell>\r\n                          {product.Category ? product.Category.name : \"\"}\r\n                        </Table.Cell>\r\n                        <Table.Cell>\r\n                          £{parseInt(product.price).toFixed(2)}\r\n                        </Table.Cell>\r\n                        <Table.Cell>\r\n                          £{parseInt(product.discountPrice).toFixed(2)}\r\n                        </Table.Cell>\r\n                        <Table.Cell title=\"Click to edit meal\">\r\n                          <Link to={`/meal/update/${product.id}`}>\r\n                            <Icon color=\"blue\" name=\"edit\" /> Edit\r\n                          </Link>\r\n                        </Table.Cell>\r\n                      </Table.Row>\r\n                    );\r\n                  })}\r\n                </Table.Body>\r\n\r\n                <Table.Footer fullWidth>\r\n                  <Table.Row>\r\n                    <Table.HeaderCell />\r\n                    <Table.HeaderCell colSpan=\"4\">\r\n                      <Link to={MEAL_CREATE}>\r\n                        <Button\r\n                          floated=\"right\"\r\n                          icon\r\n                          labelPosition=\"left\"\r\n                          color=\"red\"\r\n                          size=\"small\"\r\n                        >\r\n                          <Icon name=\"add circle\" /> Add food\r\n                        </Button>\r\n                      </Link>\r\n                    </Table.HeaderCell>\r\n                  </Table.Row>\r\n                </Table.Footer>\r\n              </Table>\r\n            ) : (\r\n              <Link to={MEAL_CREATE}>\r\n                <Button type=\"submit\" color=\"red\" fluid size=\"large\">\r\n                  Create food <Icon name=\"save\" />\r\n                </Button>\r\n              </Link>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nShopForm.propTypes = {\r\n  fetchUser: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  user: state.products.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchUser })(ShopForm);\r\n","import React, { Component } from \"react\";\r\nimport ErrorPage from \"../../components/errorPage\";\r\nimport NavBar from \"../../components/NavBar\";\r\nimport { Grid, Image, Message, Container, Button } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LISTING_URL } from \"../../utility/global\";\r\n\r\nexport default class SaveSuccess extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {};\r\n  componentDidMount = async () => {};\r\n\r\n  render() {\r\n    const {\r\n      message,\r\n      btnText1,\r\n      btnText2,\r\n      url1,\r\n      url2,\r\n      changePage,\r\n    } = this.props.data;\r\n    return (\r\n      <React.Fragment>\r\n        <Container>\r\n          <Grid style={{ marginTop: 30 }} columns=\"equal\">\r\n            <Grid.Column></Grid.Column>\r\n            <Grid.Column width={8}>\r\n              <Image\r\n                style={{\r\n                  display: \"block\",\r\n                  marginLeft: \"auto\",\r\n                  marginRight: \"auto\",\r\n                  width: \"20%\",\r\n                }}\r\n                src=\"/images/success.jpg\"\r\n              />\r\n            </Grid.Column>\r\n            <Grid.Column></Grid.Column>\r\n          </Grid>\r\n          <Grid columns=\"equal\">\r\n            <Grid.Column></Grid.Column>\r\n            <Grid.Column width={12}>\r\n              <Message info style={{ textAlign: \"center\" }}>\r\n                <Message.Header>{message}</Message.Header>\r\n                <hr />\r\n\r\n                <a href={url1}>\r\n                  <Button color=\"green\">{btnText1}</Button>\r\n                </a>\r\n\r\n                <Link to={url2}>\r\n                  <Button color=\"green\">{btnText2}</Button>\r\n                </Link>\r\n              </Message>\r\n            </Grid.Column>\r\n            <Grid.Column></Grid.Column>\r\n          </Grid>\r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Fragment } from \"react\";\r\n\r\nimport { AnchorButton, Intent, ProgressBar } from \"@blueprintjs/core\";\r\nimport AfterNav from \"./common/afterNav\";\r\n\r\nimport _ from \"lodash\";\r\n\r\nimport { remove } from \"react-icons-kit/fa/remove\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Nav from \"./common/nav\";\r\nimport SideMenu from \"./common/sideMenu\";\r\nimport SaveSuccess from \"./common/saveSuccess\";\r\nimport ClientService from \"../services/clientService\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport clientService from \"../services/clientService\";\r\nimport {\r\n  MISSING_USER_MSG,\r\n  IMG_MAX_SIZE,\r\n  ERROR_MSG,\r\n  toastOptions,\r\n  MEAL_CREATE,\r\n  MEAL_LIST,\r\n  SAVE_SUCCESS,\r\n  titleCase,\r\n} from \"../utility/global\";\r\nimport {\r\n  Button,\r\n  Message,\r\n  Form,\r\n  Icon,\r\n  Segment,\r\n  Table,\r\n  Input,\r\n  Grid,\r\n} from \"semantic-ui-react\";\r\nimport { fetchUser } from \"../actions/productActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nlet count = 0;\r\n\r\nclass ProductForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.buttonRef = React.createRef();\r\n    this.state = {\r\n      loadedFiles: [],\r\n      name: \"\",\r\n      desc: \"\",\r\n      weight: \"\",\r\n      price: \"\",\r\n      ingredients: [],\r\n      ingredient: \"\",\r\n      selectedPhoto: null,\r\n      discountPrice: \"\",\r\n      unitType: [],\r\n      category: [],\r\n      selectedUnitType: \"\",\r\n      selectedCategory: \"\",\r\n      showAlert: false,\r\n      hasSave: true,\r\n      message: \"\",\r\n      hasError: false,\r\n      hasImageLimit: false,\r\n      redirect: false,\r\n      photoPreviewUrl: null,\r\n      isLockButton: false,\r\n      isSubmitLoading: false,\r\n      shopId: \"\",\r\n    };\r\n  }\r\n  componentDidMount = async () => {\r\n    this.props.fetchUser();\r\n  };\r\n  componentWillReceiveProps = async (nextProps) => {\r\n    if (nextProps) {\r\n      const user = nextProps.user;\r\n     \r\n      if (user) {\r\n        this.setState({\r\n          shopId: user.shopId,\r\n        });\r\n        const unitResponse = await ClientService.unitTypes();\r\n        let unitTypes = unitResponse.data.data.map((unitType) => {\r\n          return {\r\n            key: unitType.id,\r\n            value: unitType.id,\r\n            text: unitType.name,\r\n          };\r\n        });\r\n        this.setState({\r\n          unitType: [{ key: \"\", text: \"--Select unit type--\" }].concat(\r\n            unitTypes\r\n          ),\r\n        });\r\n\r\n        const categoryResponse = await ClientService.category();\r\n\r\n        let categories = categoryResponse.data.data.map((category) => {\r\n          return {\r\n            key: category.id,\r\n            value: category.id,\r\n            text: category.name,\r\n          };\r\n        });\r\n        this.setState({\r\n          category: [{ value: \"\", text: \"--Select category--\" }].concat(\r\n            categories\r\n          ),\r\n        });\r\n      }\r\n    }\r\n  };\r\n  fileChangedHandlerForPhoto = (event) => {\r\n    try {\r\n      this.setState({\r\n        selectedPhoto: event.target.files[0],\r\n      });\r\n\r\n      let reader = new FileReader();\r\n\r\n      reader.onloadend = () => {\r\n        this.setState({\r\n          photoPreviewUrl: reader.result,\r\n        });\r\n      };\r\n\r\n      reader.readAsDataURL(event.target.files[0]);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  onChangeDropdown = (e, data) => {\r\n    this.setState({\r\n      [data.name]: data.value,\r\n    });\r\n  };\r\n\r\n  onUpload = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const {\r\n      discountPrice,\r\n      selectedUnitType,\r\n      selectedCategory,\r\n      selectedPhoto,\r\n      weight,\r\n      price,\r\n      ingredients,\r\n      name,\r\n      desc,\r\n      shopId,\r\n    } = this.state;\r\n\r\n    if (selectedPhoto) {\r\n      if (selectedCategory !== \"\" ) {\r\n        //Lock submit button and show loading in the button\r\n        this.setState({\r\n          isLockButton: true,\r\n          isSubmitLoading: true,\r\n        });\r\n\r\n        let formData = new FormData();\r\n        if (discountPrice) formData.append(\"discountPrice\", discountPrice);\r\n        formData.append(\"price\", price);\r\n        formData.append(\"categoryId\", selectedCategory);\r\n        if (selectedUnitType) formData.append(\"unitId\", selectedUnitType);\r\n        if (weight) formData.append(\"weight\", weight);\r\n        formData.append(\"photo\", selectedPhoto);\r\n        formData.append(\"ingredients\", JSON.stringify(ingredients));\r\n        formData.append(\"name\", name);\r\n        formData.append(\"desc\", desc);\r\n        formData.append(\"shopId\", shopId);\r\n\r\n        try {\r\n          const response = await clientService.createProduct(formData);\r\n          if (!response.data.error) {\r\n            toast.success(response.data.message, toastOptions());\r\n            this.setState({\r\n              redirect: true,\r\n            });\r\n          } else toast.success(response.data.message, toastOptions(true));\r\n        } catch (err) {\r\n          toast.success(ERROR_MSG, toastOptions(true));\r\n        }\r\n        this.setState({\r\n          isSubmitLoading: false,\r\n          isLockButton: false,\r\n        });\r\n      } else {\r\n        toast.success(\r\n          \"Please required options must be selected such as category \",\r\n          toastOptions(true)\r\n        );\r\n      }\r\n    } else {\r\n      toast.success(\"At least one food photo is required.\", toastOptions(true));\r\n    }\r\n    //Release button and hide loading\r\n  };\r\n  removeIngredient = (id) => {\r\n    this.setState({\r\n      ingredients: [...this.state.ingredients.filter((item) => item.id !== id)],\r\n    });\r\n  };\r\n  addIngredient = () => {\r\n    count++;\r\n    const ingredient = titleCase(this.state.ingredient);\r\n    const ingredients = this.state.ingredients;\r\n    const hasDuplicate = ingredients.find((item) => item.name === ingredient);\r\n    if (!hasDuplicate) {\r\n      if (ingredient != \"\") {\r\n        ingredients.push({\r\n          id: count,\r\n          name: ingredient,\r\n        });\r\n\r\n        this.setState({\r\n          ingredients: [...ingredients],\r\n          ingredient: \"\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      category,\r\n      ingredient,\r\n      ingredients,\r\n      unitType,\r\n      loadedFiles,\r\n      message,\r\n      hasImageLimit,\r\n      redirect,\r\n      photoPreviewUrl,\r\n      isLockButton,\r\n      isSubmitLoading,\r\n    } = this.state;\r\n\r\n    const alert = this.state.showAlert ? (\r\n      <div className=\"ui info message\">\r\n        <p>{message}</p>\r\n      </div>\r\n    ) : (\r\n      \"\"\r\n    );\r\n\r\n    return (\r\n      <Container fluid={true}>\r\n        <Nav />\r\n        <AfterNav form={\"Create Food\"} />\r\n        <hr></hr>\r\n        <Row className=\"dash-layout\">\r\n          <Col lg=\"2\">\r\n            <SideMenu />\r\n          </Col>\r\n          <Col lg=\"1\"></Col>\r\n          <Col className=\"dashboard-panel\" lg=\"6\">\r\n            {redirect ? (\r\n              <SaveSuccess\r\n                data={{\r\n                  message: \"Your food was created successfully.\",\r\n                  btnText1: \"Create another food\",\r\n                  btnText2: \"Go to food list\",\r\n                  url1: MEAL_CREATE,\r\n                  url2: MEAL_LIST,\r\n                }}\r\n              />\r\n            ) : (\r\n              <Fragment>\r\n                <Message attached header=\"Create food\" />\r\n                <Form\r\n                  className=\"attached fluid segment\"\r\n                  onSubmit={this.onUpload.bind(this)}\r\n                >\r\n                  {alert}\r\n                  <Form.Group widths=\"equal\">\r\n                    <Form.Field>\r\n                      <label>Photo</label>\r\n                      <input\r\n                        type=\"file\"\r\n                        onChange={this.fileChangedHandlerForPhoto}\r\n                      />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                      <img\r\n                        style={{\r\n                          objectFit: \"cover\",\r\n                          objectPosition: \"center center\",\r\n                          height: 100,\r\n                          width: \"100\",\r\n                        }}\r\n                        src={photoPreviewUrl}\r\n                      />\r\n                    </Form.Field>\r\n                  </Form.Group>\r\n                  <Form.Field required>\r\n                    <label>Category</label>\r\n                    <Form.Select\r\n                      required\r\n                      fluid\r\n                      onChange={this.onChangeDropdown}\r\n                      name=\"selectedCategory\"\r\n                      options={category}\r\n                      placeholder=\"Category\"\r\n                    />\r\n                  </Form.Field>\r\n\r\n                  <Form.Field required>\r\n                    <label>Food name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      required\r\n                      maxlength=\"40\"\r\n                      name=\"name\"\r\n                      onChange={this.onChange}\r\n                      placeholder=\"Food name\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field required>\r\n                    <label>Price</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      min=\"0\"\r\n                      step=\"0.01\"\r\n                      required\r\n                      name=\"price\"\r\n                      onChange={this.onChange}\r\n                      placeholder=\"Price\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <label>Discount price</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      min=\"0\"\r\n                      step=\"0.01\"\r\n                      name=\"discountPrice\"\r\n                      onChange={this.onChange}\r\n                      placeholder=\"Discount price\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Group widths=\"equal\">\r\n                    <Form.Select\r\n                      fluid\r\n                      label=\"Unit\"\r\n                      name=\"selectedUnitType\"\r\n                      options={unitType}\r\n                      onChange={this.onChangeDropdown}\r\n                      placeholder=\"Unit\"\r\n                    />\r\n                    <Form.Input fluid label=\"Weight\" onChange={this.onChange} />\r\n                  </Form.Group>\r\n                  <Form.Field fluid required>\r\n                    <label>Food description</label>\r\n                    <Form.TextArea\r\n                      required\r\n                      name=\"desc\"\r\n                      maxlength=\"120\"\r\n                      onChange={this.onChange}\r\n                      placeholder=\"Food description\"\r\n                    />\r\n                  </Form.Field>\r\n\r\n                  <Grid fluid stackable columns={2} padded>\r\n                    <Grid.Row>\r\n                      <Grid.Column>\r\n                        <Input\r\n                          fluid\r\n                          type=\"text\"\r\n                          name=\"ingredient\"\r\n                          value={ingredient}\r\n                          onChange={this.onChange}\r\n                          placeholder=\"Enter ingredients\"\r\n                          action\r\n                        >\r\n                          <input />\r\n                          <Button\r\n                            onClick={this.addIngredient}\r\n                            color=\"green\"\r\n                            disabled={!ingredient}\r\n                            type=\"button\"\r\n                          >\r\n                            Add\r\n                          </Button>\r\n                        </Input>\r\n                      </Grid.Column>\r\n                      <Grid.Column></Grid.Column>\r\n                    </Grid.Row>\r\n\r\n                    <Grid.Row>\r\n                      <Grid.Column>\r\n                        {ingredients.length > 0 ? (\r\n                          <Table fluid color=\"green\">\r\n                            <Table.Header>\r\n                              <Table.Row>\r\n                                <Table.HeaderCell>Ingredient</Table.HeaderCell>\r\n                                <Table.HeaderCell></Table.HeaderCell>\r\n                              </Table.Row>\r\n                            </Table.Header>\r\n\r\n                            <Table.Body>\r\n                              {ingredients.map((item) => {\r\n                                return (\r\n                                  <Table.Row key={item.id}>\r\n                                    <Table.Cell>\r\n                                      {\" \"}\r\n                                      <h4>{item.name}</h4>\r\n                                    </Table.Cell>\r\n                                    <Table.Cell textAlign=\"right\">\r\n                                      <Link\r\n                                        title={`Remove ${item.name}`}\r\n                                        onClick={() =>\r\n                                          this.removeIngredient(item.id)\r\n                                        }\r\n                                      >\r\n                                        <Icon\r\n                                          color=\"red\"\r\n                                          size=\"large\"\r\n                                          name=\"minus circle\"\r\n                                        />\r\n                                      </Link>{\" \"}\r\n                                    </Table.Cell>\r\n                                  </Table.Row>\r\n                                );\r\n                              })}\r\n                            </Table.Body>\r\n                          </Table>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </Grid.Column>\r\n\r\n                      <Grid.Column></Grid.Column>\r\n                    </Grid.Row>\r\n                  </Grid>\r\n\r\n                  <hr />\r\n                  <Button\r\n                    color=\"red\"\r\n                    loading={isSubmitLoading}\r\n                    disabled={isLockButton}\r\n                    type=\"submit\"\r\n                  >\r\n                    Save <Icon name=\"save\" />\r\n                  </Button>\r\n                </Form>{\" \"}\r\n                {/* <AnchorButton\r\n                text=\"Upload\"\r\n                intent={Intent.SUCCESS}\r\n                onClick={this.onUpload.bind(this)}\r\n              /> */}\r\n                <p></p>\r\n              </Fragment>\r\n            )}\r\n            <br />\r\n            <br />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nProductForm.propTypes = {\r\n  fetchUser: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  user: state.products.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchUser })(ProductForm);\r\n","import React, { Fragment } from \"react\";\r\n\r\nimport { AnchorButton, Intent, ProgressBar } from \"@blueprintjs/core\";\r\nimport AfterNav from \"./common/afterNav\";\r\n\r\nimport _ from \"lodash\";\r\n\r\nimport { remove } from \"react-icons-kit/fa/remove\";\r\nimport Nav from \"./common/nav\";\r\nimport SideMenu from \"./common/sideMenu\";\r\nimport SaveSuccess from \"./common/saveSuccess\";\r\nimport ClientService from \"../services/clientService\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport clientService from \"../services/clientService\";\r\nimport {\r\n  MISSING_USER_MSG,\r\n  IMG_MAX_SIZE,\r\n  ERROR_MSG,\r\n  toastOptions,\r\n  MEAL_CREATE,\r\n  MEAL_LIST,\r\n  SAVE_SUCCESS,\r\n  titleCase,\r\n} from \"../utility/global\";\r\nimport {\r\n  Button,\r\n  Message,\r\n  Form,\r\n  Icon,\r\n  Grid,\r\n  Table,\r\n  Input,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport { fetchUser } from \"../actions/productActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nlet count = 0;\r\n\r\nclass ProductForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.buttonRef = React.createRef();\r\n    this.state = {\r\n      loadedFiles: [],\r\n      name: \"\",\r\n      desc: \"\",\r\n      weight: \"\",\r\n      price: \"\",\r\n      ingredients: [],\r\n      ingredient: \"\",\r\n      selectedPhoto: null,\r\n      discountPrice: \"\",\r\n      unitType: [],\r\n      unitText: \"\",\r\n      category: [],\r\n      selectedUnitType: \"\",\r\n      selectedCategory: \"\",\r\n      showAlert: false,\r\n      hasSave: true,\r\n      message: \"\",\r\n      hasError: false,\r\n      hasImageLimit: false,\r\n      redirect: false,\r\n      photoPreviewUrl: null,\r\n      categoryText: \"\",\r\n      oldPhoto: \"\",\r\n      productId: \"\",\r\n      userId: \"\",\r\n      isLockButton: false,\r\n      isSubmitLoading: false,\r\n    };\r\n  }\r\n  componentDidMount = async () => {\r\n    const productId = this.props.match.params.id;\r\n    const getMealById = await clientService.productById(productId);\r\n\r\n    if (getMealById) {\r\n      const {\r\n        name,\r\n        desc,\r\n        price,\r\n        discountPrice,\r\n        ingredients,\r\n        Category,\r\n        weight,\r\n        Unit,\r\n        photo,\r\n        id,\r\n      } = getMealById.data.data;\r\n\r\n      if (ingredients) {\r\n        count = ingredients.length;\r\n        this.setState({\r\n          ingredients: ingredients,\r\n        });\r\n      }\r\n\r\n      this.setState({\r\n        name,\r\n        desc,\r\n        weight,\r\n        price,\r\n        unitText: Unit ? Unit.name : \"Unit\",\r\n        categoryText: Category ? Category.name : \"\",\r\n        discountPrice,\r\n        selectedPhoto: photo,\r\n        selectedUnitType: Unit ? Unit.id : \"\",\r\n        oldPhoto: photo,\r\n        productId: id,\r\n        selectedCategory: Category ? Category.id : \"\",\r\n        photoPreviewUrl: photo ? `${photo}` : \"\",\r\n      });\r\n    }\r\n\r\n    const unitResponse = await ClientService.unitTypes();\r\n    let unitTypes = unitResponse.data.data.map((unitType) => {\r\n      return {\r\n        key: unitType.id,\r\n        value: unitType.id,\r\n        text: unitType.name,\r\n      };\r\n    });\r\n    this.setState({\r\n      unitType: [{ key: \"\", text: \"--Select unit type--\" }].concat(unitTypes),\r\n    });\r\n\r\n    const categoryResponse = await ClientService.category();\r\n\r\n    let categories = categoryResponse.data.data.map((category) => {\r\n      return {\r\n        key: category.id,\r\n        value: category.id,\r\n        text: category.name,\r\n      };\r\n    });\r\n    this.setState({\r\n      category: [{ value: \"\", text: \"--Select category--\" }].concat(categories),\r\n    });\r\n  };\r\n  componentWillReceiveProps = async (nextProps) => {\r\n    if (nextProps) {\r\n    }\r\n  };\r\n  fileChangedHandlerForPhoto = (event) => {\r\n    try {\r\n      this.setState({\r\n        selectedPhoto: event.target.files[0],\r\n      });\r\n\r\n      let reader = new FileReader();\r\n\r\n      reader.onloadend = () => {\r\n        this.setState({\r\n          photoPreviewUrl: reader.result,\r\n        });\r\n      };\r\n\r\n      reader.readAsDataURL(event.target.files[0]);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  onChangeDropdown = (e, data) => {\r\n    this.setState({\r\n      [data.name]: data.value,\r\n    });\r\n  };\r\n\r\n  onUpload = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const {\r\n      discountPrice,\r\n      selectedUnitType,\r\n      selectedCategory,\r\n      selectedPhoto,\r\n      weight,\r\n      price,\r\n      ingredients,\r\n      name,\r\n      desc,\r\n      oldPhoto,\r\n      productId,\r\n      shopId,\r\n    } = this.state;\r\n    if (selectedPhoto) {\r\n      if (selectedCategory !== \"\") {\r\n        //Lock submit button and show loading in the button\r\n        this.setState({\r\n          isLockButton: true,\r\n          isSubmitLoading: true,\r\n        });\r\n        let formData = new FormData();\r\n\r\n        if (discountPrice) formData.append(\"discountPrice\", discountPrice);\r\n        formData.append(\"price\", price);\r\n        formData.append(\"categoryId\", selectedCategory);\r\n        if (selectedUnitType) formData.append(\"unitId\", selectedUnitType);\r\n        if (weight) formData.append(\"weight\", weight);\r\n        formData.append(\"image\", selectedPhoto);\r\n        formData.append(\"ingredients\", JSON.stringify(ingredients));\r\n        formData.append(\"name\", name);\r\n        formData.append(\"desc\", desc);\r\n        formData.append(\"photo\", oldPhoto);\r\n\r\n        try {\r\n          const response = await clientService.productUpdate(\r\n            productId,\r\n            formData\r\n          );\r\n          if (!response.data.error) {\r\n            this.props.history.push(`${MEAL_LIST}`);\r\n          } else {\r\n            toast.success(response.data.message, toastOptions(true));\r\n          }\r\n        } catch (err) {\r\n          toast.success(ERROR_MSG, toastOptions(true));\r\n        }\r\n        //Release button and hide loading\r\n        this.setState({\r\n          isSubmitLoading: false,\r\n          isLockButton: false,\r\n        });\r\n      } else {\r\n        toast.success(\r\n          \"Please required options must be selected such as category.\",\r\n          toastOptions(true)\r\n        );\r\n      }\r\n    } else {\r\n      toast.success(\r\n        \"A photo is required in order to proceed with update.\",\r\n        toastOptions(true)\r\n      );\r\n    }\r\n\r\n    //Release button and hide loading\r\n    this.setState({\r\n      isSubmitLoading: false,\r\n      isLockButton: false,\r\n    });\r\n  };\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  removeIngredient = (id) => {\r\n    this.setState({\r\n      ingredients: [...this.state.ingredients.filter((item) => item.id !== id)],\r\n    });\r\n  };\r\n  addIngredient = () => {\r\n    count++;\r\n    const ingredient = titleCase(this.state.ingredient);\r\n    const ingredients = this.state.ingredients;\r\n    const hasDuplicate = ingredients.find((item) => item.name === ingredient);\r\n    if (!hasDuplicate) {\r\n      if (ingredient != \"\") {\r\n        ingredients.push({\r\n          id: count,\r\n          name: ingredient,\r\n        });\r\n\r\n        this.setState({\r\n          ingredients: [...ingredients],\r\n          ingredient: \"\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    const {\r\n      name,\r\n      price,\r\n      weight,\r\n      discountPrice,\r\n      desc,\r\n      category,\r\n      unitType,\r\n      loadedFiles,\r\n      message,\r\n      hasImageLimit,\r\n      redirect,\r\n      photoPreviewUrl,\r\n      categoryText,\r\n      ingredient,\r\n      ingredients,\r\n      unitText,\r\n      isLockButton,\r\n      isSubmitLoading,\r\n    } = this.state;\r\n\r\n    const alert = this.state.showAlert ? (\r\n      <div className=\"ui info message\">\r\n        <p>{message}</p>\r\n      </div>\r\n    ) : (\r\n      \"\"\r\n    );\r\n\r\n    return (\r\n      <Container fluid={true}>\r\n        <Nav />\r\n        <AfterNav form={\"Create Product\"} />\r\n        <hr></hr>\r\n        <Row className=\"dash-layout\">\r\n          <Col lg=\"2\">\r\n            <SideMenu />\r\n          </Col>\r\n          <Col lg=\"1\"></Col>\r\n          <Col className=\"dashboard-panel\" lg=\"6\">\r\n            {redirect ? (\r\n              <SaveSuccess\r\n                data={{\r\n                  message: \"Your meal was created successfully.\",\r\n                  btnText1: \"Create Another Meal\",\r\n                  btnText2: \"Go to Meal List\",\r\n                  url1: MEAL_CREATE,\r\n                  url2: MEAL_LIST,\r\n                }}\r\n              />\r\n            ) : (\r\n              <Fragment>\r\n                <Message attached header=\"Update food\" />\r\n                <Form\r\n                  className=\"attached fluid segment\"\r\n                  onSubmit={this.onUpload.bind(this)}\r\n                >\r\n                  {alert}\r\n                  <Form.Group widths=\"equal\">\r\n                    <Form.Field>\r\n                      <label>Photo</label>\r\n                      <input\r\n                        type=\"file\"\r\n                        onChange={this.fileChangedHandlerForPhoto}\r\n                      />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                      <img\r\n                        style={{\r\n                          objectFit: \"cover\",\r\n                          objectPosition: \"center center\",\r\n                          height: 100,\r\n                          width: \"100\",\r\n                        }}\r\n                        src={photoPreviewUrl}\r\n                      />\r\n                    </Form.Field>\r\n                  </Form.Group>\r\n                  <Form.Field required>\r\n                    <label>Category</label>\r\n                    <Form.Select\r\n                      required\r\n                      fluid\r\n                      onChange={this.onChangeDropdown}\r\n                      name=\"selectedCategory\"\r\n                      options={category}\r\n                      placeholder={categoryText}\r\n                    />\r\n                  </Form.Field>\r\n\r\n                  <Form.Field required>\r\n                    <label>Food name</label>\r\n                    <input\r\n                      value={name}\r\n                      type=\"text\"\r\n                      required\r\n                      maxlength=\"40\"\r\n                      name=\"name\"\r\n                      onChange={this.onChange}\r\n                      placeholder=\"Food name\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field required>\r\n                    <label>Price</label>\r\n                    <input\r\n                      value={price}\r\n                      type=\"number\"\r\n                      min=\"0\"\r\n                      step=\"0.01\"\r\n                      required\r\n                      name=\"price\"\r\n                      onChange={this.onChange}\r\n                      placeholder=\"Price\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <label>Discount price</label>\r\n                    <input\r\n                      value={discountPrice}\r\n                      type=\"number\"\r\n                      min=\"0\"\r\n                      step=\"0.01\"\r\n                      name=\"discountPrice\"\r\n                      onChange={this.onChange}\r\n                      placeholder=\"Discount price\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Group widths=\"equal\">\r\n                    <Form.Select\r\n                      fluid\r\n                      label=\"Unit\"\r\n                      name=\"selectedUnitType\"\r\n                      options={unitType}\r\n                      onChange={this.onChangeDropdown}\r\n                      placeholder={unitText}\r\n                    />\r\n                    <Form.Input\r\n                      fluid\r\n                      label=\"Weight\"\r\n                      value={weight}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Field required>\r\n                    <label>Food description</label>\r\n                    <Form.TextArea\r\n                      value={desc}\r\n                      required\r\n                      maxlength=\"120\"\r\n                      name=\"desc\"\r\n                      onChange={this.onChange}\r\n                      placeholder=\"Food description\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Grid fluid stackable columns={2} padded>\r\n                    <Grid.Row>\r\n                      <Grid.Column>\r\n                        <Input\r\n                          fluid\r\n                          type=\"text\"\r\n                          name=\"ingredient\"\r\n                          value={ingredient}\r\n                          onChange={this.onChange}\r\n                          placeholder=\"Enter ingredients\"\r\n                          action\r\n                        >\r\n                          <input />\r\n                          <Button\r\n                            onClick={this.addIngredient}\r\n                            color=\"green\"\r\n                            disabled={!ingredient}\r\n                            type=\"button\"\r\n                          >\r\n                            Add\r\n                          </Button>\r\n                        </Input>\r\n                      </Grid.Column>\r\n                      <Grid.Column></Grid.Column>\r\n                    </Grid.Row>\r\n\r\n                    <Grid.Row>\r\n                      <Grid.Column>\r\n                        {ingredients.length > 0 ? (\r\n                          <Table fluid color=\"green\">\r\n                            <Table.Header>\r\n                              <Table.Row>\r\n                                <Table.HeaderCell>Ingredient</Table.HeaderCell>\r\n                                <Table.HeaderCell></Table.HeaderCell>\r\n                              </Table.Row>\r\n                            </Table.Header>\r\n\r\n                            <Table.Body>\r\n                              {ingredients.map((item) => {\r\n                                return (\r\n                                  <Table.Row key={item.id}>\r\n                                    <Table.Cell>\r\n                                      {\" \"}\r\n                                      <h4>{item.name}</h4>\r\n                                    </Table.Cell>\r\n                                    <Table.Cell textAlign=\"right\">\r\n                                      <Link\r\n                                        title={`Remove ${item.name}`}\r\n                                        onClick={() =>\r\n                                          this.removeIngredient(item.id)\r\n                                        }\r\n                                      >\r\n                                        <Icon\r\n                                          color=\"red\"\r\n                                          size=\"large\"\r\n                                          name=\"minus circle\"\r\n                                        />\r\n                                      </Link>{\" \"}\r\n                                    </Table.Cell>\r\n                                  </Table.Row>\r\n                                );\r\n                              })}\r\n                            </Table.Body>\r\n                          </Table>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </Grid.Column>\r\n\r\n                      <Grid.Column></Grid.Column>\r\n                    </Grid.Row>\r\n                  </Grid>\r\n                  <hr></hr>\r\n                  <Button\r\n                    color=\"red\"\r\n                    disabled={isLockButton}\r\n                    loading={isSubmitLoading}\r\n                    type=\"submit\"\r\n                  >\r\n                    Submit <Icon name=\"save\" />\r\n                  </Button>\r\n                </Form>{\" \"}\r\n                {/* <AnchorButton\r\n                text=\"Upload\"\r\n                intent={Intent.SUCCESS}\r\n                onClick={this.onUpload.bind(this)}\r\n              /> */}\r\n                <p></p>\r\n              </Fragment>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nProductForm.propTypes = {\r\n  fetchUser: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  user: state.products.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchUser })(ProductForm);\r\n","import React, { Component } from \"react\";\r\nimport Nav from \"./common/nav\";\r\nimport SideMenu from \"./common/sideMenu\";\r\nimport ClientService from \"../services/clientService\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport clientService from \"../services/clientService\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  MISSING_USER_MSG,\r\n  DEFAULT_BANNER,\r\n  DEFAULT_LOGO,\r\n  toastOptions,\r\n} from \"../utility/global\";\r\nimport {\r\n  Button,\r\n  Dropdown,\r\n  Form,\r\n  Image,\r\n  Message,\r\n  Input,\r\n  Divider,\r\n  Header,\r\n  Segment,\r\n  Label,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\nimport AfterNav from \"./common/afterNav\";\r\nconst hour = [0,1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\nconst min = [];\r\n//import \"date-fns\";\r\n//import MomentUtils from \"@date-io/moment\";\r\n\r\nconst durations = [];\r\n\r\nexport default class ShopSetting extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    shopId: \"\",\r\n    deliveryPrice: \"\",\r\n    minOrder: \"\",\r\n    maxTime: \"\",\r\n    minTime: \"\",\r\n    minText: \"\",\r\n    hourText: \"\",\r\n    discountAmount: \"\",\r\n    selectedMin: \"\",\r\n    selectedHour: \"\",\r\n    cboHours: [{ value: \"\", text: \"--Select hour--\" }].concat(\r\n      hour.map((hour) => {\r\n        return {\r\n          key: hour,\r\n          value: hour,\r\n          text: hour,\r\n        };\r\n      })\r\n    ),\r\n    cboMins: [],\r\n    percentageDiscount: \"\",\r\n    notice: \"\",\r\n    prepareTime: [],\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    min.push(\"00\");\r\n    min.push(\"01\");\r\n    min.push(\"02\");\r\n    min.push(\"03\");\r\n    min.push(\"04\");\r\n    min.push(\"05\");\r\n    min.push(\"06\");\r\n    min.push(\"07\");\r\n    min.push(\"08\");\r\n    min.push(\"09\");\r\n    for (let i = 10; i < 60; i++) {\r\n      min.push(i);\r\n    }\r\n    const result = await ClientService.hasAuth();\r\n    const user = result.data.data;\r\n    if (user) {\r\n      ClientService.findShopByUser(user.id)\r\n        .then((response) => {\r\n          const data = response.data.data;\r\n\r\n          const {\r\n            id,\r\n            percentageDiscount,\r\n            discountAmount,\r\n            notice,\r\n            deliveryPrice,\r\n            minOrder,\r\n            maxTime,\r\n            minTime,\r\n            prepareTime,\r\n          } = data;\r\n         \r\n          this.setState({\r\n            cboMins: [{ value: \"\", text: \"--Select mins--\" }].concat(\r\n              min.map((min) => {\r\n                return {\r\n                  key: min,\r\n                  value: min,\r\n                  text: min,\r\n                };\r\n              })\r\n            ),\r\n            deliveryPrice,\r\n            minOrder,\r\n            minTime,\r\n            shopId: id,\r\n            maxTime,\r\n            notice,\r\n            minText:prepareTime?prepareTime.min: \"Min(s)\",\r\n            hourText:prepareTime?prepareTime.hour:\"Hour(s)\",\r\n            percentageDiscount,\r\n            discountAmount,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          //console.log(err);\r\n        });\r\n    }\r\n  };\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  onChangeDropdown = (e, data) => {\r\n    this.setState({\r\n      [data.name]: data.value,\r\n    });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const {\r\n      percentageDiscount,\r\n      discountAmount,\r\n      notice,\r\n      deliveryPrice,\r\n      minOrder,\r\n      maxTime,\r\n      minTime,\r\n      shopId,\r\n      selectedHour,\r\n      selectedMin,\r\n    } = this.state;\r\n\r\n    if (shopId) {\r\n      clientService\r\n        .settings(shopId, {\r\n          percentageDiscount,\r\n          discountAmount,\r\n          notice,\r\n          deliveryPrice,\r\n          minOrder,\r\n          maxTime,\r\n          minTime,\r\n          prepareTime: { hour: selectedHour, min: selectedMin },\r\n        })\r\n        .then((response) => {\r\n          toast.success(response.data.message, toastOptions());\r\n        })\r\n        .catch((err) => {\r\n          const message = err.response.data.message;\r\n\r\n          toast.success(message, toastOptions(true));\r\n        });\r\n    } else {\r\n      toast.success(MISSING_USER_MSG, toastOptions(true));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      percentageDiscount,\r\n      discountAmount,\r\n      notice,\r\n      deliveryPrice,\r\n      minOrder,\r\n      maxTime,\r\n      minTime,\r\n      cboMins,\r\n      cboHours,\r\n      shopId,\r\n      selectedHour,\r\n      selectedMin,\r\n      minText,\r\n      hourText,\r\n    } = this.state;\r\n    console.log(`${selectedHour} ${selectedMin}`);\r\n    return (\r\n      <Container fluid={true}>\r\n        <Nav />\r\n        <AfterNav form={\"Store Settings\"} />\r\n        <hr></hr>\r\n        <Row style={{ paddingTop: \"10px\" }}>\r\n          <Col lg=\"2\">\r\n            <SideMenu />\r\n          </Col>\r\n          <Col lg=\"1\"></Col>\r\n          <Col className=\"dashboard-panel\" lg=\"6\">\r\n            <Message attached header=\"Store settings\" />\r\n\r\n            <Segment>\r\n              <Header as=\"h3\">\r\n                Delivery Time <Icon name=\"time\" />\r\n              </Header>\r\n              <Form\r\n                className=\"attached fluid segment\"\r\n                onSubmit={this.onSubmit}\r\n                size=\"tiny\"\r\n              >\r\n                <Form.Group>\r\n                  <Form.Field width={5}>\r\n                    <label>Min. delivery time</label>\r\n                    <Input\r\n                      value={minOrder}\r\n                      labelPosition=\"right\"\r\n                      min=\"0\"\r\n                      max=\"120\"\r\n                      onChange={this.onChange}\r\n                      name=\"minTime\"\r\n                      type=\"number\"\r\n                      placeholder=\"Min. delivery time\"\r\n                    >\r\n                      <input />\r\n                      <Label>mins</Label>\r\n                    </Input>\r\n                  </Form.Field>\r\n                  <Form.Field width={5}>\r\n                    <label>Max. delivery time (120 mins)</label>\r\n                    <Input\r\n                      labelPosition=\"right\"\r\n                      min=\"0\"\r\n                      max=\"120\"\r\n                      value={maxTime}\r\n                      onChange={this.onChange}\r\n                      name=\"maxTime\"\r\n                      type=\"number\"\r\n                      placeholder=\"Max. delivery time\"\r\n                    >\r\n                      <input />\r\n                      <Label>mins</Label>\r\n                    </Input>\r\n                  </Form.Field>\r\n                </Form.Group>\r\n                <br />\r\n                <Button color=\"red\" size=\"mini\" type=\"submit\">\r\n                  Save <Icon name=\"save\" />\r\n                </Button>\r\n              </Form>\r\n              <Divider hidden />\r\n              <Divider section />\r\n              <Header as=\"h3\">\r\n                Preparation Time <Icon name=\"hourglass one\" />\r\n              </Header>\r\n              <Form onSubmit={this.onSubmit} size=\"tiny\">\r\n                <Form.Group>\r\n                  <Form.Field width={5}>\r\n                    <label>Hour(s)</label>\r\n                    <Form.Select\r\n                      required\r\n                      fluid\r\n                      onChange={this.onChangeDropdown}\r\n                      name=\"selectedHour\"\r\n                      options={cboHours}\r\n                      placeholder={hourText}\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field width={5}>\r\n                    <label>Min(s)</label>\r\n                    <Form.Select\r\n                      required\r\n                      fluid\r\n                      onChange={this.onChangeDropdown}\r\n                      name=\"selectedMin\"\r\n                      options={cboMins}\r\n                      placeholder={minText}\r\n                    />\r\n                  </Form.Field>\r\n                </Form.Group>\r\n                <Button color=\"red\" size=\"mini\" type=\"submit\">\r\n                  Save <Icon name=\"save\" />\r\n                </Button>\r\n              </Form>\r\n              <Divider section />\r\n              <Header as=\"h3\">\r\n                Delivery Price <Icon name=\"money\" />\r\n              </Header>\r\n              <Form onSubmit={this.onSubmit} size=\"tiny\">\r\n                <Form.Field width={5}>\r\n                  <label>Delivery price</label>\r\n                  <Input\r\n                    labelPosition=\"right\"\r\n                    min=\"0\"\r\n                    step=\"0.01\"\r\n                    value={deliveryPrice}\r\n                    type=\"number\"\r\n                    onChange={this.onChange}\r\n                    name=\"deliveryPrice\"\r\n                    placeholder=\"Delivery price\"\r\n                  >\r\n                    <Label basic>£</Label>\r\n                    <input />\r\n                    <Label>.00</Label>\r\n                  </Input>\r\n                </Form.Field>\r\n\r\n                <Button color=\"red\" size=\"mini\" type=\"submit\">\r\n                  Save <Icon name=\"save\" />\r\n                </Button>\r\n              </Form>\r\n              <Divider section />\r\n              <Header as=\"h3\">\r\n                Minimum Order <Icon name=\"minus\" />\r\n              </Header>\r\n              <Form onSubmit={this.onSubmit} size=\"tiny\">\r\n                <Form.Field width={5}>\r\n                  <label>Minimum order </label>\r\n                  <Input\r\n                    labelPosition=\"right\"\r\n                    min=\"0\"\r\n                    value={minOrder}\r\n                    name=\"minOrder\"\r\n                    step=\"0.01\"\r\n                    onChange={this.onChange}\r\n                    type=\"number\"\r\n                    placeholder=\"Minimum order\"\r\n                  >\r\n                    <Label basic>£</Label>\r\n                    <input />\r\n                    <Label>.00</Label>\r\n                  </Input>\r\n                </Form.Field>\r\n\r\n                <Button color=\"red\" size=\"mini\" type=\"submit\">\r\n                  Save <Icon name=\"save\" />\r\n                </Button>\r\n              </Form>\r\n              <Divider section />\r\n              <Header as=\"h3\">\r\n                Discount <Icon name=\"tag\" />\r\n              </Header>\r\n              <Form onSubmit={this.onSubmit} size=\"tiny\">\r\n                <Form.Group>\r\n                  <Form.Field width={5}>\r\n                    <label>Percentage discount</label>\r\n                    <Input\r\n                      labelPosition=\"right\"\r\n                      min=\"0\"\r\n                      max=\"100\"\r\n                      step=\"0.01\"\r\n                      value={percentageDiscount}\r\n                      onChange={this.onChange}\r\n                      name=\"percentageDiscount\"\r\n                      type=\"number\"\r\n                      placeholder=\"Discount\"\r\n                    >\r\n                      <input />\r\n                      <Label>%</Label>\r\n                    </Input>\r\n                  </Form.Field>\r\n\r\n                  <Form.Field width={5}>\r\n                    <label>When you spend</label>\r\n                    <Input\r\n                      labelPosition=\"right\"\r\n                      min=\"0\"\r\n                      step=\"0.01\"\r\n                      value={discountAmount}\r\n                      onChange={this.onChange}\r\n                      name=\"discountAmount\"\r\n                      type=\"number\"\r\n                      placeholder=\"Spend\"\r\n                    >\r\n                      <Label basic>£</Label>\r\n                      <input />\r\n                      <Label>.00</Label>\r\n                    </Input>\r\n                  </Form.Field>\r\n                </Form.Group>\r\n\r\n                <br />\r\n                <Button color=\"red\" size=\"mini\" type=\"submit\">\r\n                  Save <Icon name=\"save\" />\r\n                </Button>\r\n              </Form>\r\n              <Divider section />\r\n              <Header as=\"h3\">\r\n                Public Notice <Icon name=\"announcement\" />\r\n              </Header>\r\n              <Form onSubmit={this.onSubmit} size=\"tiny\">\r\n                <Form.TextArea\r\n                  maxlength=\"200\"\r\n                  name=\"notice\"\r\n                  onChange={this.onChange}\r\n                  value={notice}\r\n                  placeholder=\"Write a short welcome message for customers...\"\r\n                />\r\n                <Button color=\"red\" size=\"mini\" type=\"submit\">\r\n                  Save <Icon name=\"save\" />\r\n                </Button>\r\n                <br />\r\n                <br />\r\n              </Form>\r\n            </Segment>\r\n            <br />\r\n            <br />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n//import Grid from \"@material-ui/core/Grid\";\r\n// import {\r\n//   MuiPickersUtilsProvider,\r\n//   KeyboardTimePicker,\r\n//   KeyboardDatePicker,\r\n// } from \"@material-ui/pickers\";\r\nimport Nav from \"./common/nav\";\r\nimport SideMenu from \"./common/sideMenu\";\r\nimport ClientService from \"../services/clientService\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport clientService from \"../services/clientService\";\r\nimport {\r\n  MISSING_USER_MSG,\r\n  DEFAULT_BANNER,\r\n  DEFAULT_USER,\r\n} from \"../utility/global\";\r\nimport {\r\n  Button,\r\n  Dropdown,\r\n  Form,\r\n  Image,\r\n  Message,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\nimport AfterNav from \"./common/afterNav\";\r\nimport { fetchUser } from \"../actions/productActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n//import \"date-fns\";\r\n//import MomentUtils from \"@date-io/moment\";\r\n\r\nclass Account extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  state = {\r\n    city: [],\r\n    selectedCity: \"\",\r\n    showAlert: false,\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    firstAddress: \"\",\r\n    secondAddress: \"\",\r\n    postCode: \"\",\r\n    message: \"\",\r\n    cityText: \"\",\r\n    selectedPhoto: \"\",\r\n    photoPreviewUrl: \"\",\r\n    userId: \"\",\r\n\r\n    //selectedDateStart: new Date(\"2014-08-18T21:11:54\").setHours(10, 0, 0),\r\n    //selectedDateEnd: new Date(\"2014-08-18T21:11:54\").setHours(20, 0, 0),\r\n  };\r\n  componentWillReceiveProps = async (nextProps) => {\r\n    if (nextProps) {\r\n      const user = nextProps.user;\r\n      if (user) {\r\n        ClientService.findUserById(user.id)\r\n          .then((response) => {\r\n            const data = response.data.data;\r\n            const {\r\n              firstName,\r\n              lastName,\r\n              email,\r\n              firstAddress,\r\n              secondAddress,\r\n              postCode,\r\n              cityId,\r\n              City,\r\n              photo,\r\n            } = data;\r\n           \r\n            const myPhoto = photo ? `${photo}` : \"\";\r\n            this.setState({\r\n              photoPreviewUrl: myPhoto,\r\n              firstName,\r\n              lastName,\r\n              email,\r\n              firstAddress,\r\n              secondAddress,\r\n              postCode,\r\n              userId: user.id,\r\n              selectedCity: cityId,\r\n              cityText: City ? City.name : \"City\",\r\n            });\r\n          })\r\n          .catch((err) => {\r\n            //console.log(err);\r\n          });\r\n      }\r\n    }\r\n  };\r\n  fileChangedHandler = (event) => {\r\n    try {\r\n      this.setState({\r\n        selectedPhoto: event.target.files[0],\r\n      });\r\n\r\n      let reader = new FileReader();\r\n\r\n      reader.onloadend = () => {\r\n        this.setState({\r\n          logoPreviewUrl: reader.result,\r\n        });\r\n      };\r\n\r\n      reader.readAsDataURL(event.target.files[0]);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    ClientService.cities()\r\n      .then((response) => {\r\n        let cities = response.data.data.map((city) => {\r\n          return {\r\n            key: city.id,\r\n            value: city.id,\r\n            text: city.name,\r\n          };\r\n        });\r\n        this.setState({\r\n          city: [{ value: \"\", text: \"--Select city--\" }].concat(cities),\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        //console.log(err);\r\n      });\r\n  };\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  onChangeDropdown = (e, data) => {\r\n    this.setState({\r\n      [data.name]: data.value,\r\n    });\r\n  };\r\n\r\n  onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      firstAddress,\r\n      secondAddress,\r\n      postCode,\r\n      selectedCity,\r\n      selectedPhoto,\r\n      userId\r\n    } = this.state;\r\n    \r\n    \r\n    const formData = new FormData();\r\n    formData.append(\"firstName\", firstName);\r\n    formData.append(\"lastName\", lastName);\r\n    formData.append(\"email\", email);\r\n    formData.append(\"firstAddress\", firstAddress);\r\n    formData.append(\"secondAddress\", secondAddress);\r\n    formData.append(\"postCode\", postCode);\r\n    formData.append(\"cityId\", selectedCity);\r\n    formData.append(\"photo\", selectedPhoto);\r\n\r\n    clientService\r\n      .userUpdate(userId, formData)\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({\r\n          showAlert: true,\r\n          message: response.data.message,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        const message = err.response.data.message;\r\n\r\n        this.setState({ showAlert: true, message: message });\r\n      });\r\n  };\r\n  fileChangedHandler = (event) => {\r\n    try {\r\n      this.setState({\r\n        selectedPhoto: event.target.files[0],\r\n      });\r\n\r\n      let reader = new FileReader();\r\n\r\n      reader.onloadend = () => {\r\n        this.setState({\r\n          photoPreviewUrl: reader.result,\r\n        });\r\n      };\r\n\r\n      reader.readAsDataURL(event.target.files[0]);\r\n    } catch (err) {}\r\n  };\r\n  render() {\r\n    const userAlert = this.state.showAlert ? (\r\n      <div className=\"ui info message\">\r\n        <p>{this.state.message}</p>\r\n      </div>\r\n    ) : (\r\n      \"\"\r\n    );\r\n\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      firstAddress,\r\n      secondAddress,\r\n      selectedCity,\r\n      postCode,\r\n      city,\r\n      cityText,\r\n      photoPreviewUrl,\r\n    } = this.state;\r\n\r\n    return (\r\n      <Container fluid={true}>\r\n        <Nav />\r\n        <AfterNav form={\"My Account\"} />\r\n        <hr></hr>\r\n        <Row style={{ paddingTop: \"10px\" }}>\r\n          <Col lg=\"2\">\r\n            <SideMenu />\r\n          </Col>\r\n          <Col lg=\"1\"></Col>\r\n          <Col className=\"dashboard-panel\" lg=\"6\">\r\n            <Message attached header=\"Personal details\" />\r\n            <Form\r\n              className=\"attached fluid segment\"\r\n              style={{\r\n                width: \"auto\",\r\n                margin: \"auto\",\r\n                height: \"auto\",\r\n                padding: 13,\r\n              }}\r\n              onSubmit={this.onSubmit}\r\n            >\r\n              {userAlert}\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Photo</label>\r\n                  <input type=\"file\" onChange={this.fileChangedHandler} />\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <img\r\n                    style={{\r\n                      objectFit: \"cover\",\r\n                      objectPosition: \"center center\",\r\n                      height: 100,\r\n                      width: \"100\",\r\n                    }}\r\n                    src={photoPreviewUrl ? photoPreviewUrl : DEFAULT_USER}\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>First name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    required\r\n                    value={firstName}\r\n                    name=\"firstName\"\r\n                    onChange={this.onChange}\r\n                    placeholder=\"First name\"\r\n                  />\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Last name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    required\r\n                    value={lastName}\r\n                    name=\"lastName\"\r\n                    onChange={this.onChange}\r\n                    placeholder=\"Last name\"\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  required\r\n                  value={email}\r\n                  name=\"email\"\r\n                  onChange={this.onChange}\r\n                  placeholder=\"Email\"\r\n                />\r\n              </Form.Field>\r\n\r\n              <hr />\r\n\r\n              <Message floating content=\"Home Address\" />\r\n              <Form.Field>\r\n                <label>Address 1</label>\r\n                <input\r\n                  type=\"text\"\r\n                  required\r\n                  value={firstAddress}\r\n                  name=\"firstAddress\"\r\n                  onChange={this.onChange}\r\n                  placeholder=\"Address 1\"\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Address 2</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={secondAddress}\r\n                  name=\"secondAddress\"\r\n                  onChange={this.onChange}\r\n                  placeholder=\"Address 2\"\r\n                />\r\n              </Form.Field>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <input\r\n                    type=\"text\"\r\n                    required\r\n                    value={postCode}\r\n                    name=\"postCode\"\r\n                    onChange={this.onChange}\r\n                    placeholder=\"Post code\"\r\n                  />\r\n                </Form.Field>\r\n\r\n                <Dropdown\r\n                  required\r\n                  fluid\r\n                  selection\r\n                  search\r\n                  defaultValue={selectedCity}\r\n                  name=\"selectedCity\"\r\n                  label=\"City\"\r\n                  placeholder={cityText}\r\n                  options={city}\r\n                  onChange={this.onChangeDropdown}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Button color=\"red\" type=\"submit\">\r\n                Save <Icon name=\"save\" />\r\n              </Button>\r\n            </Form>\r\n            <br />\r\n            <br />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nAccount.propTypes = {\r\n  fetchUser: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  user: state.products.user,\r\n});\r\nexport default connect(mapStateToProps, { fetchUser })(Account);\r\n","import React, { Component } from \"react\";\r\nimport ClientService from \"../services/clientService\";\r\nimport NavBar from \"./NavBar\";\r\nimport { Grid, Image, Card, Header, Rating } from \"semantic-ui-react\";\r\nimport Review from \"./widgets/Review\";\r\nimport ReviewList from \"./widgets/reviewList\";\r\nimport Footer from \"./Footer\";\r\nimport { fetchUser } from \"../actions/productActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  DEFAULT_USER,\r\n  DEFAULT_BANNER,\r\n  DEFAULT_LOGO,\r\n  totalRating,\r\n  displayRating,\r\n} from \"../utility/global\";\r\nimport clientService from \"../services/clientService\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass ProductDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    productId: \"\",\r\n    name: \"\",\r\n    price: \"\",\r\n    discountprice: \"\",\r\n    desc: \"\",\r\n    productImages: [],\r\n    productRatings: [],\r\n    category: \"\",\r\n    shop: \"\",\r\n    overallRating: 0,\r\n    replyResult: \"\",\r\n    posterName: \"\",\r\n  };\r\n  componentDidMount = async () => {\r\n    const productId = this.props.match.params.id;\r\n\r\n    const product = await ClientService.productById(productId);\r\n\r\n    const data = product.data.data;\r\n    //Get overall ratings\r\n    let ratingCount = 0;\r\n    const productRatings = data.productRatings;\r\n\r\n    const {\r\n      id,\r\n      name,\r\n      price,\r\n      discountprice,\r\n      desc,\r\n      Category,\r\n      VirtualShop,\r\n      photo,\r\n    } = data;\r\n\r\n    this.setState({\r\n      overallRating: displayRating(productRatings),\r\n      productId: id,\r\n      name,\r\n      photo,\r\n      price,\r\n      discountprice,\r\n      desc,\r\n      category: Category.name,\r\n      shop: VirtualShop,\r\n    });\r\n\r\n    clientService.findReviewByProduct({ productId }).then((response) => {\r\n      this.setState({\r\n        productRatings: response.data.data,\r\n      });\r\n    });\r\n  };\r\n\r\n  componentWillReceiveProps = async (nextProps) => {\r\n    if (nextProps) {\r\n      const user = nextProps.user;\r\n      if (user) {\r\n        this.setState({\r\n          posterName: user.firstName,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  handleReply = async (data) => {\r\n    const { content, userId, ratingId } = data;\r\n    const result = await clientService.createProductRatingResponse({\r\n      content,\r\n      userId,\r\n      ratingId,\r\n    });\r\n    this.setState({ replyResult: result.data.data });\r\n  };\r\n  render() {\r\n    const styles = {\r\n      objectFit: \"cover\",\r\n      objectPosition: \"center center\",\r\n      padding: 5,\r\n    };\r\n    const {\r\n      photo,\r\n      name,\r\n      desc,\r\n      price,\r\n      category,\r\n      shop,\r\n      productId,\r\n      overallRating,\r\n      productRatings,\r\n      replyResult,\r\n      posterName,\r\n    } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <NavBar />\r\n        <Grid style={{ paddingTop: 80, paddingLeft: 30 }}>\r\n          <Grid.Row>\r\n            <Grid.Column width={8}>\r\n              <Image\r\n                style={{\r\n                  objectFit: \"cover\",\r\n                  objectPosition: \"center center\",\r\n                  width: \"100%\",\r\n                }}\r\n                src={`${photo}`}\r\n                size=\"medium\"\r\n                rounded\r\n              />\r\n            </Grid.Column>\r\n            <Grid.Column width={8}>\r\n              <Header as=\"h1\">{name}</Header>\r\n              <span>{desc}</span>\r\n              <Header color=\"red\" as=\"h4\">\r\n                £{parseInt(price).toFixed(2)}\r\n              </Header>\r\n              <Rating\r\n                maxRating={5}\r\n                defaultRating={0}\r\n                rating={overallRating}\r\n                disabled\r\n                icon=\"star\"\r\n                size=\"huge\"\r\n              />{\" \"}\r\n              | {totalRating(productRatings)}\r\n              <Header as=\"h4\">{category}</Header>\r\n              <Header as=\"h5\">\r\n                By{\" \"}\r\n                {shop ? (\r\n                  <Link to={`/${shop.shopUrl}`}>{shop.shopName}</Link>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </Header>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row></Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column width={8}>\r\n              <hr />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <Review\r\n                poster={posterName}\r\n                productId={productId}\r\n                isForShop={false}\r\n                shopId={shop.id}\r\n              />\r\n              <hr />\r\n              {this.state.productRatings.map((rating) => {\r\n                return (\r\n                  <ReviewList\r\n                    poster={posterName}\r\n                    handleReply={this.handleReply}\r\n                    replyResult={replyResult}\r\n                    key={rating.id}\r\n                    data={rating}\r\n                  />\r\n                );\r\n              })}\r\n            </Grid.Column>\r\n            <Grid.Column width={8}></Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Footer />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nProductDetail.propTypes = {\r\n  fetchUser: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  user: state.products.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchUser })(ProductDetail);\r\n","import React, { Component } from \"react\";\r\nimport ErrorPage from \"./errorPage\";\r\nimport NavBar from \"./NavBar\";\r\nimport { Grid, Image, Message, Container } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LISTING_URL, TEMP_ID } from \"../utility/global\";\r\n\r\nexport default class PaymentSuccess extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {};\r\n  componentDidMount = async () => {\r\n    localStorage.removeItem(TEMP_ID);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Container>\r\n          <Grid style={{ marginTop: 70 }} columns=\"equal\">\r\n            <Grid.Column></Grid.Column>\r\n            <Grid.Column width={8}>\r\n              <Image\r\n                style={{\r\n                  display: \"block\",\r\n                  marginLeft: \"auto\",\r\n                  marginRight: \"auto\",\r\n                  width: \"50%\",\r\n                }}\r\n                src=\"/images/payment.png\"\r\n              />\r\n            </Grid.Column>\r\n            <Grid.Column></Grid.Column>\r\n          </Grid>\r\n          <Grid columns=\"equal\">\r\n            <Grid.Column></Grid.Column>\r\n            <Grid.Column width={12}>\r\n              <Message info style={{ textAlign: \"center\" }}>\r\n                <Message.Header>Your payment was successful.</Message.Header>\r\n                <Message.Content>\r\n                  Thank you for your payment, an automated payment receipt will\r\n                  be sent to your email.\r\n                </Message.Content>\r\n                <p>\r\n                  <Link style={{ color: \"red\" }} to={`${LISTING_URL}`}>\r\n                    Back to Listing{\" \"}\r\n                  </Link>\r\n                </p>\r\n              </Message>\r\n            </Grid.Column>\r\n            <Grid.Column></Grid.Column>\r\n          </Grid>\r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  DEFAULT_USER,\r\n  DEFAULT_BANNER,\r\n  DEFAULT_LOGO,\r\n  USER_ORDER_URL,\r\n  MY_ACCOUNT,\r\n  LISTING_URL,\r\n  LOGIN_URL,\r\n  logout,\r\n  \r\n} from \"../utility/global\";\r\n\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addUser } from \"../actions/productActions\";\r\nimport {\r\n  Container,\r\n  Dropdown,\r\n  Icon,\r\n  DropDown,\r\n  Image,\r\n  List,\r\n  Menu,\r\n  Segment,\r\n  Visibility,\r\n  Breadcrumb,\r\n} from \"semantic-ui-react\";\r\nimport clientService from \"../services/clientService\";\r\nclass NavBarCustomerDash extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    firstName: \"\",\r\n    avatar: DEFAULT_USER,\r\n    role: \"\",\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.props.addUser();\r\n  };\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.user) {\r\n      const { firstName, photo, role } = nextProps.user;\r\n      this.setState({\r\n        firstName: firstName,\r\n        role: role,\r\n        avatar: photo ? `${photo}` : DEFAULT_USER,\r\n      });\r\n    }\r\n  }\r\n  handlerLogout = async (e) => {\r\n    e.preventDefault();\r\n    logout();\r\n    this.props.history.push(LOGIN_URL);\r\n  };\r\n  handlerOrder = async (e) => {\r\n    e.preventDefault();\r\n    this.props.history.push(USER_ORDER_URL);\r\n  };\r\n\r\n  handlerAccount = async (e) => {\r\n    e.preventDefault();\r\n    this.props.history.push(MY_ACCOUNT);\r\n  };\r\n  render() {\r\n    const { firstName, avatar } = this.state;\r\n    \r\n\r\n    const styles = { color: \"black\" };\r\n    const options = [\r\n      {\r\n        key: \"user\",\r\n        text: (\r\n          <Link style={styles} to={`${MY_ACCOUNT}`}>\r\n            Your Account\r\n          </Link>\r\n        ),\r\n        icon: \"user\",\r\n      },\r\n      {\r\n        key: \"settings\",\r\n        text: (\r\n          <Link style={styles} to={`${USER_ORDER_URL}`}>\r\n            Your orders\r\n          </Link>\r\n        ),\r\n        icon: \"clipboard outline\",\r\n      },\r\n      {\r\n        key: \"sign-out\",\r\n        text: (\r\n          <a onClick={this.logout} style={styles}>\r\n            Logout\r\n          </a>\r\n        ),\r\n        icon: \"sign out\",\r\n      },\r\n    ];\r\n    const trigger = (\r\n      <span>\r\n        <Image avatar src={avatar} />\r\n        {firstName}\r\n      </span>\r\n    );\r\n    return (\r\n      <div>\r\n        {\" \"}\r\n        <Menu color=\"red\" fixed=\"top\" inverted>\r\n          <Menu.Item>\r\n            <img\r\n              style={{\r\n                marginRight: \"1.5em\",\r\n                height: \"35px\",\r\n                width: \"100px\",\r\n              }}\r\n              src=\"/images/foodengo_logo.png\"\r\n            />\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <Breadcrumb style={{backgroundColor:\"#db2828\"}}>\r\n              <Breadcrumb.Section link><Link to={`/`}>Home</Link></Breadcrumb.Section>\r\n              <Breadcrumb.Divider icon=\"right chevron\" />\r\n            <Breadcrumb.Section>{this.props.caption}</Breadcrumb.Section>\r\n            </Breadcrumb>\r\n          </Menu.Item>\r\n          {/* <Menu.Item>\r\n            <Link to={LISTING_URL}>Home</Link>\r\n          </Menu.Item> */}\r\n          {firstName ? (\r\n            <Menu.Menu position=\"right\">\r\n              <Dropdown item text={firstName}>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item\r\n                    onClick={this.handlerAccount}\r\n                    icon=\"user\"\r\n                    text=\"Your Account\"\r\n                  />\r\n\r\n                  <Dropdown.Item\r\n                    onClick={this.handlerOrder}\r\n                    icon=\"shopping bag\"\r\n                    text=\"Your orders\"\r\n                  />\r\n\r\n                  <Dropdown.Item\r\n                    onClick={this.handlerLogout}\r\n                    icon=\"sign out alternate\"\r\n                    text=\"Logout\"\r\n                  />\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Menu.Menu>\r\n          ) : (\r\n            <Menu.Item position=\"right\">\r\n              <Link to={LOGIN_URL}>Log In</Link>\r\n            </Menu.Item>\r\n          )}\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nNavBarCustomerDash.propTypes = {\r\n  addUser: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  user: state.products.user,\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { addUser })(NavBarCustomerDash)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport Listing from \"./widgets/Listing\";\r\nimport SideMenu from \"../adminComponents/common/sideMenu\";\r\nimport StoreCard from \"./widgets/storeCard\";\r\nimport ProductCard from \"./widgets/ItemCard\";\r\nimport clientService from \"../services/clientService\";\r\nimport NavBar from \"./NavBarCustomerDash\";\r\nimport Footer from \"./Footer\";\r\nimport Slider from \"react-slick\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { fetchUser } from \"../actions/productActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  DEFAULT_STORE_BANNER,\r\n  DEFAULT_STORE_LOGO,\r\n  totalRating,\r\n  displayRating,\r\n  SERVER_URL,\r\n  ENDPOINT,\r\n  formatPrice,\r\n  storeNextOpening,\r\n} from \"../utility/global\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  Grid,\r\n  Image,\r\n  Item,\r\n  Label,\r\n  Header,\r\n  Rating,\r\n  Select,\r\n  Input,\r\n  Card,\r\n  List,\r\n  Search,\r\n  Table,\r\n  Segment,\r\n  Loader,\r\n  Dimmer,\r\n  Container,\r\n  Message,\r\n} from \"semantic-ui-react\";\r\nimport Moment from \"react-moment\";\r\nimport moment from \"moment\";\r\nconst imageUrl = `${ENDPOINT}uploads`;\r\nclass CustomerOrder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  state = {\r\n    orders: [],\r\n    hasData: false,\r\n    activeIndex: 1,\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.props.fetchUser();\r\n  };\r\n  componentWillReceiveProps = async (nextProps) => {\r\n    if (nextProps) {\r\n      const { user } = nextProps;\r\n\r\n      const result = await clientService.transactionByUser({\r\n        userId: user.id,\r\n      });\r\n      this.setState({ orders: result.data.data });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { activeIndex, orders, isSeller } = this.state;\r\n    let indexCounter = 0;\r\n    return (\r\n      <>\r\n        <Container>\r\n          <NavBar caption={`My Orders`} />\r\n\r\n          <Grid style={{ paddingTop: 100 }} stackable>\r\n            <Grid.Column width={4}>\r\n              <SideMenu />\r\n            </Grid.Column>\r\n            <Grid.Column width={12}>\r\n              {orders == null || orders.length == 0 ? (\r\n                <Message style={{textAlign:\"center\"}} floating>You have made no orders yet.</Message>\r\n              ) : (\r\n                <Table color=\"red\">\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      <Table.HeaderCell>Ref. No</Table.HeaderCell>\r\n                      <Table.HeaderCell>Date</Table.HeaderCell>\r\n                      <Table.HeaderCell>Total Items</Table.HeaderCell>\r\n                      <Table.HeaderCell>Grand Total</Table.HeaderCell>\r\n                      \r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  {orders.map((order) => {\r\n                    return (\r\n                      <Table.Body>\r\n                        <Table.Row>\r\n                          <Table.Cell>{order.refNo}</Table.Cell>\r\n                          <Table.Cell>\r\n                            {\" \"}\r\n                            <Moment format=\"DD/MM/YYYY\">\r\n                              {order.createdAt}\r\n                            </Moment>{\" \"}\r\n                            {moment(order.createdAt).format(\"LT\")}\r\n                          </Table.Cell>\r\n                          <Table.Cell>{order.soldProducts.length}</Table.Cell>\r\n                          <Table.Cell>{formatPrice(order.total)}</Table.Cell>\r\n                         \r\n                        </Table.Row>\r\n                      </Table.Body>\r\n                    );\r\n                  })}\r\n                </Table>\r\n              )}\r\n            </Grid.Column>\r\n            <Grid.Column width={1}></Grid.Column>\r\n          </Grid>\r\n        </Container>\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\nCustomerOrder.propTypes = {\r\n  fetchUser: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  user: state.products.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchUser })(CustomerOrder);\r\n","import React, { Component } from \"react\";\r\nimport Listing from \"./widgets/Listing\";\r\nimport SideMenu from \"../adminComponents/common/sideMenu\";\r\nimport StoreCard from \"./widgets/storeCard\";\r\nimport ProductCard from \"./widgets/ItemCard\";\r\nimport clientService from \"../services/clientService\";\r\nimport NavBar from \"./NavBarCustomerDash\";\r\nimport Footer from \"./Footer\";\r\nimport Slider from \"react-slick\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { fetchUser } from \"../actions/productActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  DEFAULT_STORE_BANNER,\r\n  DEFAULT_STORE_LOGO,\r\n  totalRating,\r\n  displayRating,\r\n  SERVER_URL,\r\n  ENDPOINT,\r\n  formatPrice,\r\n  storeNextOpening,\r\n} from \"../utility/global\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  Grid,\r\n  Image,\r\n  Item,\r\n  Label,\r\n  Header,\r\n  Rating,\r\n  Select,\r\n  Input,\r\n  Card,\r\n  List,\r\n  Search,\r\n  Table,\r\n  Segment,\r\n  Loader,\r\n  Dimmer,\r\n  Container,\r\n  Message,\r\n  Form,\r\n  Dropdown,\r\n} from \"semantic-ui-react\";\r\nimport Moment from \"react-moment\";\r\nimport moment from \"moment\";\r\nconst imageUrl = `${ENDPOINT}uploads`;\r\nclass CustomerAccount extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  state = {\r\n    city: [],\r\n    selectedCity: \"\",\r\n    showAlert: false,\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    firstAddress: \"\",\r\n    secondAddress: \"\",\r\n    postCode: \"\",\r\n    message: \"\",\r\n    cityText: \"\",\r\n    userId: \"\",\r\n\r\n    //selectedDateStart: new Date(\"2014-08-18T21:11:54\").setHours(10, 0, 0),\r\n    //selectedDateEnd: new Date(\"2014-08-18T21:11:54\").setHours(20, 0, 0),\r\n  };\r\n  componentWillReceiveProps = async (nextProps) => {\r\n    if (nextProps) {\r\n      const user = nextProps.user;\r\n      if (user) {\r\n        clientService\r\n          .findUserById(user.id)\r\n          .then((response) => {\r\n            const data = response.data.data;\r\n            const {\r\n              id,\r\n              firstName,\r\n              lastName,\r\n              email,\r\n              firstAddress,\r\n              secondAddress,\r\n              postCode,\r\n              cityId,\r\n              City,\r\n            } = data;\r\n\r\n            this.setState({\r\n              firstName,\r\n              lastName,\r\n              email,\r\n              firstAddress,\r\n              secondAddress,\r\n              postCode,\r\n              userId: user.id,\r\n              selectedCity: cityId,\r\n              cityText: City ? City.name : \"City\",\r\n            });\r\n          })\r\n          .catch((err) => {\r\n            //console.log(err);\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    clientService\r\n      .cities()\r\n      .then((response) => {\r\n        let cities = response.data.data.map((city) => {\r\n          return {\r\n            key: city.id,\r\n            value: city.id,\r\n            text: city.name,\r\n          };\r\n        });\r\n        this.setState({\r\n          city: [{ value: \"\", text: \"--Select city--\" }].concat(cities),\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        //console.log(err);\r\n      });\r\n  };\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  onChangeDropdown = (e, data) => {\r\n    this.setState({\r\n      [data.name]: data.value,\r\n    });\r\n  };\r\n\r\n  onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      firstAddress,\r\n      secondAddress,\r\n      postCode,\r\n      selectedCity,\r\n      userId,\r\n    } = this.state;\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"firstName\", firstName);\r\n    formData.append(\"lastName\", lastName);\r\n    formData.append(\"email\", email);\r\n    formData.append(\"firstAddress\", firstAddress);\r\n    formData.append(\"secondAddress\", secondAddress);\r\n    formData.append(\"postCode\", postCode);\r\n    formData.append(\"cityId\", selectedCity);\r\n    \r\n    clientService\r\n      .userUpdate(userId, formData)\r\n      .then((response) => {\r\n        this.setState({\r\n          showAlert: true,\r\n          message: response.data.message,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        const message = err.response.data.message;\r\n\r\n        this.setState({ showAlert: true, message: message });\r\n      });\r\n  };\r\n  render() {\r\n    const userAlert = this.state.showAlert ? (\r\n      <div className=\"ui info message\">\r\n        <p>{this.state.message}</p>\r\n      </div>\r\n    ) : (\r\n      \"\"\r\n    );\r\n\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      firstAddress,\r\n      secondAddress,\r\n      selectedCity,\r\n      postCode,\r\n      city,\r\n      cityText,\r\n    } = this.state;\r\n    return (\r\n      <>\r\n        <Container>\r\n          <NavBar caption={`My Account`} />\r\n\r\n          <Grid style={{ paddingTop: 100 }} stackable>\r\n            <Grid.Column width={4}>\r\n              <SideMenu />\r\n            </Grid.Column>\r\n            <Grid.Column width={12}>\r\n              <Message attached header=\"Personal details\" />\r\n              <Form\r\n                className=\"attached fluid segment\"\r\n                style={{\r\n                  width: \"auto\",\r\n                  margin: \"auto\",\r\n                  height: \"auto\",\r\n                  padding: 13,\r\n                }}\r\n                onSubmit={this.onSubmit}\r\n              >\r\n                {userAlert}\r\n\r\n                <Form.Group widths=\"equal\">\r\n                  <Form.Field>\r\n                    <label>First name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      required\r\n                      value={firstName}\r\n                      name=\"firstName\"\r\n                      onChange={this.onChange}\r\n                      placeholder=\"First name\"\r\n                    />\r\n                  </Form.Field>\r\n\r\n                  <Form.Field>\r\n                    <label>Last name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      required\r\n                      value={lastName}\r\n                      name=\"lastName\"\r\n                      onChange={this.onChange}\r\n                      placeholder=\"Last name\"\r\n                    />\r\n                  </Form.Field>\r\n                </Form.Group>\r\n                <Form.Field>\r\n                  <label>Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    required\r\n                    readOnly\r\n                    value={email}\r\n                    name=\"email\"\r\n                    onChange={this.onChange}\r\n                    placeholder=\"Email\"\r\n                  />\r\n                </Form.Field>\r\n\r\n                <hr />\r\n\r\n                <Message floating content=\"Delivery Address\" />\r\n                <Form.Field>\r\n                  <label>Address 1</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    required\r\n                    value={firstAddress}\r\n                    name=\"firstAddress\"\r\n                    onChange={this.onChange}\r\n                    placeholder=\"Address 1\"\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Address 2</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={secondAddress}\r\n                    name=\"secondAddress\"\r\n                    onChange={this.onChange}\r\n                    placeholder=\"Address 2\"\r\n                  />\r\n                </Form.Field>\r\n                <Form.Group widths=\"equal\">\r\n                  <Form.Field>\r\n                    <input\r\n                      type=\"text\"\r\n                      required\r\n                      value={postCode}\r\n                      name=\"postCode\"\r\n                      onChange={this.onChange}\r\n                      placeholder=\"Post code\"\r\n                    />\r\n                  </Form.Field>\r\n\r\n                  <Dropdown\r\n                    required\r\n                    fluid\r\n                    selection\r\n                    search\r\n                    defaultValue={selectedCity}\r\n                    name=\"selectedCity\"\r\n                    label=\"City\"\r\n                    placeholder={cityText}\r\n                    options={city}\r\n                    onChange={this.onChangeDropdown}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Button color=\"red\" type=\"submit\">\r\n                  Save <Icon name=\"save\" />\r\n                </Button>\r\n              </Form>\r\n              <br />\r\n              <br />\r\n            </Grid.Column>\r\n            <Grid.Column width={1}></Grid.Column>\r\n          </Grid>\r\n        </Container>\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\nCustomerAccount.propTypes = {\r\n  fetchUser: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  user: state.products.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchUser })(CustomerAccount);\r\n","import React, { Component } from \"react\";\r\nimport ErrorPage from \"./errorPage\";\r\nimport NavBar from \"./NavBar\";\r\nimport { Grid, Image, Message, Container, Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LISTING_URL, PAYMENT_URL } from \"../utility/global\";\r\n\r\nexport default class PaymentSuccess extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    tempId:\"\",\r\n    shopId:\"\"\r\n  };\r\n  componentDidMount = async () => {\r\n    const shopId = this.props.match.params.sel;\r\n    const tempId = this.props.match.params.by;\r\n\r\n    this.setState({\r\n      tempId,\r\n      shopId\r\n    })\r\n  };\r\n\r\n  render() {\r\n    const {tempId, shopId} = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Container>\r\n          <Grid style={{ marginTop: 70 }} columns=\"equal\">\r\n            <Grid.Column></Grid.Column>\r\n            <Grid.Column width={2}>\r\n              <Image\r\n                style={{\r\n                  display: \"block\",\r\n                  marginLeft: \"auto\",\r\n                  marginRight: \"auto\",\r\n                  heigth: \"100\",\r\n                  width: \"100\",\r\n                }}\r\n                src=\"/images/error.png\"\r\n              />\r\n            </Grid.Column>\r\n            <Grid.Column></Grid.Column>\r\n          </Grid>\r\n          <Grid columns=\"equal\">\r\n            <Grid.Column></Grid.Column>\r\n            <Grid.Column width={12}>\r\n              <Message error style={{ textAlign: \"center\" }}>\r\n                <Message.Header>\r\n                  {\" \"}\r\n                  We're sorry your payment didn't go through.\r\n                </Message.Header>\r\n                <Message.Content>\r\n                  You may alternatively try a different payment method by\r\n                  clicking the link below.\r\n                </Message.Content>\r\n                <Link style={{ color: \"red\" }} to={`/payment/${tempId}/${shopId}`}>\r\n                  Back to payment page{\" \"}\r\n                </Link>\r\n              </Message>\r\n\r\n              {/* <Message negative style={{ textAlign: \"center\" }}>\r\n                <Icon name=\"warning sign\" />\r\n                <Message.Header>\r\n                  We're sorry your payment could not be processed\r\n                </Message.Header>\r\n                <Message.Content>\r\n                  You may alternatively try a different payment method by\r\n                  clicking the link below.\r\n                </Message.Content>\r\n                <p>\r\n                  <Link style={{ color: \"red\" }} to={`${PAYMENT_URL}`}>\r\n                    Back to payment page{\" \"}\r\n                  </Link>\r\n                </p>\r\n              </Message> */}\r\n            </Grid.Column>\r\n            <Grid.Column></Grid.Column>\r\n          </Grid>\r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport NavBar from \"./NavBar\";\r\nimport ErrorPage from \"./errorPage\";\r\nimport {\r\n  Grid,\r\n  Image,\r\n  Message,\r\n  Container,\r\n  Button,\r\n  Form,\r\n} from \"semantic-ui-react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { LOGIN_URL } from \"../utility/global\";\r\nimport clientService from \"../services/clientService\";\r\nimport { Input } from \"@material-ui/core\";\r\nclass ApplicationSuccess extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    redirect: false,\r\n    code: \"\",\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  componentDidMount = async () => {\r\n    const id = this.props.match.params.id;\r\n    try {\r\n      const response = await clientService.hasExpiredLinkForSellerReg(id);\r\n\r\n      if (response.data.hasExpired) {\r\n        this.setState({\r\n          redirect: true,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      this.setState({\r\n        redirect: true,\r\n      });\r\n    }\r\n  };\r\n  verify = () => {\r\n    this.props.history.push(`/account_verification/${this.state.code}`);\r\n  };\r\n  render() {\r\n    const { redirect, code } = this.state;\r\n    if (redirect) {\r\n      return <ErrorPage />;\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <Container>\r\n            <Grid style={{ marginTop: 70 }} columns=\"equal\">\r\n              <Grid.Column></Grid.Column>\r\n              <Grid.Column width={8}>\r\n                <Image\r\n                  style={{\r\n                    display: \"block\",\r\n                    marginLeft: \"auto\",\r\n                    marginRight: \"auto\",\r\n                    width: 200,\r\n                    height: 50,\r\n                  }}\r\n                  src=\"/images/logo2.png\"\r\n                />\r\n              </Grid.Column>\r\n              <Grid.Column></Grid.Column>\r\n            </Grid>\r\n            <Grid columns=\"equal\">\r\n              <Grid.Column></Grid.Column>\r\n              <Grid.Column width={12}>\r\n                <Message info style={{ textAlign: \"center\" }}>\r\n                  <Message.Header>Successful Submission.</Message.Header>\r\n                  <Message.Content>\r\n                    Your application was submitted successfully, we have\r\n                    forwarded acknowledgement and verification emails to the\r\n                    email entered.{\" \"}\r\n                    <strong>\r\n                      Alternatively, to activate your account, enter a\r\n                      verification code sent to your email in the input box\r\n                      below.{\" \"}\r\n                    </strong>\r\n                  </Message.Content>\r\n                </Message>\r\n              </Grid.Column>\r\n              <Grid.Column></Grid.Column>\r\n            </Grid>\r\n            <Grid columns={3} divided>\r\n              <Grid.Row>\r\n                <Grid.Column></Grid.Column>\r\n                <Grid.Column>\r\n                  <Form>\r\n                    <Form.Input\r\n                      name=\"code\"\r\n                      onChange={this.onChange}\r\n                      label=\"Activation Code\"\r\n                      placeholder=\"Enter a 6-digit activation code\"\r\n                    />\r\n                  </Form>\r\n                  <hr></hr>\r\n\r\n                  <Button\r\n                    onClick={this.verify}\r\n                    disabled={!(code.length == 6)}\r\n                    fluid\r\n                    color=\"red\"\r\n                  >\r\n                    Activate\r\n                  </Button>\r\n                  <hr></hr>\r\n                  <a href=\"/login\">\r\n                    <Button fluid>\r\n                      Activate Later\r\n                    </Button>\r\n                  </a>\r\n                </Grid.Column>\r\n                <Grid.Column></Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Container>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default withRouter(ApplicationSuccess);\r\n","import React, { Component } from \"react\";\r\nimport ClientService from \"../services/clientService\";\r\nimport NavBar from \"./NavBar\";\r\nimport {\r\n  Grid,\r\n  Image,\r\n  Card,\r\n  Header,\r\n  Button,\r\n  Form,\r\n  Message,\r\n} from \"semantic-ui-react\";\r\nimport ErrorPage from \"./errorPage\";\r\nimport ReviewList from \"./widgets/reviewList\";\r\nimport Footer from \"./Footer\";\r\n\r\nimport {\r\n  DEFAULT_USER,\r\n  DEFAULT_BANNER,\r\n  DEFAULT_LOGO,\r\n  totalRating,\r\n  displayRating,\r\n  getTempId,\r\n} from \"../utility/global\";\r\nimport clientService from \"../services/clientService\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nexport default class DeliveryDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    tempId: \"\",\r\n    shopId: \"\",\r\n    redirect: false,\r\n    message: \"\",\r\n    firstAddress: \"\",\r\n    secondAddress: \"\",\r\n    postCode: \"\",\r\n    phone: \"\",\r\n  };\r\n  componentDidMount = async () => {\r\n    try {\r\n      const shopId = this.props.match.params.sel;\r\n      const tempId = this.props.match.params.by;\r\n      this.setState({\r\n        shopId,\r\n        tempId,\r\n      });\r\n      const getCart = await clientService.getCartByTempId({\r\n        shopId,\r\n        tempId: getTempId(),\r\n      });\r\n      const data = getCart.data.data;\r\n\r\n      if (!data)\r\n        this.setState({\r\n          redirect: true,\r\n        });\r\n      const result = await clientService.hasAuth();\r\n      const auth = result.data.data;\r\n\r\n      if (auth) {\r\n        const user = await clientService.findUserById(auth.id);\r\n        const { firstAddress, secondAddress, postCode, phone } = user.data.data;\r\n\r\n        this.setState({\r\n          firstAddress,\r\n          secondAddress,\r\n          postCode,\r\n          phone,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      this.setState({\r\n        redirect: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = async () => {\r\n    const {\r\n      tempId,\r\n      shopId,\r\n      firstAddress,\r\n      secondAddress,\r\n      postCode,\r\n      message,\r\n      phone,\r\n    } = this.state;\r\n    const paymentProceed = await clientService.orderMessage({\r\n      tempId,\r\n      shopId,\r\n      message,\r\n    });\r\n\r\n    if (!paymentProceed.data.error) {\r\n      const updateAddress = await clientService.updateUserAddress({\r\n        firstAddress,\r\n        secondAddress,\r\n        postCode,\r\n        phone,\r\n      });\r\n     \r\n      this.props.history.push(`/payment/${getTempId()}/${shopId}`);\r\n    } else {\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { redirect, shopId } = this.state;\r\n    if (redirect) {\r\n      return <ErrorPage />;\r\n    } else {\r\n      const { firstAddress, secondAddress, postCode, phone } = this.state;\r\n      return (\r\n        <React.Fragment>\r\n          <NavBar />\r\n\r\n          <Grid style={{ margin: 70 }} stackable>\r\n            <Grid.Column width={5}></Grid.Column>\r\n            <Grid.Column width={6}>\r\n              <Message\r\n                style={{ textAlign: \"center\" }}\r\n                attached\r\n                header=\"Delivery Details\"\r\n              />\r\n              <Form\r\n                onSubmit={this.handleSubmit}\r\n                className=\"attached fluid segment\"\r\n              >\r\n                <Form.Field>\r\n                  <label>Mobile number</label>\r\n                  <input\r\n                    value={phone}\r\n                    name=\"phone\"\r\n                    onChange={this.onChange}\r\n                    \r\n                    placeholder=\"Mobile number\"\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field required>\r\n                  <label>Address line 1</label>\r\n                  <input\r\n                    value={firstAddress}\r\n                    name=\"firstAddress\"\r\n                    onChange={this.onChange}\r\n                    required\r\n                    placeholder=\"Address line 1\"\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Address line 2</label>\r\n                  <input\r\n                    value={secondAddress}\r\n                    name=\"secondAddress\"\r\n                    onChange={this.onChange}\r\n                    placeholder=\"Address line 2\"\r\n                  />\r\n                </Form.Field>\r\n\r\n                <Form.Field required>\r\n                  <label>Post code</label>\r\n                  <input\r\n                    value={postCode}\r\n                    name=\"postCode\"\r\n                    onChange={this.onChange}\r\n                    required\r\n                    placeholder=\"Post code\"\r\n                  />\r\n                </Form.Field>\r\n                <hr />\r\n                <Message info>\r\n                  <p>\r\n                    Leave a note Contact-free delivery is now applied to all\r\n                    orders. If your order includes alcohol please have your ID\r\n                    ready for contact-free verification. Tell us about any\r\n                    special delivery instructions below. Do not include details\r\n                    about any allergies.\r\n                  </p>\r\n                </Message>\r\n                <Form.TextArea\r\n                  onChange={this.onChange}\r\n                  name=\"message\"\r\n                  label=\"Leave a note\"\r\n                  placeholder=\"Eg. Please leave my order outside the door\"\r\n                />\r\n                <Button type=\"submit\" fluid primary>\r\n                  Go to payment\r\n                </Button>\r\n              </Form>\r\n            </Grid.Column>\r\n            <Grid.Column width={5}></Grid.Column>\r\n          </Grid>\r\n          <Footer/>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Nav from \"../adminComponents/common/nav\";\r\nimport SideMenu from \"../adminComponents/common/sideMenu\";\r\nimport ClientService from \"../services/clientService\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport clientService from \"../services/clientService\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  MISSING_USER_MSG,\r\n  DEFAULT_BANNER,\r\n  toastOptions,\r\n  DEFAULT_LOGO,\r\n  scrollToTop,\r\n} from \"../utility/global\";\r\nimport {\r\n  Button,\r\n  Dropdown,\r\n  Form,\r\n  Image,\r\n  Message,\r\n  Input,\r\n  Header,\r\n  Container,\r\n  List,\r\n} from \"semantic-ui-react\";\r\nimport AfterNav from \"../adminComponents/common/afterNav\";\r\nimport Icon from \"react-icons-kit\";\r\n//import \"date-fns\";\r\n//import MomentUtils from \"@date-io/moment\";\r\n\r\nexport default class ShopCreate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  state = {\r\n    shopName: \"\",\r\n    initialShopName: \"\",\r\n    hasError: false,\r\n    message: \"\",\r\n    selectedCity: \"\",\r\n    city: [],\r\n    hasShop: false,\r\n    firstAddress: \"\",\r\n    postCode: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    disabled: false,\r\n    cityText: \"City\",\r\n    loading: false,\r\n    isDuplicateName: false,\r\n    emailMessage: \"\",\r\n    isDuplicateEmail: false,\r\n    origin: [],\r\n    originText: \"\",\r\n    selectedOrigin: \"\",\r\n    isValidationError: false,\r\n    validationMsg: \"\",\r\n    loadingOrigin: true,\r\n    loadingCity: true,\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    const originResponse = await ClientService.origins();\r\n    this.setState({\r\n      loadingOrigin:false\r\n    })\r\n    let origins = originResponse.data.data.map((origin) => {\r\n      return {\r\n        key: origin.id,\r\n        value: origin.id,\r\n        text: origin.name,\r\n      };\r\n    });\r\n    this.setState({\r\n      origin: [{ key: \"\", text: \"--Select food origin--\" }].concat(origins),\r\n    });\r\n    const cityResponse = await ClientService.cities();\r\n    this.setState({\r\n      loadingCity:false\r\n    })\r\n    let cities = cityResponse.data.data.map((city) => {\r\n      return {\r\n        key: city.id,\r\n        value: city.id,\r\n        text: city.name,\r\n      };\r\n    });\r\n    this.setState({\r\n      city: [{ value: \"\", text: \"--Select city--\" }].concat(cities),\r\n    });\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  onChangeDropdown = (e, data) => {\r\n    this.setState({\r\n      [data.name]: data.value,\r\n    });\r\n  };\r\n\r\n  onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const {\r\n      firstAddress,\r\n      lastName,\r\n      email,\r\n      phone,\r\n      firstName,\r\n      postCode,\r\n      password,\r\n      shopName,\r\n      selectedCity,\r\n      selectedOrigin,\r\n    } = this.state;\r\n\r\n    try {\r\n      if (selectedOrigin == \"\" || selectedCity == \"\") {\r\n        this.setState({\r\n          validationMsg: \"City and origin are required\",\r\n          isValidationError: true,\r\n        });\r\n        scrollToTop();\r\n      } else {\r\n        this.setState({\r\n          loading: true,\r\n          disabled: true,\r\n        });\r\n        const response = await clientService.createShop({\r\n          firstAddress,\r\n          lastName,\r\n          email,\r\n          phone,\r\n          firstName,\r\n          postCode,\r\n          password,\r\n          shopName,\r\n          cityId: selectedCity,\r\n          originId: selectedOrigin,\r\n        });\r\n\r\n        if (response.data.error) {\r\n          toast.success(response.data.message, toastOptions(true));\r\n          this.setState({\r\n            loading: false,\r\n          });\r\n        } else {\r\n          this.props.history.push(\r\n            `/food_vendor/application-success/${response.data.id}`\r\n          );\r\n        }\r\n      }\r\n    } catch (err) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  onBlur = async (e) => {\r\n    const { shopName } = this.state;\r\n    if (e.target.name == \"shopName\") {\r\n      const response = await clientService.findShopByName({ shopName });\r\n\r\n      if (response.data) {\r\n        this.setState({\r\n          disabled: true,\r\n          isDuplicateName: true,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          disabled: false,\r\n          isDuplicateName: false,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  onHandleTelephoneChange = (e) => {\r\n    let phone = e.target.value;\r\n\r\n    if (!Number(phone) && phone !== \"\") {\r\n      return;\r\n    }\r\n    this.setState({\r\n      [e.target.name]: phone,\r\n    });\r\n  };\r\n  onBlurEmail = (e) => {\r\n    const { email } = this.state;\r\n\r\n    clientService.findEmail({ email }).then((response) => {\r\n      const { hasEmail, message } = response.data;\r\n      if (hasEmail) {\r\n        this.setState({\r\n          disabled: true,\r\n          emailMessage: message,\r\n          isDuplicateEmail: true,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          disabled: false,\r\n          isDuplicateEmail: false,\r\n        });\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const {\r\n      shopName,\r\n      shopUrl,\r\n      logoPreviewUrl,\r\n      hasShop,\r\n      bannerPreviewUrl,\r\n      firstAddress,\r\n      secondAddress,\r\n      postCode,\r\n      selectedCity,\r\n      cityText,\r\n      originText,\r\n      city,\r\n      email,\r\n      disabled,\r\n      isDuplicateName,\r\n      isDuplicateEmail,\r\n      isDuplicateUrl,\r\n      loading,\r\n      emailMessage,\r\n      selectedOrigin,\r\n      origin,\r\n      isValidationError,\r\n      validationMsg,\r\n      loadingCity,\r\n      loadingOrigin\r\n    } = this.state;\r\n    const nameAlert = isDuplicateName ? (\r\n      <Message color=\"yellow\">\r\n        The vendor's name is already taken. Please choose a different one.\r\n      </Message>\r\n    ) : (\r\n      \"\"\r\n    );\r\n    const validationAlert = isValidationError ? (\r\n      <Message color=\"yellow\">{validationMsg}</Message>\r\n    ) : (\r\n      \"\"\r\n    );\r\n    const emailAlert = isDuplicateEmail ? (\r\n      <Message color=\"yellow\">{emailMessage}</Message>\r\n    ) : (\r\n      \"\"\r\n    );\r\n    const countryOptions = [\r\n      { key: \"gb\", value: \"gb\", flag: \"gb\", text: \"+44\" },\r\n    ];\r\n\r\n    return (\r\n      <Container fluid={true}>\r\n        <Row style={{ paddingTop: \"10px\" }}>\r\n          <Col lg=\"12\">\r\n            <Image fluid src=\"/images/signup.png\" />\r\n            <hr></hr>\r\n          </Col>\r\n          <Col className=\"padding\" lg=\"3\">\r\n            <Container fluid>\r\n              <Header as=\"h2\">3 Steps to get started </Header>\r\n\r\n              <List>\r\n                <List.Item icon=\"check\" content=\"Fill out the form.\" />\r\n                <List.Item icon=\"check\" content=\"Verify your email address.\" />\r\n                <List.Item\r\n                  icon=\"check\"\r\n                  content=\"List food photos.\"\r\n                />\r\n              </List>\r\n            </Container>\r\n          </Col>\r\n          <Col className=\"dashboard-panel\" lg=\"6\">\r\n            <Message\r\n              warning\r\n              header=\"All fields marked with asterisk (*) are required.\"\r\n            />\r\n            <Message\r\n              attached\r\n              header=\"Food Vendor Registration Form\"\r\n              content=\"Fill out the form below to register as a vendor\"\r\n            />\r\n            <Form\r\n              className=\"attached fluid segment\"\r\n              style={{\r\n                width: \"100%\",\r\n                margin: \"auto\",\r\n                height: \"auto\",\r\n                padding: 13,\r\n              }}\r\n              onSubmit={this.onSubmit}\r\n            >\r\n              {validationAlert}\r\n              {nameAlert}\r\n              <Form.Field required>\r\n                <label>Business name</label>\r\n                <input\r\n                  className=\"capitalize\"\r\n                  type=\"text\"\r\n                  required\r\n                  value={shopName}\r\n                  onBlur={this.onBlur}\r\n                  name=\"shopName\"\r\n                  onChange={this.onChange}\r\n                  placeholder=\"Business name\"\r\n                />\r\n              </Form.Field>\r\n              <Message floating content=\"Business Phone Number\" />\r\n              <Form.Group>\r\n                <Form.Field width={2}>\r\n                  <label>Code</label>\r\n                  <Form.Input readonly value=\"+44\" />\r\n                </Form.Field>\r\n                <Form.Field width={5} required>\r\n                  <label>Phone</label>\r\n                  <input\r\n                    type=\"tel\"\r\n                    name=\"phone\"\r\n                    maxLength=\"15\"\r\n                    value={this.state.phone}\r\n                    onChange={this.onHandleTelephoneChange}\r\n                    placeholder=\"eg. 07857965032\"\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Message floating content=\"Food Origin\" />\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field required>\r\n                  <label>Food Origin</label>\r\n                  <Dropdown\r\n                    required\r\n                    fluid\r\n                    selection\r\n                    search\r\n                    defaultValue={selectedOrigin}\r\n                    name=\"selectedOrigin\"\r\n                    label=\"Food Origin\"\r\n                    placeholder=\"Food origin\"\r\n                    options={origin}\r\n                    onChange={this.onChangeDropdown}\r\n                    loading={loadingOrigin}\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Message floating content=\"Business Address\" />\r\n              <Form.Field required>\r\n                <label>Street address</label>\r\n                <input\r\n                  type=\"text\"\r\n                  required\r\n                  value={firstAddress}\r\n                  name=\"firstAddress\"\r\n                  onChange={this.onChange}\r\n                  placeholder=\"eg. 22 Moat Drive\"\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field required>\r\n                  <label>Post Code</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    required\r\n                    value={postCode}\r\n                    name=\"postCode\"\r\n                    onChange={this.onChange}\r\n                    placeholder=\"Post code\"\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field required>\r\n                  <label>City</label>\r\n                  <Dropdown\r\n                    required\r\n                    fluid\r\n                    selection\r\n                    search\r\n                    defaultValue={selectedCity}\r\n                    name=\"selectedCity\"\r\n                    label=\"City\"\r\n                    placeholder={cityText}\r\n                    options={city}\r\n                    onChange={this.onChangeDropdown}\r\n                    loading={loadingCity}\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Message floating content=\"Your Name\" />\r\n\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field required>\r\n                  <label>First name</label>\r\n                  <input\r\n                    className=\"capitalize\"\r\n                    type=\"text\"\r\n                    required\r\n                    name=\"firstName\"\r\n                    onChange={this.onChange}\r\n                    placeholder=\"First name\"\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field required>\r\n                  <label>Last name</label>\r\n                  <input\r\n                    className=\"capitalize\"\r\n                    type=\"text\"\r\n                    required\r\n                    name=\"lastName\"\r\n                    onChange={this.onChange}\r\n                    placeholder=\"Last name\"\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Message floating content=\"Login Details\" />\r\n              {emailAlert}\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field required>\r\n                  <label>Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    required\r\n                    onBlur={this.onBlurEmail}\r\n                    name=\"email\"\r\n                    onChange={this.onChange}\r\n                    placeholder=\"Email\"\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field required>\r\n                  <label>Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    required\r\n                    name=\"password\"\r\n                    onChange={this.onChange}\r\n                    placeholder=\"Password\"\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Button\r\n                loading={loading}\r\n                disabled={disabled}\r\n                color=\"red\"\r\n                type=\"submit\"\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n            <br />\r\n            <br />\r\n          </Col>\r\n          <Col className=\"padding\" lg=\"3\">\r\n            <Container fluid>\r\n              <Header as=\"h2\">What you will get</Header>\r\n\r\n              <Header icon=\"bullhorn\" color=\"red\" as=\"h4\">\r\n                <Image circular src=\"/images/foodengo_marketing.png\" /> Sales\r\n                Boost\r\n              </Header>\r\n              <p>\r\n                We will do the talking while you do the selling as we are\r\n                obliged to utilize all marketing media to reach out to your\r\n                potential customers.\r\n              </p>\r\n              <Header color=\"red\" as=\"h4\">\r\n                <Image circular src=\"/images/foodengo_camera.png\" />\r\n                Professional Photography\r\n              </Header>\r\n              <p>\r\n                When you register with Foodengo, our photography team will take\r\n                high resolution photos for your menu.\r\n              </p>\r\n              <Header color=\"red\" as=\"h4\">\r\n                <Image circular src=\"/images/foodengo_approve.png\" />\r\n                Brand Recognition\r\n              </Header>\r\n              <p>\r\n                Our customers have the perception that all vendors were\r\n                scruntinized accordingly.\r\n              </p>\r\n            </Container>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport NavBar from \"./NavBar\";\r\nimport ErrorPage from \"./errorPage\";\r\nimport { Grid, Image, Message, Container, Button } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LOGIN_URL, ERROR_MSG } from \"../utility/global\";\r\nimport clientService from \"../services/clientService\";\r\nexport default class AccountVerificationStatus extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    message: \"\",\r\n    isSuccess: false,\r\n  };\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  componentDidMount = async () => {\r\n    const code = this.props.match.params.code;\r\n    try {\r\n      const response = await clientService.storeVerification(code);\r\n\r\n      if (response.data.error) {\r\n        this.setState({\r\n          message: response.data.message,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          message: response.data.message,\r\n          isSuccess: true,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      this.setState({\r\n        message: ERROR_MSG,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { isSuccess, message } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Container>\r\n          <Grid style={{ marginTop: 70 }} columns=\"equal\">\r\n            <Grid.Column></Grid.Column>\r\n            <Grid.Column width={8}>\r\n              <Image\r\n                style={{\r\n                  display: \"block\",\r\n                  marginLeft: \"auto\",\r\n                  marginRight: \"auto\",\r\n                  width: 200,\r\n                  height: 50,\r\n                }}\r\n                src=\"/images/logo2.png\"\r\n              />\r\n            </Grid.Column>\r\n            <Grid.Column></Grid.Column>\r\n          </Grid>\r\n          <Grid columns=\"equal\">\r\n            <Grid.Column></Grid.Column>\r\n            <Grid.Column width={12}>\r\n              <Message info style={{ textAlign: \"center\" }}>\r\n                <Message.Header>\r\n                  {isSuccess ? \"Congratulations!\" : \"Invalid Activation\"}\r\n                </Message.Header>\r\n                <Message.Content>\r\n                  {this.state.message}\r\n                  <br />\r\n                  <br />\r\n\r\n                  {isSuccess ? (\r\n                    <Link to={LOGIN_URL}>\r\n                      {\" \"}\r\n                      <Button color=\"red\" size=\"large\">\r\n                        Login\r\n                      </Button>\r\n                    </Link>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </Message.Content>\r\n              </Message>\r\n            </Grid.Column>\r\n            <Grid.Column></Grid.Column>\r\n          </Grid>\r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport SideMenu from \"./common/sideMenu\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport Nav from \"./common/nav\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Icon,\r\n  Table,\r\n  Accordion,\r\n  Message,\r\n} from \"semantic-ui-react\";\r\nimport AfterNav from \"./common/afterNav\";\r\nimport { MISSING_USER_MSG, ERROR_MSG, formatPrice } from \"../utility/global\";\r\nimport clientService from \"../services/clientService\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchUser } from \"../actions/productActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Moment from \"react-moment\";\r\nimport moment from \"moment\";\r\n\r\nclass UserOrder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      orders: [],\r\n      hasData: false,\r\n      activeIndex: 1,\r\n      isSeller: false,\r\n    };\r\n  }\r\n  handleClick = (e, titleProps) => {\r\n    const { index } = titleProps;\r\n    const { activeIndex } = this.state;\r\n    const newIndex = activeIndex === index ? -1 : index;\r\n\r\n    this.setState({ activeIndex: newIndex });\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.props.fetchUser();\r\n  };\r\n  componentWillReceiveProps = async (nextProps) => {\r\n    if (nextProps) {\r\n      const { user } = nextProps;\r\n     \r\n      if (user.role == \"Customer\") {\r\n        const result = await clientService.transactionByUser({\r\n          userId: user.id,\r\n        });\r\n        this.setState({ orders: result.data.data });\r\n        \r\n      } else {\r\n        const result = await clientService.transactionByShop({\r\n          shopId: user.shopId,\r\n        });\r\n        this.setState({ orders: result.data.data, isSeller: true });\r\n        \r\n      }\r\n    }\r\n  };\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  render() {\r\n    const { activeIndex, orders, isSeller } = this.state;\r\n    let indexCounter = 0;\r\n    \r\n    return (\r\n      <Fragment>\r\n        <Container fluid={true}>\r\n          <Nav />\r\n          <AfterNav form={\"Order List\"} />\r\n          <hr></hr>\r\n          <Row className=\"dash-layout\">\r\n            <Col lg=\"2\">\r\n              <SideMenu />\r\n            </Col>\r\n\r\n            <Col lg=\"1\"></Col>\r\n\r\n            <Col className=\"dashboard-panel\" lg=\"6\">\r\n              {orders == null || orders.length == 0 ? (\r\n                <Message style={{ textAlign: \"center\" }} floating>\r\n                  <Message.Header>You currently have no orders.</Message.Header>\r\n                </Message>\r\n              ) : (\r\n                <Table color=\"red\" >\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      <Table.HeaderCell>Ref. No</Table.HeaderCell>\r\n                      <Table.HeaderCell>Date</Table.HeaderCell>\r\n                      <Table.HeaderCell>Total Items</Table.HeaderCell>\r\n                      <Table.HeaderCell>Grand Total</Table.HeaderCell>\r\n                      <Table.HeaderCell></Table.HeaderCell>\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  {orders.map((order) => {\r\n                    return (<Table.Body>\r\n                      <Table.Row>\r\n                        <Table.Cell>{order.refNo}</Table.Cell>\r\n                        <Table.Cell>\r\n                          {\" \"}\r\n                          <Moment format=\"DD/MM/YYYY\">{order.createdAt}</Moment> {moment(order.createdAt).format(\"LT\")}\r\n                        </Table.Cell>\r\n                        <Table.Cell>{order.soldProducts.length}</Table.Cell>\r\n                        <Table.Cell>{formatPrice(order.total)}</Table.Cell>\r\n                        <Table.Cell><a target=\"_blank\" href={`/user/order/${order.id}`}><Icon color=\"red\" name=\"external alternate\"/></a></Table.Cell>\r\n                      </Table.Row>\r\n                     \r\n                    </Table.Body>);\r\n                  })}\r\n                </Table>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nUserOrder.propTypes = {\r\n  fetchUser: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  user: state.products.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchUser })(UserOrder);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport SideMenu from \"./common/sideMenu\";\r\nimport ErrorPage from \"../components/errorPage\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport Nav from \"./common/nav\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Icon,\r\n  Table,\r\n  Grid,\r\n  Image,\r\n  Message,\r\n} from \"semantic-ui-react\";\r\nimport AfterNav from \"./common/afterNav\";\r\nimport { MISSING_USER_MSG, ERROR_MSG, formatPrice } from \"../utility/global\";\r\nimport clientService from \"../services/clientService\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchUser } from \"../actions/productActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Moment from \"react-moment\";\r\n\r\nclass OrderDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      order: {},\r\n      hasData: false,\r\n      isSeller: false,\r\n      items: [],\r\n      redirect: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    try {\r\n      this.props.fetchUser();\r\n      const orderId = this.props.match.params.id;\r\n      const result = await clientService.transactionById(orderId);\r\n      const order = result.data.data;\r\n\r\n      if (!order) {\r\n        this.setState({\r\n          redirect: true,\r\n        });\r\n      }\r\n\r\n      this.setState({\r\n        order: order,\r\n        items: order.soldProducts,\r\n      });\r\n    } catch (err) {\r\n      this.setState({\r\n        redirect: true,\r\n      });\r\n    }\r\n  };\r\n  componentWillReceiveProps = async (nextProps) => {\r\n    if (nextProps) {\r\n      const { user } = nextProps;\r\n      if (user.role == \"Customer\") {\r\n      } else {\r\n        this.setState({ isSeller: true });\r\n      }\r\n    }\r\n  };\r\n  print = (e) => {\r\n    window.print();\r\n  };\r\n  render() {\r\n    const { order, items, redirect } = this.state;\r\n    if (redirect) {\r\n      return <ErrorPage />;\r\n    } else {\r\n      return (\r\n        <Fragment>\r\n          <Container fluid={true}>\r\n            <Row className=\"dash-layout\">\r\n              <Col lg=\"2\"></Col>\r\n\r\n              <Col\r\n                style={{\r\n                  backgroundColor: \"white\",\r\n                  padding: 20,\r\n                  marginTop: 40,\r\n                  marginBottom: 20,\r\n                }}\r\n                lg=\"8\"\r\n              >\r\n                <Grid>\r\n                  <Grid.Column floated=\"left\" width={5}>\r\n                    <Image src=\"/images/onelogo.png\" />\r\n                  </Grid.Column>\r\n                  <Grid.Column floated=\"right\" width={5}>\r\n                    <h1>Receipt</h1>\r\n                  </Grid.Column>\r\n                </Grid>\r\n                <hr />\r\n                <Grid>\r\n                  <Grid.Column floated=\"left\" width={5}>\r\n                    <strong>Date:</strong>\r\n                    <Moment format=\"DD/MM/YYYY\">{order.createdAt}</Moment>\r\n                  </Grid.Column>\r\n                  <Grid.Column floated=\"right\" width={5}>\r\n                    <strong>Ref No: </strong>\r\n                    {order.refNo}\r\n                  </Grid.Column>\r\n                </Grid>\r\n                <hr></hr>\r\n                <Grid>\r\n                  <Grid.Column floated=\"left\" width={5}>\r\n                    <h4>Delivery Address</h4>\r\n                    {order.User ? order.User.firstAddress : \"\"}\r\n                    <br />\r\n                    <br />\r\n                    {order.User ? order.User.postCode : \"\"}\r\n                  </Grid.Column>\r\n                  <Grid.Column floated=\"right\" width={5}>\r\n                    <h4>Seller's Details</h4>\r\n                    {order.VirtualShop ? order.VirtualShop.shopName : \"\"}\r\n                    <br />\r\n                    <br />\r\n                    {order.VirtualShop ? order.VirtualShop.firstAddress : \"\"}\r\n                    <br />\r\n                    <br />\r\n                    {order.VirtualShop ? order.VirtualShop.postCode : \"\"}\r\n                    <br />\r\n                    <br />\r\n                  </Grid.Column>\r\n                </Grid>\r\n                <div style={{ padding: 50 }}>\r\n                  {order.message ? (\r\n                    <Message\r\n                      info\r\n                      icon=\"envelope open outline\"\r\n                      header=\"Delivery Message\"\r\n                      content={order.message}\r\n                    />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n\r\n                  <Table singleLine stackable>\r\n                    <Table.Header>\r\n                      <Table.Row>\r\n                        <Table.HeaderCell>Quantity</Table.HeaderCell>\r\n                        <Table.HeaderCell>Name</Table.HeaderCell>\r\n                        <Table.HeaderCell>price</Table.HeaderCell>\r\n                        <Table.HeaderCell>Total</Table.HeaderCell>\r\n                      </Table.Row>\r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                      {items.map((item) => {\r\n                        return (\r\n                          <Table.Row>\r\n                            <Table.Cell>{item.quantity}</Table.Cell>\r\n                            <Table.Cell>{item.name}</Table.Cell>\r\n                            <Table.Cell>{formatPrice(item.price)}</Table.Cell>\r\n                            <Table.Cell>{formatPrice(item.total)}</Table.Cell>\r\n                          </Table.Row>\r\n                        );\r\n                      })}\r\n                    </Table.Body>\r\n                    <Table.Footer>\r\n                      <Table.Row>\r\n                        <Table.HeaderCell></Table.HeaderCell>\r\n                        <Table.HeaderCell></Table.HeaderCell>\r\n                        <Table.HeaderCell></Table.HeaderCell>\r\n                        <Table.HeaderCell></Table.HeaderCell>\r\n                      </Table.Row>\r\n                      <Table.Row>\r\n                        <Table.HeaderCell></Table.HeaderCell>\r\n                        <Table.HeaderCell></Table.HeaderCell>\r\n                        <Table.HeaderCell>\r\n                          <h4>Delivery: </h4>\r\n                        </Table.HeaderCell>\r\n                        <Table.HeaderCell>\r\n                          {formatPrice(order.deliveryPrice)}\r\n                        </Table.HeaderCell>\r\n                      </Table.Row>\r\n                      <Table.Row>\r\n                        <Table.HeaderCell></Table.HeaderCell>\r\n                        <Table.HeaderCell></Table.HeaderCell>\r\n                        <Table.HeaderCell>\r\n                          <h4>Discount: </h4>\r\n                        </Table.HeaderCell>\r\n                        <Table.HeaderCell>\r\n                          {formatPrice(order.offerDiscount)}\r\n                        </Table.HeaderCell>\r\n                      </Table.Row>\r\n                      <Table.Row>\r\n                        <Table.HeaderCell></Table.HeaderCell>\r\n                        <Table.HeaderCell></Table.HeaderCell>\r\n                        <Table.HeaderCell>\r\n                          <h4>Subtotal: </h4>\r\n                        </Table.HeaderCell>\r\n                        <Table.HeaderCell>\r\n                          {formatPrice(order.subTotal)}\r\n                        </Table.HeaderCell>\r\n                      </Table.Row>\r\n                      <Table.Row>\r\n                        <Table.HeaderCell></Table.HeaderCell>\r\n                        <Table.HeaderCell></Table.HeaderCell>\r\n                        <Table.HeaderCell>\r\n                          <h4>Total: </h4>\r\n                        </Table.HeaderCell>\r\n                        <Table.HeaderCell>\r\n                          {formatPrice(order.total)}\r\n                        </Table.HeaderCell>\r\n                      </Table.Row>\r\n                    </Table.Footer>\r\n                  </Table>\r\n                  <p style={{ textAlign: \"center\" }}>\r\n                    <strong>NOTE </strong>: This is a computer generated receipt\r\n                    and does not require a physical signature.\r\n                  </p>\r\n                  <hr></hr>\r\n                  <Button color=\"red\" onClick={this.print}>\r\n                    Print <Icon name=\"print\" />\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n              <Col lg=\"2\"></Col>\r\n            </Row>\r\n          </Container>\r\n        </Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\nOrderDetail.propTypes = {\r\n  fetchUser: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  user: state.products.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchUser })(OrderDetail);\r\n","import React, { Component } from \"react\";\r\nimport SideMenu from \"./common/sideMenu\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport Nav from \"./common/nav\";\r\nimport { Button, Checkbox, Icon, Table, Segment } from \"semantic-ui-react\";\r\nimport AfterNav from \"./common/afterNav\";\r\nimport { MISSING_USER_MSG, ERROR_MSG, MEAL_CREATE } from \"../utility/global\";\r\nimport clientService from \"../services/clientService\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReviewList from \"../components/widgets/reviewList\";\r\nimport { fetchUser } from \"../actions/productActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass StoreReview extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      reviewList: [],\r\n      shopName:\"\",\r\n      replyResult:\"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount = async () => {};\r\n  componentWillReceiveProps = async (nextProps) => {\r\n    if (nextProps) {\r\n      const shopId = nextProps.user.shopId;\r\n      \r\n      const result = await clientService.findProductReviewByShop({ shopId });\r\n      const shopResult = await clientService.findShopById(shopId);\r\n      const shop = shopResult.data.data;\r\n\r\n      this.setState({\r\n        reviewList: result.data.data,\r\n        shopName: shop.shopName\r\n      });\r\n    }\r\n  };\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  handleReply=async(data)=>{\r\n   \r\n    const {content, shopId,ratingId} = data;\r\n    const result = await clientService.createProductRatingResponse({content, shopId,ratingId});\r\n    this.setState({replyResult:result.data.data})\r\n    \r\n  }\r\n  render() {\r\n    const {replyResult, shopName} = this.state;\r\n    return (\r\n      <Container fluid={true}>\r\n        <Nav />\r\n        <AfterNav form={\"Food List\"} />\r\n        <hr></hr>\r\n        <Row className=\"dash-layout\">\r\n          <Col lg=\"2\">\r\n            <SideMenu />\r\n          </Col>\r\n\r\n          <Col lg=\"1\"></Col>\r\n\r\n          <Col className=\"dashboard-panel\" lg=\"6\">\r\n            <Segment padded>\r\n              {this.state.reviewList.map((review) => {\r\n                return <ReviewList replyResult={replyResult} poster={shopName} handleReply={this.handleReply} data={review} />;\r\n              })}\r\n            </Segment>\r\n            <br/><br/>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nStoreReview.propTypes = {\r\n  fetchUser: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  user: state.products.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchUser })(StoreReview);\r\n","import React, { Component } from \"react\";\r\nimport SideMenu from \"./common/sideMenu\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport Nav from \"./common/nav\";\r\nimport {\r\n  Grid,\r\n  Segment,\r\n  Button,\r\n  Checkbox,\r\n  Icon,\r\n  Message,\r\n} from \"semantic-ui-react\";\r\nimport AfterNav from \"./common/afterNav\";\r\nimport {\r\n  MISSING_USER_MSG,\r\n  ERROR_MSG,\r\n  MEAL_CREATE,\r\n  toastOptions,\r\n} from \"../utility/global\";\r\nimport clientService from \"../services/clientService\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchUser } from \"../actions/productActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Moment from \"react-moment\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"date-fns\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nconst minTime = new Date(\"2014-08-18T21:11:54\").setHours(10, 0, 0);\r\nconst maxTime = new Date(\"2014-08-18T21:11:54\").setHours(20, 0, 0);\r\nclass AvailableTime extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      shopId: \"\",\r\n      loading: false,\r\n      disabled: false,\r\n      sunChecked: false,\r\n      monChecked: false,\r\n      tueChecked: false,\r\n      wedChecked: false,\r\n      thurChecked: false,\r\n      friChecked: false,\r\n      satChecked: false,\r\n\r\n      selectedSunMax: maxTime,\r\n      selectedSunMin: minTime,\r\n      selectedMonMin: minTime,\r\n      selectedMonMax: maxTime,\r\n      selectedTueMax: maxTime,\r\n      selectedTueMin: minTime,\r\n      selectedWedMin: minTime,\r\n      selectedWedMax: maxTime,\r\n      selectedThurMax: maxTime,\r\n      selectedThurMin: minTime,\r\n      selectedFriMin: minTime,\r\n      selectedFriMax: maxTime,\r\n      selectedSatMin: minTime,\r\n      selectedSatMax: maxTime,\r\n\r\n      sunId: \"\",\r\n      monId: \"\",\r\n      tueId: \"\",\r\n      wedId: \"\",\r\n      thurId: \"\",\r\n      friId: \"\",\r\n      satId: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount = async () => {};\r\n\r\n  componentWillReceiveProps = async (nextProps) => {\r\n    if (nextProps) {\r\n      const shopId = nextProps.user.shopId;\r\n\r\n      this.setState({\r\n        shopId,\r\n      });\r\n\r\n      const getShopOpeningDays = await clientService.findOpeningDaysByShop({\r\n        shopId,\r\n      });\r\n\r\n      const result = getShopOpeningDays.data.data;\r\n      let sunday;\r\n      let monday;\r\n      let tuesday;\r\n      let wednesday;\r\n      let thursday;\r\n      let friday;\r\n      let saturday;\r\n      if (result.length > 0) {\r\n        const arr = result[0];\r\n        sunday = arr.Sunday;\r\n        monday = arr.Monday;\r\n        tuesday = arr.Tuesday;\r\n        wednesday = arr.Wednesday;\r\n        thursday = arr.Thursday;\r\n        friday = arr.Friday;\r\n        saturday = arr.Saturday;\r\n      }\r\n\r\n      if (sunday) {\r\n        const sunMinDate = sunday.opening;\r\n        const sunMaxDate = sunday.closing;\r\n\r\n        this.setState({\r\n          sunId: sunday.id,\r\n          selectedSunMin: sunMinDate,\r\n          selectedSunMax: sunMaxDate,\r\n          sunChecked: sunday.checked,\r\n        });\r\n      }\r\n\r\n      if (monday) {\r\n        this.setState({\r\n          monId: monday.id,\r\n          selectedMonMin: monday.opening,\r\n          selectedMonMax: monday.closing,\r\n          monChecked: monday.checked,\r\n        });\r\n      }\r\n\r\n      if (tuesday) {\r\n        this.setState({\r\n          tueId: tuesday.id,\r\n          selectedTueMin: tuesday.opening,\r\n          selectedTueMax: tuesday.closing,\r\n          tueChecked: tuesday.checked,\r\n        });\r\n      }\r\n\r\n      if (wednesday) {\r\n        this.setState({\r\n          wedId: wednesday.id,\r\n          selectedWedMin: wednesday.opening,\r\n          selectedWedMax: wednesday.closing,\r\n          wedChecked: wednesday.checked,\r\n        });\r\n      }\r\n      if (thursday) {\r\n        this.setState({\r\n          thurId: thursday.id,\r\n          selectedThurMin: thursday.opening,\r\n          selectedThurMax: thursday.closing,\r\n          thurChecked: thursday.checked,\r\n        });\r\n      }\r\n      if (friday) {\r\n        this.setState({\r\n          friId: friday.id,\r\n          selectedFriMin: friday.opening,\r\n          selectedFriMax: friday.closing,\r\n          friChecked: friday.checked,\r\n        });\r\n      }\r\n      if (saturday) {\r\n        this.setState({\r\n          satId: saturday.id,\r\n          selectedSatMin: saturday.opening,\r\n          selectedSatMax: saturday.closing,\r\n          satChecked: saturday.checked,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleSunMax = (date) => {\r\n    this.setState({\r\n      selectedSunMax: date._d,\r\n    });\r\n  };\r\n\r\n  handleSunMin = (date) => {\r\n    console.log(date._d);\r\n    this.setState({\r\n      selectedSunMin: date._d,\r\n    });\r\n  };\r\n  handleMonMin = (date) => {\r\n    this.setState({\r\n      selectedMonMin: date._d,\r\n    });\r\n  };\r\n  handleMonMax = (date) => {\r\n    this.setState({\r\n      selectedMonMax: date._d,\r\n    });\r\n  };\r\n\r\n  handleTueMin = (date) => {\r\n    this.setState({\r\n      selectedTueMin: date._d,\r\n    });\r\n  };\r\n  handleTueMax = (date) => {\r\n    this.setState({\r\n      selectedTueMax: date._d,\r\n    });\r\n  };\r\n\r\n  handleWedMin = (date) => {\r\n    this.setState({\r\n      selectedWedMin: date._d,\r\n    });\r\n  };\r\n  handleWedMax = (date) => {\r\n    this.setState({\r\n      selectedWedMax: date._d,\r\n    });\r\n  };\r\n\r\n  handleThurMin = (date) => {\r\n    this.setState({\r\n      selectedThurMin: date._d,\r\n    });\r\n  };\r\n  handleThurMax = (date) => {\r\n    this.setState({\r\n      selectedThurMax: date._d,\r\n    });\r\n  };\r\n  handleFriMin = (date) => {\r\n    this.setState({\r\n      selectedFriMin: date._d,\r\n    });\r\n  };\r\n  handleFriMax = (date) => {\r\n    this.setState({\r\n      selectedFriMax: date._d,\r\n    });\r\n  };\r\n\r\n  handleSatMin = (date) => {\r\n    this.setState({\r\n      selectedSatMin: date._d,\r\n    });\r\n  };\r\n  handleSatMax = (date) => {\r\n    this.setState({\r\n      selectedSatMax: date._d,\r\n    });\r\n  };\r\n  onChangeCheck = (e, data) => {\r\n    this.setState({\r\n      [data.name]: data.checked,\r\n    });\r\n  };\r\n  onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const {\r\n        shopId,\r\n        selectedSunMin,\r\n        selectedSunMax,\r\n        selectedMonMin,\r\n        selectedMonMax,\r\n        selectedTueMin,\r\n        selectedTueMax,\r\n        selectedWedMin,\r\n        selectedWedMax,\r\n        selectedThurMin,\r\n        selectedThurMax,\r\n        selectedFriMin,\r\n        selectedFriMax,\r\n        selectedSatMin,\r\n        selectedSatMax,\r\n        sunChecked,\r\n        monChecked,\r\n        tueChecked,\r\n        wedChecked,\r\n        thurChecked,\r\n        friChecked,\r\n        satChecked,\r\n\r\n        sunId,\r\n        monId,\r\n        tueId,\r\n        wedId,\r\n        thurId,\r\n        friId,\r\n        satId,\r\n      } = this.state;\r\n      \r\n      this.setState({\r\n        loading: true,\r\n        disabled: true,\r\n      });\r\n  \r\n      const result = await clientService.createOpeningDay({\r\n        shopId,\r\n        sunChecked,\r\n        monChecked,\r\n        tueChecked,\r\n        wedChecked,\r\n        thurChecked,\r\n        friChecked,\r\n        satChecked,\r\n\r\n        selectedSunMin,\r\n        selectedSunMax,\r\n        selectedMonMin,\r\n        selectedMonMax,\r\n        selectedTueMin,\r\n        selectedTueMax,\r\n        selectedWedMin,\r\n        selectedWedMax,\r\n        selectedThurMin,\r\n        selectedThurMax,\r\n        selectedFriMin,\r\n        selectedFriMax,\r\n        selectedSatMin,\r\n        selectedSatMax,\r\n\r\n        sunId,\r\n        monId,\r\n        tueId,\r\n        wedId,\r\n        thurId,\r\n        friId,\r\n        satId,\r\n      });\r\n      if (result.data.error) {\r\n        toast.success(result.data.message, toastOptions(true));\r\n      } else {\r\n        toast.success(result.data.message, toastOptions());\r\n      }\r\n    } catch (err) {\r\n      toast.success(\"No network\", toastOptions(true));\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n        disabled: false,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const {\r\n      sunChecked,\r\n      monChecked,\r\n      tueChecked,\r\n      wedChecked,\r\n      thurChecked,\r\n      friChecked,\r\n      satChecked,\r\n\r\n      selectedSunMin,\r\n      selectedSunMax,\r\n      selectedMonMin,\r\n      selectedMonMax,\r\n      selectedTueMin,\r\n      selectedTueMax,\r\n      selectedWedMin,\r\n      selectedWedMax,\r\n      selectedThurMin,\r\n      selectedThurMax,\r\n      selectedFriMin,\r\n      selectedFriMax,\r\n      selectedSatMin,\r\n      selectedSatMax,\r\n      disabled,\r\n      loading,\r\n    } = this.state;\r\n\r\n    return (\r\n      <Container fluid={true}>\r\n        <Nav />\r\n        <AfterNav form={\"Opening time\"} />\r\n        <hr></hr>\r\n        <Row className=\"dash-layout\">\r\n          <Col lg=\"2\">\r\n            <SideMenu />\r\n          </Col>\r\n\r\n          <Col lg=\"1\"></Col>\r\n\r\n          <Col className=\"dashboard-panel\" lg=\"6\">\r\n            <Message attached header=\"Opening time\" />\r\n            <Segment raised>\r\n              <Grid padded columns=\"equal\">\r\n                <Grid.Row>\r\n                  <Grid.Column>\r\n                    <h4>Sunday</h4>\r\n                  </Grid.Column>\r\n                  <Grid.Column>\r\n                    <Checkbox\r\n                      onChange={this.onChangeCheck}\r\n                      checked={sunChecked}\r\n                      name=\"sunChecked\"\r\n                      toggle\r\n                    />\r\n                  </Grid.Column>\r\n                  <Grid.Column>\r\n                    {sunChecked ? (\r\n                      <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                        <KeyboardTimePicker\r\n                          id=\"time-picker\"\r\n                          name=\"sunMin\"\r\n                          value={selectedSunMin}\r\n                          onChange={this.handleSunMin}\r\n                          KeyboardButtonProps={{\r\n                            \"aria-label\": \"change time\",\r\n                          }}\r\n                        />\r\n                      </MuiPickersUtilsProvider>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </Grid.Column>\r\n                  <Grid.Column>\r\n                    {sunChecked ? (\r\n                      <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                        <KeyboardTimePicker\r\n                          id=\"time-picker\"\r\n                          name=\"sunMax\"\r\n                          value={selectedSunMax}\r\n                          onChange={this.handleSunMax}\r\n                          KeyboardButtonProps={{\r\n                            \"aria-label\": \"change time\",\r\n                          }}\r\n                        />\r\n                      </MuiPickersUtilsProvider>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              </Grid>\r\n              <Grid padded columns=\"equal\">\r\n                <Grid.Row>\r\n                  <Grid.Column>\r\n                    <h4>Monday</h4>\r\n                  </Grid.Column>\r\n                  <Grid.Column>\r\n                    <Checkbox\r\n                      onChange={this.onChangeCheck}\r\n                      checked={monChecked}\r\n                      name=\"monChecked\"\r\n                      toggle\r\n                    />\r\n                  </Grid.Column>\r\n                  <Grid.Column>\r\n                    {monChecked ? (\r\n                      <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                        <KeyboardTimePicker\r\n                          id=\"time-picker\"\r\n                          name=\"monMin\"\r\n                          value={selectedMonMin}\r\n                          onChange={this.handleMonMin}\r\n                          KeyboardButtonProps={{\r\n                            \"aria-label\": \"change time\",\r\n                          }}\r\n                        />\r\n                      </MuiPickersUtilsProvider>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </Grid.Column>\r\n                  <Grid.Column>\r\n                    {monChecked ? (\r\n                      <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                        <KeyboardTimePicker\r\n                          id=\"time-picker\"\r\n                          name=\"monMax\"\r\n                          value={selectedMonMax}\r\n                          onChange={this.handleMonMax}\r\n                          KeyboardButtonProps={{\r\n                            \"aria-label\": \"change time\",\r\n                          }}\r\n                        />\r\n                      </MuiPickersUtilsProvider>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              </Grid>\r\n              <Grid padded columns=\"equal\">\r\n                <Grid.Row>\r\n                  <Grid.Column>\r\n                    <h4>Tuesday</h4>\r\n                  </Grid.Column>\r\n                  <Grid.Column>\r\n                    <Checkbox\r\n                      onChange={this.onChangeCheck}\r\n                      checked={tueChecked}\r\n                      name=\"tueChecked\"\r\n                      toggle\r\n                    />\r\n                  </Grid.Column>\r\n                  <Grid.Column>\r\n                    {tueChecked ? (\r\n                      <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                        <KeyboardTimePicker\r\n                          id=\"time-picker\"\r\n                          name=\"tueMin\"\r\n                          value={selectedTueMin}\r\n                          onChange={this.handleTueMin}\r\n                          KeyboardButtonProps={{\r\n                            \"aria-label\": \"change time\",\r\n                          }}\r\n                        />\r\n                      </MuiPickersUtilsProvider>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </Grid.Column>\r\n                  <Grid.Column>\r\n                    {tueChecked ? (\r\n                      <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                        <KeyboardTimePicker\r\n                          id=\"time-picker\"\r\n                          name=\"tueMax\"\r\n                          value={selectedTueMax}\r\n                          onChange={this.handleTueMax}\r\n                          KeyboardButtonProps={{\r\n                            \"aria-label\": \"change time\",\r\n                          }}\r\n                        />\r\n                      </MuiPickersUtilsProvider>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              </Grid>\r\n              <Grid padded columns=\"equal\">\r\n                <Grid.Row>\r\n                  <Grid.Column>\r\n                    <h4>Wednesday</h4>\r\n                  </Grid.Column>\r\n                  <Grid.Column>\r\n                    <Checkbox\r\n                      onChange={this.onChangeCheck}\r\n                      checked={wedChecked}\r\n                      name=\"wedChecked\"\r\n                      toggle\r\n                    />\r\n                  </Grid.Column>\r\n                  <Grid.Column>\r\n                    {wedChecked ? (\r\n                      <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                        <KeyboardTimePicker\r\n                          id=\"time-picker\"\r\n                          name=\"wedMin\"\r\n                          value={selectedWedMin}\r\n                          onChange={this.handleWedMin}\r\n                          KeyboardButtonProps={{\r\n                            \"aria-label\": \"change time\",\r\n                          }}\r\n                        />\r\n                      </MuiPickersUtilsProvider>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </Grid.Column>\r\n                  <Grid.Column>\r\n                    {wedChecked ? (\r\n                      <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                        <KeyboardTimePicker\r\n                          id=\"time-picker\"\r\n                          name=\"wedMax\"\r\n                          value={selectedWedMax}\r\n                          onChange={this.handleWedMax}\r\n                          KeyboardButtonProps={{\r\n                            \"aria-label\": \"change time\",\r\n                          }}\r\n                        />\r\n                      </MuiPickersUtilsProvider>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              </Grid>\r\n              <Grid padded columns=\"equal\">\r\n                <Grid.Row>\r\n                  <Grid.Column>\r\n                    <h4>Thursday</h4>\r\n                  </Grid.Column>\r\n                  <Grid.Column>\r\n                    <Checkbox\r\n                      onChange={this.onChangeCheck}\r\n                      checked={thurChecked}\r\n                      name=\"thurChecked\"\r\n                      toggle\r\n                    />\r\n                  </Grid.Column>\r\n                  <Grid.Column>\r\n                    {thurChecked ? (\r\n                      <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                        <KeyboardTimePicker\r\n                          id=\"time-picker\"\r\n                          name=\"thurMin\"\r\n                          value={selectedThurMin}\r\n                          onChange={this.handleThurMin}\r\n                          KeyboardButtonProps={{\r\n                            \"aria-label\": \"change time\",\r\n                          }}\r\n                        />\r\n                      </MuiPickersUtilsProvider>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </Grid.Column>\r\n                  <Grid.Column>\r\n                    {thurChecked ? (\r\n                      <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                        <KeyboardTimePicker\r\n                          id=\"time-picker\"\r\n                          name=\"thurMax\"\r\n                          value={selectedThurMax}\r\n                          onChange={this.handleThurMax}\r\n                          KeyboardButtonProps={{\r\n                            \"aria-label\": \"change time\",\r\n                          }}\r\n                        />\r\n                      </MuiPickersUtilsProvider>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              </Grid>\r\n              <Grid padded columns=\"equal\">\r\n                <Grid.Row>\r\n                  <Grid.Column>\r\n                    <h4>Friday</h4>\r\n                  </Grid.Column>\r\n                  <Grid.Column>\r\n                    <Checkbox\r\n                      onChange={this.onChangeCheck}\r\n                      checked={friChecked}\r\n                      name=\"friChecked\"\r\n                      toggle\r\n                    />\r\n                  </Grid.Column>\r\n                  <Grid.Column>\r\n                    {friChecked ? (\r\n                      <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                        <KeyboardTimePicker\r\n                          id=\"time-picker\"\r\n                          name=\"friMin\"\r\n                          value={selectedFriMin}\r\n                          onChange={this.handleFriMin}\r\n                          KeyboardButtonProps={{\r\n                            \"aria-label\": \"change time\",\r\n                          }}\r\n                        />\r\n                      </MuiPickersUtilsProvider>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </Grid.Column>\r\n                  <Grid.Column>\r\n                    {friChecked ? (\r\n                      <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                        <KeyboardTimePicker\r\n                          id=\"time-picker\"\r\n                          name=\"friMax\"\r\n                          value={selectedFriMax}\r\n                          onChange={this.handleFriMax}\r\n                          KeyboardButtonProps={{\r\n                            \"aria-label\": \"change time\",\r\n                          }}\r\n                        />\r\n                      </MuiPickersUtilsProvider>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              </Grid>\r\n              <Grid padded columns=\"equal\">\r\n                <Grid.Row>\r\n                  <Grid.Column>\r\n                    <h4>Saturday</h4>\r\n                  </Grid.Column>\r\n                  <Grid.Column>\r\n                    <Checkbox\r\n                      onChange={this.onChangeCheck}\r\n                      checked={satChecked}\r\n                      name=\"satChecked\"\r\n                      toggle\r\n                    />\r\n                  </Grid.Column>\r\n                  <Grid.Column>\r\n                    {satChecked ? (\r\n                      <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                        <KeyboardTimePicker\r\n                          id=\"time-picker\"\r\n                          name=\"satMin\"\r\n                          value={selectedSatMin}\r\n                          onChange={this.handleSatMin}\r\n                          KeyboardButtonProps={{\r\n                            \"aria-label\": \"change time\",\r\n                          }}\r\n                        />\r\n                      </MuiPickersUtilsProvider>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </Grid.Column>\r\n                  <Grid.Column>\r\n                    {satChecked ? (\r\n                      <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                        <KeyboardTimePicker\r\n                          id=\"time-picker\"\r\n                          name=\"satMax\"\r\n                          value={selectedSatMax}\r\n                          onChange={this.handleSatMax}\r\n                          KeyboardButtonProps={{\r\n                            \"aria-label\": \"change time\",\r\n                          }}\r\n                        />\r\n                      </MuiPickersUtilsProvider>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              </Grid>\r\n              <hr></hr>\r\n              <Button\r\n                loading={loading}\r\n                disabled={disabled}\r\n                padding\r\n                color=\"red\"\r\n                onClick={this.onSubmit}\r\n                type=\"button\"\r\n              >\r\n                Save <Icon name=\"save\" />\r\n              </Button>\r\n            </Segment>\r\n            <br />\r\n            <br />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nAvailableTime.propTypes = {\r\n  fetchUser: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  user: state.products.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchUser })(AvailableTime);\r\n","import React, { Component } from \"react\";\r\nimport Nav from \"./common/nav\";\r\nimport SideMenu from \"./common/sideMenu\";\r\nimport ClientService from \"../services/clientService\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport clientService from \"../services/clientService\";\r\nimport {\r\n  MISSING_USER_MSG,\r\n  DEFAULT_BANNER,\r\n  DEFAULT_LOGO,\r\n  toastOptions,\r\n  titleCase,\r\n} from \"../utility/global\";\r\nimport {\r\n  Button,\r\n  Dropdown,\r\n  Form,\r\n  Image,\r\n  Message,\r\n  Input,\r\n  Icon,\r\n  Popup,\r\n  Label,\r\n  Table,\r\n  Grid,\r\n} from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AfterNav from \"./common/afterNav\";\r\nimport { toast } from \"react-toastify\";\r\nimport { fetchUser } from \"../actions/productActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nlet count = 0;\r\nclass PostCode extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  state = {\r\n    postCode: \"\",\r\n    postCodes: [],\r\n    shopId: \"\",\r\n    disabled: false,\r\n  };\r\n  componentWillReceiveProps = async (nextProps) => {\r\n    if (nextProps) {\r\n      const user = nextProps.user;\r\n      const shopId = user.shopId;\r\n      if (user) {\r\n        ClientService.findPostCodesByShop({ shopId })\r\n          .then((response) => {\r\n            const postCodes = response.data.data;\r\n            this.setState({\r\n              postCodes,\r\n              shopId,\r\n            });\r\n          })\r\n          .catch((err) => {\r\n            //console.log(err);\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.props.fetchUser();\r\n  };\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  removePostCode = async (id) => {\r\n    const error = await clientService.deletePostCode(id);\r\n    if (!error) {\r\n      this.setState({\r\n        postCodes: [...this.state.postCodes.filter((item) => item.id !== id)],\r\n      });\r\n    }\r\n  };\r\n  addPostCode = async () => {\r\n    const { postCode, postCodes, shopId } = this.state;\r\n    const create = await clientService.createPostCode({\r\n      shopId,\r\n      code: postCode,\r\n    });\r\n\r\n    const error = create.data.error;\r\n    const data = create.data.data;\r\n    if (!error) {\r\n      postCodes.push({\r\n        id: data.id,\r\n        code: data.code,\r\n      });\r\n\r\n      this.setState({\r\n        postCodes: [...postCodes],\r\n        postCode: \"\",\r\n      });\r\n    }\r\n  };\r\n  onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const { postCodes, postCode, shopId } = this.state;\r\n\r\n    const create = await clientService.createPostCode({ shopId, postCodes });\r\n    // .then((response) => {\r\n    //   toast.success(response.data.message, toastOptions(false));\r\n    // })\r\n    // .catch((err) => {\r\n    //   toast.success(err.response.data.message, toastOptions(true));\r\n    // });\r\n  };\r\n\r\n  render() {\r\n    const { postCode, postCodes, disabled } = this.state;\r\n\r\n    return (\r\n      <Container fluid={true}>\r\n        <Nav />\r\n        <AfterNav form={\"Post Codes\"} />\r\n        <hr></hr>\r\n        <Row style={{ paddingTop: \"10px\" }}>\r\n          <Col lg=\"2\">\r\n            <SideMenu />\r\n          </Col>\r\n          <Col lg=\"1\"></Col>\r\n          <Col className=\"dashboard-panel\" lg=\"6\">\r\n            <Message attached header=\"Post Codes\" />\r\n            <Form\r\n              className=\"attached fluid segment\"\r\n              style={{\r\n                width: \"100%\",\r\n                margin: \"auto\",\r\n                height: \"auto\",\r\n                padding: 13,\r\n              }}\r\n              onSubmit={this.onSubmit}\r\n            >\r\n              <p class=\"h4 mb-4\">Post Codes</p>\r\n              <Grid fluid stackable columns={2} padded>\r\n                <Grid.Row>\r\n                  <Grid.Column>\r\n                    <Input\r\n                      fluid\r\n                      type=\"text\"\r\n                      name=\"postCode\"\r\n                      value={postCode}\r\n                      onChange={this.onChange}\r\n                      placeholder=\"Enter post codes\"\r\n                      action\r\n                    >\r\n                      <input />\r\n                      <Button\r\n                        onClick={this.addPostCode}\r\n                        color=\"green\"\r\n                        disabled={!postCode}\r\n                        type=\"button\"\r\n                      >\r\n                        Add\r\n                      </Button>\r\n                    </Input>\r\n                  </Grid.Column>\r\n                  <Grid.Column></Grid.Column>\r\n                </Grid.Row>\r\n\r\n                <Grid.Row>\r\n                  <Grid.Column>\r\n                    {postCodes.length > 0 ? (\r\n                      <Table fluid color=\"green\">\r\n                        <Table.Header>\r\n                          <Table.Row>\r\n                            <Table.HeaderCell>Post Code</Table.HeaderCell>\r\n                            <Table.HeaderCell></Table.HeaderCell>\r\n                          </Table.Row>\r\n                        </Table.Header>\r\n\r\n                        <Table.Body>\r\n                          {postCodes.map((item) => {\r\n                            return (\r\n                              <Table.Row key={item.id}>\r\n                                <Table.Cell>\r\n                                  {\" \"}\r\n                                  <h4>{item.code}</h4>\r\n                                </Table.Cell>\r\n                                <Table.Cell textAlign=\"right\">\r\n                                  <Link\r\n                                    title={`Remove ${item.code}`}\r\n                                    onClick={() => this.removePostCode(item.id)}\r\n                                  >\r\n                                    <Icon\r\n                                      color=\"red\"\r\n                                      size=\"large\"\r\n                                      name=\"minus circle\"\r\n                                    />\r\n                                  </Link>{\" \"}\r\n                                </Table.Cell>\r\n                              </Table.Row>\r\n                            );\r\n                          })}\r\n                        </Table.Body>\r\n                      </Table>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </Grid.Column>\r\n\r\n                  <Grid.Column></Grid.Column>\r\n                </Grid.Row>\r\n              </Grid>\r\n            </Form>\r\n            <br />\r\n            <br />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nPostCode.propTypes = {\r\n  fetchUser: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  user: state.products.user,\r\n});\r\nexport default connect(mapStateToProps, { fetchUser })(PostCode);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport {\r\n  Container,\r\n  Dropdown,\r\n  Icon,\r\n  DropDown,\r\n  Image,\r\n  List,\r\n  Menu,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport NavBar from \"../components/NavBar\";\r\nimport Footer from \"../components/Footer\";\r\n\r\nclass Privacy extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavBar />\r\n        <div style={{ padding: 50 }}>\r\n          <Segment style={{ marginTop: 100 }} placeholder>\r\n            <h3 style={{ textAlign: \"center\" }}>Foodengo - Privacy Policy</h3>\r\n            <h3>Last Updated 19 July 2020</h3>\r\n            <hr></hr>\r\n            <h3>PRIVACY POLICY</h3>\r\n\r\n            <p>\r\n              We respect the privacy of our users and every person who visits\r\n              our site <a href=\"https://www.foodengo.co.uk\">www.foodengo.co.uk</a>. Here,{\" \"}\r\n              <b className=\"b\">SOFTNERGY LIMITED</b> referred to as (\"we\", \"us\",\r\n              or \"our\"). We are committed to protecting your personal\r\n              information and your right to privacy in accordance with General\r\n              Data Protection Regulation (GDPR). If you have any questions or\r\n              concerns about our policy or our practices with regards to your\r\n              personal information, please contact us at\r\n              <a href=\"https://foodengo.co.uk\"> info@foodengo.co.uk.</a>\r\n            </p>\r\n            <p>\r\n              When you visit our website{\" \"}\r\n              <a href=\"https://foodengo.co.uk\"> www.foodengo.co.uk</a> (\"Site\"),\r\n              and use our services, you trust us with your personal information.\r\n              We take your privacy very seriously. In this privacy notice, we\r\n              describe our privacy policy. We seek to explain to you in the\r\n              clearest way possible what information we collect, how we use it\r\n              and what rights you have in relation to it. We hope you take some\r\n              time to read through it carefully, as it is important. If there\r\n              are any terms in this privacy policy that you do not agree with,\r\n              please discontinue the use of our site and our services.\r\n            </p>\r\n            <p>\r\n              This privacy policy applies to all information collected through\r\n              our website, and/or any related services, sales, marketing or\r\n              events (we refer to them collectively in this privacy policy as\r\n              the \"Site\").\r\n            </p>\r\n            <h3>ABOUT US</h3>\r\n            <p>\r\n              At <a href=\"https://foodengo.co.uk\">www.foodengo.co.uk</a>, we\r\n              provide you meticulously designed food delivery ecommerce platform\r\n              where a buyer can buy food products, and Seller (registered) can\r\n              sell their food products online.{\" \"}\r\n            </p>\r\n            <p>\r\n              With all of our products, we focus on quality by having our\r\n              products subject to rigorous quality checks before it reaches you.\r\n            </p>\r\n            <p>We are located in Edinburgh, United Kingdom.</p>\r\n            <strong>\r\n              Please read this privacy policy carefully as it will help you make\r\n              informed decisions about sharing your personal information with\r\n              us.{\" \"}\r\n            </strong>\r\n            <h3>1. WHAT INFORMATION DO WE COLLECT?</h3>\r\n            <p>\r\n              Personal information you disclose to us We collect personal\r\n              information that you voluntarily provide to us when expressing an\r\n              interest in obtaining information about us or our products and\r\n              services, when participating in activities on the Site or\r\n              otherwise contacting us.\r\n            </p>\r\n            <p>\r\n              The personal information that we collect depends on the context of\r\n              your interactions with us and the Site, the choices you make and\r\n              the products and features you use. The personal information we\r\n              collect can include the following:\r\n            </p>\r\n            <p>\r\n              <b className=\"b\">Name and Contact Data.</b> We collect your first\r\n              and last name, email address, postal address, phone number and\r\n              other similar contact data.\r\n            </p>\r\n            <p>\r\n              <b className=\"b\">Credentials.</b> We collect passwords, password\r\n              hints, and similar security information used for authentication\r\n              and account access.\r\n            </p>\r\n            <p>\r\n              <b className=\"b\">Payment Data.</b> We collect data necessary to\r\n              process your payment if you make purchases, such as your payment\r\n              instrument number (such as a credit card number), and the security\r\n              code associated with your payment instrument. All payment data is\r\n              stored by our payment processor and you should review its privacy\r\n              policies and contact the payment processor directly to respond to\r\n              your questions.\r\n            </p>\r\n            <p>\r\n              <b className=\"b\">Location information:</b> We will track device\r\n              location by sending GPS coordinates to our application. We may\r\n              also determine location by using other data from your mobile\r\n              device, such as information about wireless networks or cell towers\r\n              near your device. We use and store information about your location\r\n              to enable many product and Service features that are dependent\r\n              upon location tracking. We may also use collected information to\r\n              troubleshoot software, to conduct data analysis, to do testing,\r\n              research, and to monitor and analyze usage and activity trends to\r\n              improve and customize the services.\r\n            </p>\r\n            <h3>Information automatically collected</h3>\r\n            <p>\r\n              We automatically collect certain information when you visit, use\r\n              or navigate the Site. This information does not reveal your\r\n              specific identity (like your name or contact information) but may\r\n              include device and usage information, such as your IP address,\r\n              browser and device characteristics, operating system, language\r\n              preferences, referring URLs, device name, country, location,\r\n              information about how and when you use our Site and other\r\n              technical information.\r\n            </p>\r\n            <p>\r\n              {\" \"}\r\n              If you access our site with your mobile device, we may\r\n              automatically collect device information (such as your mobile\r\n              device ID, model and manufacturer), operating system, version\r\n              information and IP address. This information is primarily needed\r\n              to maintain the security and operation of our Site, and for our\r\n              internal analytics and reporting purposes. Like many businesses,\r\n              we also collect information through cookies and similar\r\n              technologies. You can find out more about this in our Cookie\r\n              Policy.\r\n            </p>\r\n            <h3>Information collected from other Sources</h3>\r\n            <p>\r\n              We may obtain information about you from other sources, such as\r\n              public databases, joint marketing partners, our newsletters (link\r\n              on our website) are maintained via mailchimp.com, social media\r\n              platforms (such as Facebook), as well as from other third parties.\r\n              Examples of the information we receive from other sources include:\r\n              social media profile information (your name, gender, email, user\r\n              identification numbers for your contacts, profile picture URL and\r\n              any other information that you choose to make public); marketing\r\n              leads and search results and links, including paid listings (such\r\n              as sponsored links).\r\n            </p>\r\n            <h3>2. HOW DO WE USE YOUR INFORMATION?</h3>\r\n            <p>\r\n              We use your personal information for these purposes in reliance on\r\n              our legitimate business interests (\"Business Purposes\"), in order\r\n              to enter into or perform a contract with you (\"Contractual\"), with\r\n              your consent (\"Consent\"), and/or for compliance with our legal\r\n              obligations (\"Legal Reasons\"). We indicate the specific processing\r\n              grounds we rely on next to each purpose listed below. <br />\r\n              <br />\r\n              We use the information we collect or receive:\r\n              <ul>\r\n                <li>\r\n                  To send administrative information to you for related to your\r\n                  account, our business purposes, and/or for legal reasons. We\r\n                  may use your personal information to send you product, service\r\n                  and new feature information and/or information about changes\r\n                  to our terms, conditions, and policies.\r\n                </li>\r\n                <li>\r\n                  Deliver targeted advertising to you for our Business Purposes\r\n                  and/or with your Consent. We may use your information to\r\n                  develop and display content and advertising (and work with\r\n                  third parties who do so) tailored to your interests and/or\r\n                  location and to measure its effectiveness. [For more\r\n                  information, see our Cookie Policy.\r\n                </li>\r\n                <li>\r\n                  Request Feedback for our Business Purposes and/or with your\r\n                  Consent. We may use your information to request feedback and\r\n                  to contact you about your use of our Site.\r\n                </li>\r\n                <li>\r\n                  To protect our Site for Business Purposes and/or Legal\r\n                  Reasons. We may use your information as part of our efforts to\r\n                  keep our Site safe and secure (for example, for fraud\r\n                  monitoring and prevention).\r\n                </li>\r\n                <li>\r\n                  To enable user-to-user communications with your consent. We\r\n                  may use your information in order to enable user-to-user\r\n                  communications with each user’s consent.\r\n                </li>\r\n                <li>\r\n                  To enforce our terms, conditions and policies for our business\r\n                  purposes and as legally required.\r\n                </li>\r\n                <li>\r\n                  To respond to legal requests and prevent harm as legally\r\n                  required. If we receive a subpoena or other legal request, we\r\n                  may need to inspect the data we hold to determine how to\r\n                  respond.\r\n                </li>\r\n                <li>\r\n                  For other Business Purposes. We may use your information for\r\n                  other Business Purposes, such as data analysis, identifying\r\n                  usage trends, determining the effectiveness of our promotional\r\n                  campaigns and to evaluate and improve our Site, products,\r\n                  services, marketing and your experience.\r\n                </li>\r\n              </ul>\r\n            </p>\r\n            <h3>3. WILL YOUR INFORMATION BE SHARED WITH ANYONE?</h3>\r\n            <p>\r\n              We only share and disclose your information in the following\r\n              situations:\r\n            </p>\r\n            <p>\r\n              <ul>\r\n                <li>\r\n                  Compliance with Laws. We may disclose your information where\r\n                  we are legally required to do so in order to comply with\r\n                  applicable law, governmental requests, a judicial proceeding,\r\n                  court order, or legal process, such as in response to a court\r\n                  order or a subpoena (including in response to public\r\n                  authorities to meet national security or law enforcement\r\n                  requirements).\r\n                </li>\r\n                <li>\r\n                  Vital Interests and Legal Rights. We may disclose your\r\n                  information where we believe it is necessary to investigate,\r\n                  prevent, or take action regarding potential violations of our\r\n                  policies, suspected fraud, situations involving potential\r\n                  threats to the safety of any person and illegal activities, or\r\n                  as evidence in litigation in which we are involved.\r\n                </li>\r\n                <li>\r\n                  Vendors, Consultants and Other Third-Party Service Providers.\r\n                  We may share your data with third party vendors, service\r\n                  providers, contractors or agents who perform services for us\r\n                  or on our behalf and require access to such information to do\r\n                  that work.{\" \"}\r\n                </li>\r\n                <li>\r\n                  Business Transfers. We may share or transfer your information\r\n                  in connection with, or during negotiations of, any merger,\r\n                  sale of company assets, financing, or acquisition of all or a\r\n                  portion of our business to another company.\r\n                </li>\r\n                <li>\r\n                  Third-Party Advertisers. We may use third-party advertising\r\n                  companies to serve ads when you visit the Site. These\r\n                  companies may use information about your visits to our Site\r\n                  and other websites that are contained in web cookies and other\r\n                  tracking technologies in order to provide advertisements about\r\n                  goods and services of interest to you.\r\n                </li>\r\n                <li>\r\n                  Affiliates. We may share your information with our affiliates,\r\n                  in which case we will require those affiliates to honor this\r\n                  privacy policy. Affiliates include our parent company and any\r\n                  subsidiaries, joint venture partners or other companies that\r\n                  we control or that are under common control with us.\r\n                </li>\r\n                <li>\r\n                  Business Partners. We may share your information with our\r\n                  business partners to offer you certain products, services or\r\n                  promotions.\r\n                </li>\r\n                <li>\r\n                  With your Consent. We may disclose your personal information\r\n                  for any other purpose with your consent.\r\n                </li>\r\n                <li>\r\n                  Other Users. When you share personal information (for example,\r\n                  by posting comments, contributions or other content to the\r\n                  Site) or otherwise interact with public areas of the Site,\r\n                  such personal information may be viewed by all users and may\r\n                  be publicly distributed outside the Site in perpetuity.\r\n                </li>\r\n              </ul>\r\n            </p>\r\n\r\n            <h3>4. DO WE USE COOKIES AND OTHER TRACKING TECHNOLOGIES?</h3>\r\n            <p>\r\n              We may use cookies and similar tracking technologies (like web\r\n              beacons and pixels) to access or store information. Specific\r\n              information about how we use such technologies and how you can\r\n              refuse certain cookies is set out in our Cookie Policy.\r\n            </p>\r\n            <h3>5. IS YOUR INFORMATION TRANSFERRED INTERNATIONALLY?</h3>\r\n            <p>\r\n              Our website server is located in the United Kingdom. We will not\r\n              transfer your personal information to an overseas recipient.\r\n            </p>\r\n            <h3>6. WHAT IS OUR STANCE ON THIRD-PARTY WEBSITES?</h3>\r\n            <p>\r\n              The Site may contain advertisements from third parties that are\r\n              not affiliated with us and which may link to other websites,\r\n              online services or mobile applications. We cannot guarantee the\r\n              safety and privacy of data you provide to any third parties. Any\r\n              data collected by third parties is not covered by this privacy\r\n              policy. We are not responsible for the content or privacy and\r\n              security practices and policies of any third parties, including\r\n              other websites, services or applications that may be linked to or\r\n              from the Site. You should review the policies of such third\r\n              parties and contact them directly to respond to your questions.\r\n            </p>\r\n            <h3>7. HOW LONG DO WE KEEP YOUR INFORMATION?</h3>\r\n            <p>\r\n              We will only keep your personal information for as long as it is\r\n              necessary for the purposes set out in this privacy policy, unless\r\n              a longer retention period is required or permitted by law (such as\r\n              tax, accounting or other legal requirements).{\" \"}\r\n            </p>\r\n            <p>\r\n              When we have no ongoing legitimate business need to process your\r\n              personal information, we will either delete or anonymize it, or,\r\n              if this is not possible (for example, because your personal\r\n              information has been stored in backup archives), then we will\r\n              securely store your personal information and isolate it from any\r\n              further processing until deletion is possible.\r\n            </p>\r\n            <h3>8. HOW DO WE KEEP YOUR INFORMATION SAFE?</h3>\r\n            <p>\r\n              We have implemented appropriate technical and organizational\r\n              security measures designed to protect the security of any personal\r\n              information we process. However, please also remember that we\r\n              cannot guarantee that the internet itself is 100% secure. Although\r\n              we will do our best to protect your personal information,\r\n              transmission of personal information to and from our Site is at\r\n              your own risk. You should only access the services within a secure\r\n              environment.\r\n            </p>\r\n            <h3>9. DO WE COLLECT INFORMATION FROM MINORS?</h3>\r\n            <p>\r\n              We do not knowingly solicit data from or market to children under\r\n              16 years of age. By using the Site, you represent that you are at\r\n              least 16 or that you are the parent or guardian of such a minor\r\n              and consent to such minor dependent’s use of the Site. If we learn\r\n              that personal information from users less than 16 years of age has\r\n              been collected, we will deactivate the account and take reasonable\r\n              measures to promptly delete such data from our records. If you\r\n              become aware of any data we have collected from children under age\r\n              16, please contact us at{\" \"}\r\n              <a href=\"https://www.foodengo.co.uk\">info@foodengo.co.uk.</a>\r\n            </p>\r\n            <h3>10. GDPR ENTITLEMENT</h3>\r\n            <p>\r\n              EU General Data Protection Regulation (GDPR) has provided the\r\n              below rights to the EU residents:\r\n            </p>\r\n            <p>\r\n              <ul>\r\n                <li>\r\n                  Right to information - the purposes for processing Personal\r\n                  Information and the rights of the individual.\r\n                </li>\r\n                <li>\r\n                  Right to access the Personal Information that are processed.\r\n                </li>\r\n                <li>Right to erasure (\"Right to be forgotten\").</li>\r\n                <li>Right to rectification.</li>\r\n                <li>Right to restriction of processing.</li>\r\n                <li>Right to object (opt-out) to processing.</li>\r\n               \r\n              </ul>\r\n            </p>\r\n\r\n            <p>\r\n              EU residents can exercise these rights by raising a request\r\n              directly at info@foodengo.co.uk.\r\n            </p>\r\n            <h3>11. WHAT ARE YOUR PRIVACY RIGHTS?</h3>\r\n            <h3>Personal Information</h3>\r\n            <p>\r\n              You may at any time review or change the information in your\r\n              account or terminate your account by:\r\n            </p>\r\n            <br />\r\n            <p>\r\n              <b className=\"b\"> Contacting us using the contact information provided</b>\r\n            </p>\r\n            <p>\r\n              Upon your request to terminate your account, we will deactivate or\r\n              delete your account and information from our active databases.\r\n              However, some information may be retained in our files to prevent\r\n              fraud, troubleshoot problems, assist with any investigations,\r\n              enforce our Terms of Use and/or comply with legal requirements.\r\n            </p>\r\n            <p>\r\n              <b className=\"b\">Cookies and similar technologies:</b> Most Web\r\n              browsers are set to accept cookies by default. If you prefer, you\r\n              can usually choose to set your browser to remove cookies and to\r\n              reject cookies. If you choose to remove cookies or reject cookies,\r\n              this could affect certain features or services of our Site.{\" \"}\r\n            </p>\r\n            <h3>12. DO WE MAKE UPDATES TO THIS POLICY?</h3>\r\n            <p>\r\n              We may update this privacy policy from time to time. The updated\r\n              version will be indicated by an updated “Revised” date and the\r\n              updated version will be effective as soon as it is accessible. If\r\n              we make material changes to this privacy policy, we may notify you\r\n              either by prominently posting a notice of such changes or by\r\n              directly sending you a notification. We encourage you to review\r\n              this privacy policy frequently to be informed of how we are\r\n              protecting your information.\r\n            </p>\r\n            <h3>13. DATA PROTECTION OFFICER</h3>\r\n            <p>\r\n              We have appointed a Data Protection Officer (\"DPO\") who is\r\n              responsible for overseeing questions in relation to this privacy\r\n              notice. If you have any questions about this privacy notice,\r\n              including any requests to exercise your legal rights, please\r\n              contacts Data Protection Officer, at our e-mail\r\n              <a href=\"https://www.foodengo.co.uk\"> info@foodengo.co.uk.</a>\r\n            </p>\r\n            <h3>14. HOW CAN YOU CONTACT US ABOUT THIS POLICY?</h3>\r\n            <p>\r\n              If you have questions or comments about this policy, email us at\r\n              info@foodengo.co.uk.\r\n            </p>\r\n          </Segment>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Privacy;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport {\r\n  Container,\r\n  Dropdown,\r\n  Icon,\r\n  DropDown,\r\n  Image,\r\n  List,\r\n  Menu,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport NavBar from \"../components/NavBar\";\r\nimport Footer from \"../components/Footer\";\r\n\r\nclass Disclaimer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavBar />\r\n        <div style={{ padding: 50 }}>\r\n          <Segment style={{ marginTop: 100 }} placeholder>\r\n            <h3 style={{ textAlign: \"center\" }}>Foodengo - DISCLAIMER</h3>\r\n            <h3>Last Updated 19 July 2020</h3>\r\n            <hr></hr>\r\n            <h3>DISCLAIMER</h3>\r\n\r\n            <p>\r\n              This Disclaimer forms part of and must be read in conjunction\r\n              with, website Terms and Conditions. We reserve the right to change\r\n              this Disclaimer at any time. The information contained in this\r\n              website is for general information purposes only. The information\r\n              is provided by{\" \"}\r\n              <a href=\"https://www.foodengo.co.uk\"> www.foodengo.co.uk</a>{\" \"}\r\n              (\"SOFTNERGY LIMITED\" or \"we\").\r\n            </p>\r\n            <p>\r\n              At <a href=\"https://www.foodengo.co.uk\"> www.foodengo.co.uk</a>,\r\n              we provide you meticulously designed food delivery ecommerce\r\n              platform where a buyer can buy food products, and Seller\r\n              (registered) can sell their food products online. With all of our\r\n              products, we focus on quality by having our products subject to\r\n              rigorous quality checks before it reaches you.\r\n            </p>\r\n            <p>\r\n              We take no responsibility for any indirect damage that may result\r\n              from the product. We accept no responsibility for delays/errors\r\n              due to circumstances outside the Company's ruling (Force Majeure).\r\n              These circumstances can be, for example, labor conflict, fire,\r\n              war, government decisions, reduced or non-delivery from the\r\n              supplier.\r\n            </p>\r\n\r\n            <p>\r\n              We shall not be liable and responsible for the behavior of the\r\n              users (both Sellers and the customers). And we are also not\r\n              accountable for the quality of the products provided by the\r\n              Sellers on the website.\r\n            </p>\r\n            <p>\r\n              You understand and agree that we (a) do not guarantee the\r\n              accuracy, completeness, validity, or timeliness of information\r\n              listed by us or any third parties; and (b) shall not be\r\n              responsible for any materials posted by us or any third party. You\r\n              shall use your own judgment, caution, and common sense in\r\n              evaluating any prospective methods or offers and any information\r\n              provided by us or any third party.\r\n            </p>\r\n            <p>\r\n              Further, we shall not be liable for direct, indirect\r\n              consequential, or any other form of loss or damage that may be\r\n              suffered by a user through the use of the www.foodengo.co.uk\r\n              Website including loss of data or information or any kind of\r\n              financial or physical loss or damage. We are not responsible to\r\n              you for:\r\n            </p>\r\n            <p>\r\n              <ul>\r\n                <li>\r\n                  any reliance that you may place on any material or commentary\r\n                  posted on our website. Please note that nothing contained in\r\n                  our website or the material published on it is intended to\r\n                  amount to advice on which you should rely; or\r\n                </li>\r\n                <li>\r\n                  any losses you suffer because the information you put into our\r\n                  website is inaccurate or incomplete; or\r\n                </li>\r\n                <li>\r\n                  any losses you suffer because you cannot use our website at\r\n                  any time; or\r\n                </li>\r\n                <li>any errors in or omissions from our website; or</li>\r\n                <li>\r\n                  any losses you may suffer by relying on any commentary,\r\n                  postings or reviews (of our services or that of our partners)\r\n                  on our website; or\r\n                </li>\r\n                <li>\r\n                  any unauthorized access or loss of personal information that\r\n                  is beyond our control.\r\n                </li>\r\n              </ul>\r\n            </p>\r\n            <p>\r\n              <h3>General: </h3>\r\n              The website, its content, and service are provided on an \"as is\"\r\n              and \"as available\" basis without any warranties of any kind,\r\n              including that the website will operate error-free or that the\r\n              website, its servers, its content or its service are free of\r\n              computer viruses or similar contamination or destructive features.\r\n              Although we seek to maintain safe, secure, accurate, and\r\n              well-functioning services, we cannot guarantee the continuous\r\n              operation of or access to our services, and there may at times be\r\n              inadvertent technical or factual errors or inaccuracies.\r\n            </p>\r\n            <p>\r\n              <h4>A) No warranties. </h4>\r\n              We specifically (but without limitation) disclaim\r\n              <ul type=\"a\">\r\n                <li>\r\n                  Any implied warranties of merchantability, fitness for a\r\n                  particular purpose, quiet enjoyment, or non-infringement; and{\" \"}\r\n                </li>\r\n                <li>\r\n                  Any warranties arising out of course-of-dealing, usage, or\r\n                  trade. You assume all risk for any/all damages that may result\r\n                  from your use of or access to the services. We shall not be\r\n                  responsible for the loss of, damage to, or unavailability of\r\n                  any information you have made available through the services,\r\n                  and you are solely responsible for ensuring that you have\r\n                  backup copies of any information you have made available\r\n                  through the services.\r\n                </li>\r\n              </ul>\r\n            </p>\r\n            <p>\r\n              {\" \"}\r\n              <h4>B) No guarantee of accuracy. </h4>\r\n              We do not guarantee the accuracy of and disclaims all liability\r\n              for, any errors or other inaccuracies in the information, content,\r\n              recommendations, and materials made available through the\r\n              services.\r\n            </p>\r\n            <p>\r\n              <h4> C) No warranties regarding third parties.</h4> We make no\r\n              representations, warranties, or guarantees, express or implied,\r\n              regarding any third party service or advice provided by a third\r\n              party.\r\n            </p>\r\n            <p>\r\n              Every effort is made to keep the website up and running smoothly.\r\n              However, we take no responsibility for, and will not be liable\r\n              for, the website being temporarily unavailable due to technical\r\n              issues beyond our control.\r\n            </p>\r\n            <p>\r\n              If you require any more information or have any questions about\r\n              our site's disclaimer, please feel free to contact us by email at\r\n              <a href=\"https://www.foodengo.co.uk\"> info@foodengo.co.uk</a>.\r\n            </p>\r\n            \r\n          </Segment>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Disclaimer;\r\n","import React, { Component } from \"react\";\r\nimport NavBar from \"../components/NavBar\";\r\nimport Footer from \"../components/Footer\";\r\nimport {\r\n  Container,\r\n  Dropdown,\r\n  Icon,\r\n  DropDown,\r\n  Image,\r\n  List,\r\n  Menu,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport \"./style.css\";\r\nexport default class TermsAndCondition extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavBar />\r\n        <div style={{ padding: 50 }}>\r\n          <Segment style={{ marginTop: 100 }} placeholder>\r\n            <h2 style={{ textAlign: \"center\" }}>\r\n              Foodengo - Terms and Conditions\r\n            </h2>\r\n            <h3>Last Updated 19 July 2020</h3>\r\n            <hr></hr>\r\n            <h2>TERMS AND CONDITIONS</h2>\r\n            <h4>CONTENT</h4>\r\n            <h5>I. INTRODUCTION</h5>\r\n            <h5>II. DEFINITIONS</h5>\r\n            <h5>III. INTERPRETATION</h5>\r\n            <h5>IV. INTRODUCTION AND SCOPE </h5>\r\n            <h5>V. SERVICES</h5>\r\n            <h5>VI. MODIFICATIONS TO THE SERVICE</h5>\r\n            <h5>VII. ACCOUNT</h5>\r\n            <h5>VIII. USER CONTENT</h5>\r\n            <h5>IX. ORDERING</h5>\r\n            <h5>X. GENERAL CONDITIONS</h5>\r\n            <h5>XI. DAMAGED PRODUCTS</h5>\r\n            <h5>XII. OBLIGATIONS AND RESPONSIBILITIES</h5>\r\n            <h5>XIII. LIMITED GUARANTEE</h5>\r\n            <h5>XIV. GEOGRAPHIC RESTRICTION</h5>\r\n            <h5>XV. USER RESPONSIBILITIES</h5>\r\n            <h5>XVI. ELLERS OBLIGATIONS</h5>\r\n            <h5>XVII. EXCLUSION OF LIABILITY</h5>\r\n            <h5>XVIII. NO RESPONSIBILITY</h5>\r\n            <h5>XIX. THIRD-PARTY LINKS</h5>\r\n            <h5>XX. PERSONAL INFORMATION AND PRIVACY POLICY </h5>\r\n            <h5>XXI. ERRORS, INACCURACIES, AND OMISSIONS</h5>\r\n            <h5>XXII. DISCLAIMER OF WARRANTIES; LIMITATION OF LIABILITY</h5>\r\n            <h5>XXIII. COPYRIGHT AND TRADEMARK XXIV. INDEMNIFICATION</h5>\r\n            <h5>XXV. MISCELLANEOUS</h5>\r\n            <hr></hr>\r\n            <h3>I. INTRODUCTION</h3>\r\n            <p>\r\n              <a href=\"https://www.foodengo.co.uk\">www.foodengo.co.uk</a>{\" \"}\r\n              (“website”) welcomes you. We offer you access to our product and\r\n              services through our “Website” (defined below) subject to the\r\n              following Terms of this agreement, which may be updated by us from\r\n              time to time with or without notice to you. By accessing and using\r\n              this Website, you acknowledge that you have read, understood and\r\n              agree to be lawfully bound by these Terms and Conditions and our\r\n              Privacy Policy, which are hereby incorporated by reference\r\n              (collectively, this “Agreement”). In case you do not agree with\r\n              any of these terms, then please do not use the Website.\r\n            </p>\r\n            <h3>II. DEFINITIONS</h3>\r\n            <p>\r\n              <ul>\r\n                <li>\r\n                  <b className=\"b\">Agreement</b> denotes to this Terms and\r\n                  Conditions and the Privacy Policy and other documents provided\r\n                  to you by the Website;\r\n                </li>\r\n                <li>\r\n                  <b className=\"b\">Product</b> or <b className=\"b\">Item</b> refers to the food\r\n                  product or goods available for sale by the registered Seller\r\n                  to the customers on the website.\r\n                </li>\r\n                <li>\r\n                  <b className=\"b\">User</b>, <b className=\"b\">You</b> and <b className=\"b\">you</b> denotes the person\r\n                  who is accessing for taking any service from us. User shall\r\n                  include the company, partnership, sole trader, person, body\r\n                  corporate or association taking services of this Website;\r\n                </li>\r\n                <li>\r\n                  <b className=\"b\">Customer</b> refers to the user who accesses\r\n                  the website and makes the payment for purchasing products and\r\n                  availing services;\r\n                </li>\r\n                <li>\r\n                  {\" \"}\r\n                  <b className=\"b\">Seller</b> refers to the user accessing or\r\n                  registering with the website for creating its store in the\r\n                  website and offer various products and services from the\r\n                  website;\r\n                </li>\r\n                <li>\r\n                  <b className=\"b\">We, us, our</b> are references to SOFTNERGY\r\n                  LIMITED;\r\n                </li>\r\n                <li>\r\n                  <b className=\"b\">Website</b> shall mean and include\r\n                  <a href=\"https://www.foodengo.co.uk\"> https://www.foodengo.co.uk</a>, and any successor Website of the\r\n                  Company or any of its affiliates;\r\n                </li>\r\n                <li>\r\n                  <b className=\"b\">Customer Account</b> shall mean an electronic\r\n                  account opened for the customer for purchasing products and\r\n                  availing various services offered on the website;\r\n                </li>\r\n                <li>\r\n                  <b className=\"b\">Seller Account</b> shall mean an electronic\r\n                  account opened by the user with the Platform to sell its\r\n                  product and services through the platform;\r\n                </li>\r\n              </ul>\r\n            </p>\r\n\r\n            <h3>III. INTERPRETATION</h3>\r\n            <p>\r\n              <ul>\r\n                <li>\r\n                  All references to the singular include the plural and vice\r\n                  versa and the word \"includes\" should be construed as \"without\r\n                  limitation\".\r\n                </li>\r\n                <li>\r\n                  Words importing any gender shall include all the other\r\n                  genders.\r\n                </li>\r\n                <li>\r\n                  Reference to any statute, ordinance or other law includes all\r\n                  regulations and other instruments and all consolidations,\r\n                  amendments, re-enactments or replacements for the time being\r\n                  in force.\r\n                </li>\r\n                <li>\r\n                  All headings, bold typing, and italics (if any) have been\r\n                  inserted for convenience of reference only and do not define\r\n                  limit or affect the meaning or interpretation of the terms of\r\n                  this Agreement.\r\n                </li>\r\n              </ul>\r\n            </p>\r\n            <h3>IV. INTRODUCTION AND SCOPE</h3>\r\n            <p>\r\n              <ul>\r\n                <li>\r\n                  <b className=\"b\">Scope: </b> These Terms govern your use of\r\n                  the Website and the Services. Except as otherwise specified,\r\n                  these Terms do not apply to Third-Party Products or Services,\r\n                  which are governed by their own terms of service.\r\n                </li>\r\n                <li>\r\n                  <b className=\"b\">Eligibility: </b> Certain Service of the\r\n                  Website is not available to users under the age of 18 or to\r\n                  any users suspended or removed from the system by us for any\r\n                  reason.\r\n                </li>\r\n                <li>\r\n                  <b className=\"b\">Electronic Communication: </b> When you use\r\n                  this Website or send e-mails and other electronic\r\n                  communications from your desktop or mobile device to us, you\r\n                  are communicating with us electronically. By sending, you\r\n                  agree to receive a reply communications from us electronically\r\n                  in the same format and you can keep copies of these\r\n                  communications for your records.\r\n                </li>\r\n              </ul>\r\n            </p>\r\n            <br />\r\n            <h3>V. SERVICES</h3>\r\n            <p>\r\n              At <a href=\"https://www.foodengo.co.uk\">foodengo.co.uk</a>, we provide you meticulously designed food\r\n              delivery ecommerce platform where a buyer can buy food products,\r\n              and Seller (registered) can sell their food products online. With\r\n              all of our products, we focus on quality by having our products\r\n              subject to rigorous quality checks before it reaches you. We aim\r\n              to offer the best prices for various products and services with a\r\n              simple and easy shopping experience.\r\n            </p>\r\n            <h3>VI. MODIFICATIONS TO THE SERVICE </h3>\r\n            <p>\r\n              We reserve the right, in our discretion, to change, modify, add\r\n              to, or remove portions of the Terms (collectively, “Changes”), at\r\n              any time. We may notify you of changes by sending an email to the\r\n              address identified in your Account or by posting a revised version\r\n              of the Terms incorporating the Changes to its Website. Your\r\n              continued use of the Site following the posting of changes will\r\n              mean that you accept and agree to the Changes.\r\n            </p>\r\n            <h3>VII. ACCOUNT</h3>\r\n            <p>\r\n              For accessing the website and using certain Resources, you may be\r\n              required to provide specific information and to create a user ID\r\n              and password to establish an account. You accept that the details\r\n              you provide about establishing an account are correct and that you\r\n              will keep your details up-to-date. You are responsible for the\r\n              security of all of your user names, passwords, and registration\r\n              information (such as unique account identifiers or historical\r\n              billing information), and you are solely responsible for any use\r\n              (authorized or not) of your accounts. You agree to notify us\r\n              immediately about any unauthorized activity regarding any of your\r\n              accounts or other breaches of security. We may at our discretion\r\n              suspend or terminate any of your user names and passwords at any\r\n              time with or without notice.\r\n            </p>\r\n            <h3> VIII. USER CONTENT</h3>\r\n            <h4>A. Content Responsibility. </h4>\r\n            <p>\r\n              <p>\r\n                {\" \"}\r\n                The website permits you to post comments, feedback etc. but you\r\n                are solely responsible for the content posted by you. You\r\n                represent that you have required permission to use the content.\r\n                When posting content to the website, please do not post content\r\n                that:\r\n              </p>\r\n              <ul>\r\n                <li>\r\n                  contains ill-mannered, profane, abusive, racist or hateful\r\n                  language or expressions, text, photographs or illustrations\r\n                  that are pornographic or in poor taste, inflammatory attacks\r\n                  of a personal, racial or religious nature;\r\n                </li>\r\n                <li>\r\n                  is defamatory, threatening, disparaging, grossly inflammatory,\r\n                  false, misleading, fraudulent, inaccurate, unfair, contains\r\n                  gross exaggeration or unsubstantiated claims;\r\n                </li>\r\n                <li>\r\n                  violates the privacy rights of any third party, is\r\n                  unreasonably harmful or offensive to any individual or\r\n                  community;\r\n                </li>\r\n                <li>\r\n                  discriminates on the grounds of race, religion, national\r\n                  origin, gender, age, marital status, sexual orientation or\r\n                  disability, or refers to such matters in any manner prohibited\r\n                  by law;\r\n                </li>\r\n                <li>\r\n                  violates or inappropriately encourages the violation of any\r\n                  municipal, state, federal or international law, rule,\r\n                  regulation or ordinance;\r\n                </li>\r\n                <li>\r\n                  uses or attempts to use another's account, password, service\r\n                  or system except as expressly permitted by the Terms of use\r\n                  uploads or transmits viruses or other harmful, disruptive or\r\n                  destructive files;\r\n                </li>\r\n                <li>\r\n                  sends repeated messages related to another user and/or makes\r\n                  derogatory or offensive comments about another individual or\r\n                  repeats prior posting of the same message under multiple\r\n                  emails or subjects.\r\n                  <br />\r\n                  <br />\r\n                  Any submitted content will be refused by us. If repeated\r\n                  violations occur, we reserve the right to cancel user access\r\n                  to the website without advanced notice.\r\n                </li>\r\n              </ul>\r\n            </p>\r\n            <h3>IX. ORDERING</h3>\r\n            <p>\r\n              {\" \"}\r\n              <ul>\r\n                <li>\r\n                  All the purchases from this website shall be governed by our\r\n                  terms and conditions.\r\n                  <br />\r\n                </li>\r\n                <li>\r\n                  If you make an Order for buying any product from our website.\r\n                  At the time ordering, while providing your details you must be\r\n                  careful and warrant that the details provided are true and\r\n                  accurate.\r\n                  <br />\r\n                </li>\r\n                <li>\r\n                  Payment mode shall be:\r\n                  <ul>\r\n                    <li>\r\n                      Online: Credit Cards and Debit cards.\r\n                      <br />\r\n                    </li>\r\n                    <li>\r\n                      PayPal\r\n                      <br />\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n                <li>\r\n                  {\" \"}\r\n                  The Preferred method of payment is PayPal. Credit cards are\r\n                  accepted via PayPal merchant services. Accepted cards are:\r\n                  Visa / Delta / Electron / MasterCard / Eurocard / Maestro/\r\n                  American Express Debit cards are accepted if they have a Visa\r\n                  or MasterCard logo.\r\n                  <br />\r\n                </li>\r\n                <li>\r\n                  {\" \"}\r\n                  Any order to purchase a product that you place with us is\r\n                  subject to acceptance by us. When you make your order online\r\n                  we will provide you an email to confirm that we have received\r\n                  it.\r\n                  <br />\r\n                </li>\r\n                <li>\r\n                  If there is an error in the order confirmation, please contact\r\n                  us immediately by email at info@foodengo.co.uk.\r\n                  <br />\r\n                </li>\r\n                <li>\r\n                  {\" \"}\r\n                  We may refuse or unable to process your order if:\r\n                  <br />\r\n                  <ul>\r\n                    <li>\r\n                      {\" \"}\r\n                      Your card or PayPal/Stripe account does not give\r\n                      authorization for the payment of purchase price.\r\n                      <br />\r\n                    </li>\r\n                    <li>\r\n                      {\" \"}\r\n                      You do not meet the eligibility to order criteria set out\r\n                      above.\r\n                      <br />\r\n                    </li>\r\n                    <li>\r\n                      {\" \"}\r\n                      You must notify us instantly if any particulars are\r\n                      inappropriate. If your payment has not been accepted you\r\n                      will be informed of this in writing along with the\r\n                      reasons.\r\n                      <br />\r\n                    </li>\r\n                    <li>\r\n                      {\" \"}\r\n                      We are happy to support you if there is any issue you can\r\n                      contact our back-office team for any inquiry or problem.\r\n                      <br />\r\n                    </li>\r\n                    <li>\r\n                      A refund shall be made as per our Refund policy.\r\n                      <br />\r\n                    </li>\r\n                    <li>\r\n                      {\" \"}\r\n                      We take customer feedback very seriously and use it to\r\n                      constantly improve our products and quality of service.\r\n                      <br />\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n              </ul>\r\n            </p>\r\n            <h3>X. GENERAL CONDITIONS</h3>\r\n            <p>\r\n              <ul>\r\n                <li>\r\n                  We do not guarantee the accuracy, completeness, validity, or\r\n                  timeliness of information listed by us.\r\n                </li>\r\n                <li>\r\n                  We make material changes to these terms and conditions from\r\n                  time to time, we may notify you either by prominently posting\r\n                  a notice of such changes or via email communication.\r\n                </li>\r\n                <li>\r\n                  The website is licensed to you on a limited, non-exclusive,\r\n                  non-transferable, non-sublicensable basis, solely to be used\r\n                  in connection with the Service for your private, personal,\r\n                  non-commercial use, subject to all the terms and conditions of\r\n                  this Agreement as they apply to the Service.\r\n                </li>\r\n                <li>\r\n                  We reserve the right for any printing errors on this site as\r\n                  well as the final sales of products. We do not guarantee that\r\n                  the images reflect the exact appearance of the products as a\r\n                  certain color difference may occur depending on the monitor,\r\n                  photo quality, and resolution. We always try our best to\r\n                  expose the products as accurately as possible.\r\n                </li>\r\n                <li>\r\n                  We shall have no liability to you for any failure to deliver\r\n                  products you have ordered or any delay in doing so or for any\r\n                  damage or defect to Products delivered if caused by any event\r\n                  or circumstances beyond our reasonable control including,\r\n                  without limitation, adverse weather, pandemics, strikes,\r\n                  lockouts, and other industrial disputes, breakdown or systems\r\n                  or network access, flood, fire, explosion or accident.\r\n                </li>\r\n              </ul>\r\n            </p>\r\n            <h3>XI. DAMAGED PRODUCTS</h3>\r\n            <p>\r\n              While we try our best to provide you best however due to some\r\n              uncertain situation, if the recipient receives a damaged product,\r\n              please contact us immediately at our email: info@foodengo.co.uk.\r\n            </p>\r\n            <h3>XII. OBLIGATIONS AND RESPONSIBILITIES</h3>\r\n            <p>\r\n              <h4> QUALITY AND QUANTITY ASSURANCE:</h4>\r\n              <ul>\r\n                <li>\r\n                  Before the Product(s) being displayed/advertised on the\r\n                  Platform, the Seller ensure the availability of the Products\r\n                  for servicing customer’s orders .\r\n                </li>\r\n              </ul>\r\n              <h4>LICENSE TO MAKE USE OF INTELLECTUAL PROPERTY.</h4>\r\n              <ul>\r\n                <li>\r\n                  The Seller hereby grants to the Company for the Term a\r\n                  royalty-free irrevocable license to use its Intellectual\r\n                  Property to provide the Services by the Company as\r\n                  contemplated hereunder.\r\n                </li>\r\n                <li>\r\n                  In the event, the Seller sources the Products from any\r\n                  Supplier, the Seller shall obtain all applicable licenses and\r\n                  consents for the use of such Supplier’s Intellectual Property\r\n                  in connection with the Product being sourced from such\r\n                  Supplier to provide the Services by the Company, before the\r\n                  display/advertising of such Products on the Platform.{\" \"}\r\n                </li>\r\n                <li>\r\n                  The term \"Intellectual Property\" shall mean and include logos,\r\n                  trade names, brand names, trademarks, copyrights, and other\r\n                  relevant intellectual property rights relevant to the\r\n                  advertisement and sale of the Products.\r\n                </li>\r\n              </ul>\r\n            </p>\r\n            <h3>XIII. LIMITED GUARANTEE</h3>\r\n            <p>\r\n              By this Website:\r\n              <ul>\r\n                <li>\r\n                  We provide an opportunity for you to avail the offered\r\n                  Products and Services from our Website.\r\n                </li>\r\n                <li>\r\n                  We do not provide any warranty or guarantee that the products\r\n                  and service descriptions are accurate, complete, reliable,\r\n                  current, or error-free. If a Services offered by the Website\r\n                  is not as described, your sole remedy is to intimate us about\r\n                  Services for taking further action.\r\n                </li>\r\n              </ul>\r\n            </p>\r\n            <h3>XIV. GEOGRAPHIC RESTRICTION</h3>\r\n            <p>\r\n              We reserve the right, but not the obligation, to limit the usage\r\n              or supply of any service to any person, geographic region, or\r\n              jurisdiction. We may use this right as per the necessity. We\r\n              reserve the right to suspend any Service at any time. Any offer to\r\n              provide any Service made on this Website is invalid where banned.\r\n            </p>\r\n            <h3>XV. USER RESPONSIBILITIES</h3>\r\n            <p>\r\n              <ul>\r\n                <li>\r\n                  You shall use the Service and Website for a lawful purpose and\r\n                  comply with all the applicable laws while using the Website.\r\n                </li>\r\n                <li>\r\n                  You shall not use or access the Website for collecting any\r\n                  market research for some competing business.\r\n                </li>\r\n                <li>\r\n                  You shall not misrepresent or personate any person or entity\r\n                  for any false or illegal purpose.\r\n                </li>\r\n                <li>\r\n                  You will not use any device, scraper, or any automated thing\r\n                  to access the Website for any means without taking permission.\r\n                </li>\r\n                <li>\r\n                  You will inform us about anything is inappropriate or you can\r\n                  inform us if you find something illegal.\r\n                </li>\r\n                <li>\r\n                  You will not interfere with or try to interrupt the proper\r\n                  operation of the Website through the use of any virus, device,\r\n                  information collection or transmission mechanism, software or\r\n                  routine, or access or try to gain access to any data, files,\r\n                  or passwords connected to the Website through hacking,\r\n                  password or data mining, or any other means.\r\n                </li>\r\n                <li>\r\n                  You will not cover, obscure, block, or in any way interfere\r\n                  with any advertisements and/or safety features (e.g., report\r\n                  abuse button) on the Website.\r\n                </li>\r\n                <li>\r\n                  You will let us know about the unsuitable content of which you\r\n                  become aware. If you discover something that infringes any\r\n                  law, please let us know, and we’ll review it.\r\n                </li>\r\n              </ul>\r\n              We reserve the right, in our sole and absolute discretion, to deny\r\n              you access to the Website or any service, or any portion of the\r\n              Website or service, without notice, and to remove any content.\r\n            </p>\r\n            <h3>XVI. SELLERS OBLIGATIONS</h3>\r\n            <p>\r\n              <ul>\r\n                <li>\r\n                  The Seller takes full responsibility for all information that\r\n                  he provides on the <a href=\"https://www.foodengo.co.uk\">www.foodengo.co.uk</a> Website and must\r\n                  indemnify <b className=\"b\"><a href=\"https://softnergy.com\">Softnergy Limited</a></b> about any liability incurred by\r\n                  <b className=\"b\"><a href=\"https://softnergy.com\">Softnergy Limited</a></b> as a result of such information.\r\n                </li>\r\n                <li>\r\n                  The Seller shall be required to provide an actual business\r\n                  name for registration on the website.\r\n                </li>\r\n                <li>\r\n                  Seller shall indemnify <b className=\"b\"><a href=\"https://softnergy.com\">Softnergy Limited</a></b> for all claims and\r\n                  liabilities arising out of any use by the Seller of the \r\n                  <a href=\"https://www.foodengo.co.uk\"> wwww.foodengo.co.uk</a> Website, including costs and expenses\r\n                  incurred.\r\n                </li>\r\n                <li>\r\n                  The Seller shall be liable and responsible for any claim or\r\n                  legal proceeding arising out of the use /sale of fake or\r\n                  Adulterated product by the Seller.\r\n                </li>\r\n                <li>\r\n                  The Seller is not an employee of <b className=\"b\"><a href=\"https://softnergy.com\">Softnergy Limited</a></b> and accepts\r\n                  full responsibility for all Income Tax, National Insurance,\r\n                  and other liabilities arising from the use of the\r\n                  www.foodengo.co.uk Website.\r\n                </li>\r\n                <li>\r\n                  All information provided by a Seller on the www.foodengo.co.uk\r\n                  Website must be accurate and kept up-to-date. This includes\r\n                  the correct name, address, telephone number, and product\r\n                  details. Details entered by the Seller on the\r\n                  <a href=\"https://www.foodengo.co.uk\"> www.foodengo.co.uk</a> Website will be publicly visible and may\r\n                  appear in search engine results.\r\n                </li>\r\n                <li>\r\n                  The use of the <a href=\"https://www.foodengo.co.uk\">www.foodengo.co.uk</a> Website is entirely at a\r\n                  customer/Seller's own risk. A customer must exercise complete\r\n                  caution when using the <a href=\"https://www.foodengo.co.uk\">www.foodengo.co.uk</a> Website.\r\n                </li>\r\n                <li>\r\n                  The Seller shall be required to take necessary licenses as per\r\n                  the application law for selling alcoholic products to the\r\n                  consumers.\r\n                </li>\r\n                <li>\r\n                  The Seller agrees and undertakes to fully co-operate with the\r\n                  Company as reasonably required, in connection with any\r\n                  customer-service functions undertaken by the Company. Such\r\n                  services can be provided by the Seller either on its own or\r\n                  through the Suppliers, as the case may be.\r\n                </li>\r\n                <li>\r\n                  The Seller authorizes the Company to place;\r\n                  <ul>\r\n                    <li>\r\n                      Description of each of its Products (including but not\r\n                      limited to the technical description of the Products,\r\n                      brand name of the Product, the price of the Product, and\r\n                      any applicable warranty terms) on the Platform.\r\n                    </li>\r\n                    <li>\r\n                      The Seller rating based on Seller performance and customer\r\n                      reviews.\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n              </ul>\r\n            </p>\r\n            <h3>XVII. EXCLUSION OF LIABILITY</h3>\r\n            <p>\r\n              We take no responsibility for any indirect damage that may result\r\n              from the product.\r\n            </p>\r\n            <p>\r\n              We accept no responsibility for delays/errors due to circumstances\r\n              outside the Company's ruling (Force Majeure). These circumstances\r\n              can be, for example, labor conflict, fire, war, government\r\n              decisions, reduced or non-delivery from the supplier.\r\n            </p>\r\n            <p>\r\n              We shall not be liable and responsible for the behavior of the\r\n              users (both Sellers and the customers). And we are also not\r\n              accountable for the quality of the products provided by the\r\n              Sellers on the website.{\" \"}\r\n            </p>\r\n            <p>\r\n              You understand and agree that we (a) do not guarantee the\r\n              accuracy, completeness, validity, or timeliness of information\r\n              listed by us or any third parties; and (b) shall not be\r\n              responsible for any materials posted by us or any third party. You\r\n              shall use your own judgment, caution, and common sense in\r\n              evaluating any prospective methods or offers and any information\r\n              provided by us or any third party.\r\n            </p>\r\n            <p>\r\n              Further, we shall not be liable for direct, indirect\r\n              consequential, or any other form of loss or damage that may be\r\n              suffered by a user through the use of the{\" \"}\r\n              <a href=\"https://www.foodengo.co.uk\">www.foodengo.co.uk</a>{\" \"}\r\n              Website including loss of data or information or any kind of\r\n              financial or physical loss or damage.\r\n            </p>\r\n            <p>\r\n              In no event shall <b className=\"b\"><a href=\"https://softnergy.com\">SOFTNERGY LIMITED</a></b>, nor its\r\n              owners, directors, employees, partners, agents, suppliers, or\r\n              affiliates, be accountable for any indirect, incidental, special,\r\n              eventful or exemplary costs, including without limitation, loss of\r\n              proceeds, figures, usage, goodwill, or other intangible losses,\r\n              consequential from\r\n              <ol>\r\n                <li>\r\n                  Your use or access of or failure to access or use the Service;\r\n                </li>\r\n                <li>\r\n                  Any conduct or content of any third party on the Service; and{\" \"}\r\n                </li>\r\n                <li>\r\n                  Unlawful access, use or alteration of your transmissions or\r\n                  content, whether or not based on guarantee, agreement,\r\n                  domestic wrong (including carelessness) or any other lawful\r\n                  concept, whether or not we've been aware of the possibility of\r\n                  such damage.\r\n                </li>\r\n              </ol>\r\n            </p>\r\n            <h3>XVIII. NO RESPONSIBILITY</h3>\r\n            <p>We are not responsible to you for: </p>\r\n            <p>\r\n              <ul>\r\n                <li>\r\n                  any reliance that you may place on any material or commentary\r\n                  posted on our website. Please note that nothing contained in\r\n                  our website or the material published on it is intended to\r\n                  amount to advice on which you should rely; or\r\n                </li>\r\n                <li>\r\n                  any losses you suffer because the information you put into our\r\n                  website is inaccurate or incomplete; or\r\n                </li>\r\n                <li>\r\n                  any losses you suffer because you cannot use our website at\r\n                  any time; or\r\n                </li>\r\n                <li>any errors in or omissions from our website; or</li>\r\n                <li>\r\n                  any losses you may suffer by relying on any commentary,\r\n                  postings or reviews (of our services or that of our partners)\r\n                  on our website; or\r\n                </li>\r\n                <li>\r\n                  any unauthorized access or loss of personal information that\r\n                  is beyond our control.\r\n                </li>\r\n              </ul>\r\n            </p>\r\n            <h3>XIX. THIRD-PARTY LINKS</h3>\r\n            <p>\r\n              The Website may comprise links to external or third-party Websites\r\n              (\"External Sites\"). These links are provided exclusively as ease\r\n              to you and not as an authorization by us of the content on such\r\n              External Sites. The content of such External Sites is created and\r\n              used by others. You can communicate the site administrator for\r\n              those External Sites.\r\n            </p>\r\n            <p>\r\n              We are not accountable for the content provided in the link of any\r\n              External Sites and do not provide any representations about the\r\n              content or correctness of the information on such External Sites.\r\n              You should take safety measures when you are downloading files\r\n              from all these Websites to safeguards your computer from viruses\r\n              and other critical programs. If you agree to access linked\r\n              External Sites, you do so at your own risk.\r\n            </p>\r\n            <h3>XX. PERSONAL INFORMATION AND PRIVACY POLICY</h3>\r\n            <p>\r\n              By accessing or using this Website, you approve us to use, store,\r\n              or otherwise process your personal information as per our Privacy\r\n              Policy.\r\n            </p>\r\n            <h3>XXI. ERRORS, INACCURACIES, AND OMISSIONS</h3>\r\n            <p>\r\n              Every effort has been taken to ensure that the information offered\r\n              on this Website is accurate and error-free. We apologize for any\r\n              errors or omissions that may have occurred. We cannot give you any\r\n              warranty that usage of the Website will be error-free or fit for\r\n              purpose, timely, that defects will be amended, or that the site or\r\n              the server that makes it available are free of viruses or bugs or\r\n              signifies the full functionality, accuracy, reliability of the\r\n              Website and we do not make any warranty whatsoever, whether\r\n              express or implied, relating to fitness for purpose, or accuracy.\r\n            </p>\r\n            <h3>XXII. DISCLAIMER OF WARRANTIES; LIMITATION OF LIABILITY</h3>\r\n            <p>\r\n              The website and the service are provided on an “as is” and “as\r\n              available” basis without any warranties of any kind, including\r\n              that the website will operate error-free or that the website, its\r\n              servers or its content or service are free of computer viruses or\r\n              similar contamination or destructive features.\r\n            </p>\r\n            <p>\r\n              We disclaim all licenses or warranties, including, but not limited\r\n              to, licenses or warranties of title, merchantability,\r\n              non-violation of third parties’ rights, and fitness for particular\r\n              purpose and any warranties arising from a matter of dealing,\r\n              course of performance, or usage of trade. In relation with any\r\n              warranty, contract, or common law tort claims: (I) we shall not be\r\n              liable for any unintended, incidental, or substantial damages,\r\n              lost profits, or damages resulting from lost data or business\r\n              stoppage resulting from the use or inability to access and use the\r\n              website or the content, even if we have been recommended of the\r\n              possibility of such damages.\r\n            </p>\r\n            <p>\r\n              The website may comprise technical incorrectness or typographical\r\n              errors or omissions. Unless required by applicable laws, we are\r\n              not accountable for any such typographical, technical, or pricing\r\n              errors recorded on the website. The website may contain\r\n              information on certain services, not all of which are available in\r\n              every location. A reference to a service on the websites does not\r\n              suggest that such service is or will be accessible in your\r\n              location. We reserve the right to do changes, corrections, and/or\r\n              improvements to the website at any time without notice.\r\n            </p>\r\n            <h3>COPYRIGHT AND TRADEMARK</h3>\r\n            <p>\r\n              The Website contains material, such as software, text, graphics,\r\n              images, designs, sound recordings, audiovisual works, and other\r\n              the material provided by or on behalf of us (collectively referred\r\n              to as the “Content”). The Content may be possessed by us or third\r\n              parties. Unauthorized use of the Content may infringe copyright,\r\n              trademark, and other laws. You have no rights in or to the\r\n              Content, and you will not take the Content except as allowed under\r\n              this Agreement. No other use is allowed without prior written\r\n              consent from us. You must recollect all copyright and other\r\n              proprietary notices contained in the original Content on any copy\r\n              you make of the Content. You may not transfer, provide license or\r\n              sub-license, sell, or modify the Content or reproduce, display,\r\n              publicly perform, make a derivative version of, distribute, or\r\n              otherwise use the Content in any way for any public or commercial\r\n              purpose. The use or posting of the Content on any other Website or\r\n              in a networked computer environment for any purpose is expressly\r\n              prohibited.\r\n            </p>\r\n            <p>\r\n              If you infringe any part of this Agreement, your permission to\r\n              access and/or use the Content and the Website automatically\r\n              terminates and you must immediately destroy any copies you have\r\n              made of the Content.\r\n            </p>\r\n            <p>\r\n              Our trademarks, service marks, and logos used and displayed on the\r\n              Website are registered and unregistered trademarks or service\r\n              marks of us. Other company, product, and service names located on\r\n              the Website may be trademarks or service marks owned by others\r\n              (the “Third-Party Trademarks,” and, collectively with us, the\r\n              “Trademarks”). Nothing on the Website should be construed as\r\n              granting, by implication, estoppel, or otherwise, any license or\r\n              right to use the Trademarks, without our prior written permission\r\n              specific for each such use. None of the Content may be\r\n              retransmitted without our express, written consent for every\r\n              instance.\r\n            </p>\r\n            <h3>XXIV. INDEMNIFICATION</h3>\r\n            <p>\r\n              You agree to defend, indemnify, and hold us and our officers,\r\n              directors, employees, successors, licensees and assigns harmless\r\n              from and against any claims, actions, or demands, including,\r\n              without limitation, reasonable legal and accounting fees, arising\r\n              or resulting from your breach of this Agreement or your misuse of\r\n              the Content or the Website. We shall provide notice to you of any\r\n              such claim, suit, or proceeding and shall assist you, at your\r\n              expense, in defending any such claim, suit, or proceeding. We\r\n              reserve the right, at your expense, to assume the exclusive\r\n              defense and control of any matter that is subject to\r\n              indemnification under this section. In such case, you agree to\r\n              cooperate with any reasonable requests assisting our defense of\r\n              such matter.\r\n            </p>\r\n            <h3>XXV. MISCELLANEOUS</h3>\r\n            <p>\r\n              <h4>SEVERABILITY</h4>\r\n              If any provision of these Terms is found to be unenforceable or\r\n              invalid, that provision will be limited or eliminated to the\r\n              minimum extent necessary so that the Terms will otherwise remain\r\n              in full force and effect and enforceable.\r\n            </p>\r\n            <p>\r\n              <h4>TERMINATION</h4>\r\n              <b className=\"b\">Term. </b>The Services will be provided to you\r\n              can be canceled or terminated by us. We may terminate these\r\n              Services at any time, with or without cause, upon written notice.\r\n              We will have no liability to you or any third party because of\r\n              such termination. Termination of these Terms will terminate all of\r\n              your Services subscriptions.\r\n            </p>\r\n            <p>\r\n              <b className=\"b\">Effect of Termination.</b> Upon termination of\r\n              these Terms for any reason, or cancellation or expiration of your\r\n              Services: <br />\r\n              <br />\r\n              (a) We will cease providing the Services; <br />\r\n              <br />\r\n              (b) you will not be entitled to any refunds or usage fees, or any\r\n              other fees, pro-rata or otherwise; <br />\r\n              <br />\r\n              (c) any fees you owe to us will immediately become due and payable\r\n              in full, and <br />\r\n              <br />\r\n              (d) we may delete your archived data within 30 days. All sections\r\n              of the Terms that expressly provide for survival, or by their\r\n              nature should survive, will survive termination of the Terms,\r\n              including, without limitation, indemnification, warranty\r\n              disclaimers, and limitations of liability.\r\n            </p>\r\n            <p>\r\n              <h4>ENTIRE AGREEMENT</h4>\r\n              This Agreement constitutes the entire agreement between the\r\n              parties hereto concerning the subject matter contained in this\r\n              Agreement.\r\n            </p>\r\n            <p>\r\n              <h4>GOVERNING LAW AND JUDICIAL RECOURSE</h4>\r\n              The terms herein will be governed by and construed under the Law\r\n              of England and Wales without giving effect to any principles of\r\n              conflicts of law. The English Courts shall have exclusive\r\n              jurisdiction over any dispute arising from the use of the Website.\r\n            </p>\r\n            <p>\r\n              <h4>FORCE MAJEURE</h4>\r\n              We will have no liability to you, your users, or any third party\r\n              for any failure us to perform its obligations under these Terms if\r\n              such non-performance arises as a result of the occurrence of an\r\n              event beyond the reasonable control of us, including, without\r\n              limitation, an act of war or terrorism, natural disaster, failure\r\n              of electricity supply, riot, civil disorder, or civil commotion or\r\n              other force majeure event.\r\n            </p>\r\n            <p>\r\n              <h4>ASSIGNMENT</h4>\r\n              The Company shall have the right to assign/transfer this agreement\r\n              to any third party including its holding company, subsidiaries,\r\n              affiliates, associates, and group companies, without any consent\r\n              of the User.\r\n            </p>\r\n            <p>\r\n              <h4>CONTACT INFORMATION</h4>\r\n              If you have any questions about these Terms, please contact us at\r\n              info@foodengo.co.uk.\r\n            </p>\r\n          </Segment>\r\n         \r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import {\r\n  ADD_USER,\r\n  FETCH_PRODUCT_BY_ORIGIN,\r\n  FETCH_PRODUCT_CLOSE_BY_ORIGIN,\r\n  FETCH_PRODUCTS,\r\n  FETCH_PRODUCTS_CLOSE,\r\n  FETCH_USER,\r\n  FETCH_PRODUCT_BY_CATEGORY,\r\n  FETCH_PRODUCT_CLOSE_BY_CATEGORY,\r\n  FETCH_CATEGORY,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  items: [],\r\n  closeItems: [],\r\n  item: {},\r\n  user: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        items: action.payload,\r\n      };\r\n    case FETCH_PRODUCTS_CLOSE:\r\n      return {\r\n        ...state,\r\n        closeItems: action.payload,\r\n      };\r\n    case FETCH_PRODUCT_BY_ORIGIN:\r\n      return {\r\n        ...state,\r\n        items: action.payload,\r\n      };\r\n    case FETCH_PRODUCT_CLOSE_BY_ORIGIN:\r\n      return {\r\n        ...state,\r\n        closeItems: action.payload,\r\n      };\r\n    case FETCH_CATEGORY:\r\n      return {\r\n        ...state,\r\n        items: action.payload,\r\n      };\r\n    case FETCH_PRODUCT_BY_CATEGORY:\r\n      return {\r\n        ...state,\r\n        items: action.payload,\r\n      };\r\n    case FETCH_PRODUCT_CLOSE_BY_CATEGORY:\r\n      return {\r\n        ...state,\r\n        closeItems: action.payload,\r\n      };\r\n    case ADD_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      };\r\n    case FETCH_USER:\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport productReducer from './productReducer';\r\n\r\nexport default combineReducers({\r\n  products: productReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__\r\n      ? window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n          window.__REDUX_DEVTOOLS_EXTENSION__()\r\n      : (f) => f\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect, useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { SERVER_URL, LOGIN_URL } from \"../src/utility/global\";\r\nimport clientService from \"./services/clientService\";\r\n\r\nexport default function ProtectedRoute(ComponentToProtect) {\r\n  return class extends Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        loading: true,\r\n        redirect: false,\r\n      };\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n      try {\r\n        \r\n        const result = await clientService.hasAuth();\r\n        const error = result.data.error;\r\n\r\n        if (!error) {\r\n          this.setState({ loading: false });\r\n        } else {\r\n          this.setState({ loading: false, redirect: true });\r\n        }\r\n      } catch (err) {\r\n        this.setState({ loading: false, redirect: true });\r\n      }\r\n    };\r\n\r\n    render() {\r\n      const { loading, redirect } = this.state;\r\n      if (loading) {\r\n        return null;\r\n      }\r\n      if (redirect) {\r\n        return <Redirect to={{pathname: LOGIN_URL, state: {from: this.props.location}}}/>\r\n       \r\n      }\r\n      return <ComponentToProtect {...this.props} />;\r\n    }\r\n  };\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Landing from \"./components/Landing\";\n\nimport Login from \"./components/login\";\nimport BankDetail from \"./adminComponents/bankDetail\";\nimport Register from \"./components/register\";\nimport ShopPage from \"./components/ShopPage\";\nimport ErrorPage from \"./components/errorPage\";\nimport ContactUs from \"./components/contactUs\";\nimport Payment from \"./components/payment\";\nimport StoreListing from \"./components/storeListing\";\nimport Dashboard from \"./adminComponents/dashboard_admin\";\nimport DashboardUser from \"./adminComponents/dashboard_user\";\nimport ShopForm from \"./adminComponents/shopForm\";\nimport ProductList from \"./adminComponents/productList\";\nimport ProductForm from \"./adminComponents/productForm\";\nimport ProductUpdate from \"./adminComponents/productUpdate\";\nimport ShopSetting from \"./adminComponents/shopSetting\";\nimport ShopSocial from \"./adminComponents/social\";\nimport Account from \"./adminComponents/account\";\nimport ProductDetail from \"./components/productDetail\";\nimport PaymentSuccess from \"./components/paymentSuccess\";\nimport CustomerOrder from \"./components/customerOrder\";\nimport CustomerAccount from \"./components/customerAccount\";\nimport PaymentError from \"./components/paymentError\";\nimport ApplicationSuccess from \"./components/applicationSuccess\";\nimport DeliveryDetail from \"./components/deliveryDetail\";\nimport ShopCreate from \"./components/shopCreate\";\nimport AccountVerificationStatus from \"./components/accountVerificationStatus\";\nimport UserOrder from \"../src/adminComponents/userOrder\";\nimport OrderDetail from \"./adminComponents/orderDetail\";\nimport StoreReview from \"./adminComponents/storeReview\";\nimport AvailableTime from \"./adminComponents/availableTime\";\nimport PostCode from \"./adminComponents/postCodes\";\nimport Privacy from \"./documents/privacy\";\nimport Disclaimer from \"./documents/disclaimer\";\nimport TermsAndCondition from \"./documents/termsAndCondition\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport {\n  MEAL_CREATE,\n  MEAL_LIST,\n  MEAL_UPDATE,\n  SHOP_CREATE,\n  LOGIN_URL,\n  SHOP_REVIEW,\n  REGISTER_URL,\n  AVAILABILITY_URL,\n  MY_ACCOUNT,\n  DASHBOARD_URL,\n  PAYMENT_URL,\n  PAYMENT_SUCCESS_URL,\n  DELIVERY_DETAIL_URL,\n  USER_ORDER_URL,\n  LISTING_URL,\n  SHOP_SETTING_URL,\n  SHOP_SOCIAL_URL,\n  SHOP_PAGE_URL,\n  PRODUCT_DETAIL_URL,\n  SHOP_SIGNUP,\n  VENDOR_APPLY_SUCCESS,\n  ORDER_DETAIL_URL,\n  PRIVACY_URL,\n  TERMS_AND_CONDITION,\n  DISCLAIMER,\n  ACCOUNT_VERIFICATION,\n  CONTACT_US,\n  PAYMENT_ERROR_URL,\n  BANK_DETAIL_URL,\n  DASHBOARD_USER_URL,\n  POST_CODES_URL,\n  CUSTOMER_ORDER,\n  CUSTOMER_ACCOUNT\n} from \"./utility/global\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <Switch>\n           \n            <Route exact path=\"/\" component={Landing} />\n            \n            <Route\n              exact\n              path={PAYMENT_SUCCESS_URL}\n              component={ProtectedRoute(PaymentSuccess)}\n            />\n            <Route\n              exact\n              path={CUSTOMER_ORDER}\n              component={ProtectedRoute(CustomerOrder)}\n            />\n            <Route\n              exact\n              path={CUSTOMER_ACCOUNT}\n              component={ProtectedRoute(CustomerAccount)}\n            />\n            <Route\n              exact\n              path={PAYMENT_ERROR_URL}\n              component={ProtectedRoute(PaymentError)}\n            />\n            <Route\n              exact\n              path={POST_CODES_URL}\n              component={ProtectedRoute(PostCode)}\n            />\n            <Route exact path={LISTING_URL} component={StoreListing} />\n            <Route exact path={LOGIN_URL} component={Login} />\n            <Route exact path={REGISTER_URL} component={Register} />\n            <Route exact path={SHOP_SIGNUP} component={ShopCreate} />\n            <Route\n              exact\n              path={SHOP_CREATE}\n              component={ProtectedRoute(ShopForm)}\n            />\n            <Route exact path={PRIVACY_URL} component={Privacy} />\n            <Route\n              exact\n              path={ACCOUNT_VERIFICATION}\n              component={AccountVerificationStatus}\n            />\n            <Route\n              exact\n              path={TERMS_AND_CONDITION}\n              component={TermsAndCondition}\n            />\n            <Route exact path={DISCLAIMER} component={Disclaimer} />\n            <Route exact path={PRODUCT_DETAIL_URL} component={ProductDetail} />\n            <Route exact path={CONTACT_US} component={ContactUs} />\n            <Route\n              exact\n              path={VENDOR_APPLY_SUCCESS}\n              component={ApplicationSuccess}\n            />\n            <Route\n              exact\n              path={MEAL_CREATE}\n              component={ProtectedRoute(ProductForm)}\n            />\n            <Route\n              exact\n              path={ORDER_DETAIL_URL}\n              component={ProtectedRoute(OrderDetail)}\n            />\n            <Route\n              exact\n              path={AVAILABILITY_URL}\n              component={ProtectedRoute(AvailableTime)}\n            />\n            <Route\n              exact\n              path={SHOP_REVIEW}\n              component={ProtectedRoute(StoreReview)}\n            />\n             <Route\n              exact\n              path={BANK_DETAIL_URL}\n              component={ProtectedRoute(BankDetail)}\n            />\n            <Route\n              exact\n              path={MEAL_LIST}\n              component={ProtectedRoute(ProductList)}\n            />\n            <Route\n              exact\n              path={MEAL_UPDATE}\n              component={ProtectedRoute(ProductUpdate)}\n            />\n            <Route\n              exact\n              path={MY_ACCOUNT}\n              component={ProtectedRoute(Account)}\n            />\n            <Route\n              exact\n              path={DASHBOARD_URL}\n              component={ProtectedRoute(Dashboard)}\n            />\n             <Route\n              exact\n              path={DASHBOARD_USER_URL}\n              component={ProtectedRoute(DashboardUser)}\n            />\n            <Route exact path={SHOP_PAGE_URL} component={ShopPage} />\n            <Route exact path={SHOP_SETTING_URL} component={ShopSetting} />\n            <Route exact path={SHOP_SOCIAL_URL} component={ShopSocial} />\n            <Route\n              exact\n              path={USER_ORDER_URL}\n              component={ProtectedRoute(UserOrder)}\n            />\n            <Route\n              exact\n              path={DELIVERY_DETAIL_URL}\n              component={ProtectedRoute(DeliveryDetail)}\n            />\n            <Route\n              exact\n              path={PAYMENT_URL}\n              component={ProtectedRoute(Payment)}\n            />\n            <Route  component={ErrorPage} />\n          </Switch>\n        </Router>\n        <ToastContainer />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport \"core-js/stable\";\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.scss'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport 'semantic-ui-css/semantic.min.css'\n \n\nReactDOM.render(\n \n    <App />,\n  document.getElementById('big-eat')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}